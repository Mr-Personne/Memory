%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 1410.i042.024.S.m004.c11.five sences concept.eps
%%Creator: Adobe Illustrator(R) 18.0
%%For: IvAN
%%CreationDate: 10/28/2014
%%BoundingBox: 0 0 450 450
%%HiResBoundingBox: 0 0 450 450
%%CropBox: 0 0 450 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 18.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 18.0.0 x18 R agm 4.7713 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c011 79.156289, 2014/03/31-23:39:12        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Print</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2014-10-28T19:15:18+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-10-28T19:15:18+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-10-28T19:15:18+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2014 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEC0ALQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAC0AAAAAEA&#xA;AQLQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9AKuKqqriqoq4qqquKqi&#xA;riqoq4qvVcVVAmKrwmKrwmKrgmKrgmKt8RirdBirsVdirsVdirqDFWuIxVoriq0piq0piqwpiqwp&#xA;iqxlxVTZcVU2XFVNlxVTZcVUmXFVNlxVUVcVVFXFVVVxVVVcVVFXFVRVxVUVcVVAmKrwmKrgoxVv&#xA;FXYq7FWiyggEgEmgr3PXFWpZBHE8h6IpY/ICuIQTQt5t/wArR1f/AJZLf/h/+aszvyse9038pz7g&#xA;7/laOr/8slv/AMP/AM1Y/lY96/ynPuD0e2m9a3imG3qIr0/1hXMIii7mJsAqgINaHpscCXYq7FXY&#xA;q0QMVWlMVWFMVWFcVU2XFVNlxVSZcVU2XFVJlxVSZcVVFXFVVVxVVVcVVVXFVRVxVVVcVVFXFV4X&#xA;FW8VdirsVdiqG1LUrPTbN7u7f04Y/vJ7Ko7k5KMTI0GGTIICzyeSa/5p1DVtQW55tBFA1bWJCRw/&#xA;yqj9r3zYY8QiKefz6qWSV8q5J3D+YWqXOmHT/qf1nUJVaITJWpDClfTUbt8sqOnAN3s5I18jHhq5&#xA;MZ/Q10ppPJBbnoVkmjDD5oCWH0jL+MOF4J60Pi79DXTGkEkE56cY5oyx+SEhj9Ax4wvgnpR+LJj+&#xA;YOo2elLp31P0NQgRYRK9dgq05GNgPi2+WUflwTd7Ob+flGHDVSCS6F5r1LS9Ra6Z2uI52rdxuSef&#xA;+VU/tDsctyYhIU42DVShK+d83rWm6lZ6lZpd2j+pDJ94PdWHYjNfKJiaL0GPIJixyRORZuxV2Kux&#xA;VoriqxlxVTZcVU2XFVJlxVTZcVUmXFVJlxVUVcVVVXFWG2GpajceW7C4ttfa51O/S0WXkLNhC9wF&#xA;5MEjhUj4m/arkq3YqupeZtQnsdFltbo6eLqG3udSlCxExCa5t7cofVWRFP76TenVMQE2yJrqe28u&#xA;X93p922tXVvDNLbsxhYvKkZZIv8AR0iX7QHau+DqryZvPHn9dL0y7XzNby6Vq0unrPrqwWirYTXD&#xA;utxaujClIko5aRQduoyzhDGyjtX/ADL1fy9rdrYf4nh1+wvdLu2j1OGK1CLegyeg37gMp4sipxrT&#xA;fcYBG1tZpvnr8xdTktRaapCuoQWOmXUGjSQW4fVRdUN1IHbhw9L4to/5emHhC2VTRfPPml/KOoeY&#xA;D5st9S1eC2vJF8sejZrLF6MrosrenxmISNfVoRuMBiL5LbNvy31HzNeDUP0nqkWvaWBbSaTrcMcM&#xA;Im9SMmeMxwnb0nAHxAHffIypkGa5FLsVeffmZp+qGSK99Qy6coCemBtE57mn83j9GZmmkOXV1HaW&#xA;OdiX8P3MLsbI3LuWf0reEc7iYioVa02HdidlHfMmUqdbCHF7gnmkaZqutF7XSI/qWmj4ZpmO7d/3&#xA;jgVc/wCSPhHh3yqchHc7lysWOeTaG0fxzZTZ/llosaD6zNNcSdyCI1+gAE/jlB1MujnQ7NgOZJde&#xA;fllosiH6tNNbydiSJF+kEA/jiNTLqs+zYHkSGLavpmq6KUtdXj+u6afhhmU7r3/duRVD/kn4T4d8&#xA;vhIS3GxcHLjnj2nvH8ckjvrI2zoVf1beYc7eYCgZa03HZgdmHbLYytxZw4fcWY/lnY6r9YlvFcx6&#xA;aQVdCKiV+3H/AFfH6MxtTIcursezYTsn+H71LXvzD8y6b58OkPFZW2hmSKC1ubiO4c3MkkBkZFuI&#xA;WeKKZZBRYZUXmNw3TMUDZ2hkQWP6T+dvmG9FndXCWFnYwppC6rzt71zJLqyCQmB4fWWFEU8VMoYM&#xA;3w1GHhYjIUZoP5teaPML+W9OsLaGz1TWBqH1q6u7C8+pA2lTH9XcyRLLVVo/GRqHwxMUiZNMr/Kb&#xA;zN5j80eTbPzDrZs1fUQz28FlFLEI1R2jIcyyzciSlaimRkKLKBJFlmWBm6mKrGXFVNlxVSZcVUmX&#xA;FVJlxVSZcVVFXFVVVxVILLQbmHy7oVqLZUu7T6j9bVeAI9Dj6lWBo1KHocle6KQMflbVbddakNv9&#xA;aV9QtH0+3RowXs4rwX8gHqMiAiS4mQBiNlHamNopk0kF/e+X76CxgfRb+aGaK0aX0qxytGRHL+4e&#xA;ZdmIPWu3TAl5He/l558mmg1SXQLVpYJ9M/SGlW9xBx1GSxeR5ryUuI4lMofjxNTua1yziDGimGuf&#xA;l3rPmie8eXy3HoED6HPbWlsktq6pfpeJcQ/3BAHqBN2p06nAJUpFqMP5d/mC9hpum3FpbPGkelvZ&#xA;ahJMgn0eWyCG5WMKrl/WZP2GpjxBaKJ8teVvPFn5XuNDg8txaPrQjuTb+aTPaO5aS4aZEYRepMAy&#xA;N6femJItQCyv8uPLmtaZea5qGo6fb6NFqssDwaRaSLLHE8MZSWWqKiAzGjUHhvkZFkAzfIpQer6r&#xA;a6VYve3IYwxlQQgBb4jQbEjJQgZGg15coxx4jyYVr/5iafe6Vc2dpbyiS4T0+cwQAA/a2DN26ZlY&#xA;9OQbLrM/aEZQMQDux6DT5bqfT9Cg+GSfjPdN/lSLzFf+McXbxJy4yq5OJHGZGOMddz+PIPRdW1vy&#xA;15M0SOS9mW1tI6R28QBaWV/5Y0X4ndj4fM7Zr5Ek2XfwgIAAMDvfzV88XlZ9G0S202wWpE+ruxkZ&#xA;ezGKJoxH8i5zUZu3NHjlwmfFLuiDL7nMhos0hdUPPZ1l+annmz4z6xolrqVg1C02kSMsiL+0wila&#xA;QSewDjHD25o8kuET4Zd0gY/es9FmiLqx5bs70jXPLPnPRJHsZlurWQencQsOM0L/AMsiN8SOpG33&#xA;jbNvEkGw4c4CYILzufT5bWfUNCn+KSDlPaN/lRrzNP8AjJCPvAzYCV1J0EsZiZYz03H48wyPy7+Y&#xA;Ol2Wk21ldwSiWBeHOJUKEAmh+0prTrt1ynJpyTYczT6+EYCJB2Te18t+SPMF7H5o/Rkct+9KXMgK&#xA;sWiUxKzIDwZ0Wqq5FQOhzGkDE0XYYpxyDiDZ/LLyGZLGRtGgZtOiigtK8iBHAeUSOC1JAhFV51pk&#xA;bLZwBH2PlDy5Y/oz6pZLF+h/X/RtGc+j9ar61Ksa869642kRCK0TRNK0PSrfStKtxa6fagrb26lm&#xA;ChmLHdix6se+AlQKR2KXYq7FVrLiqky4qpMuKqTLiqiy4qqKuKqqriqsq4qqquKr8VdirsVdirsV&#xA;dirsVY5+YP8Ayi1z/rxf8TGXaf63D1/90fg8kzYvPs18vuYPN+uXCQvdSWUV28FvHTm5ikCqiV2q&#xA;w+EZiZj+7DtdIP8ACJeV/ekcXHWL0eYb6ZL6+mWkEi19K3j/AN9QI32KftE/Ex6+A8k7c7Y1GbIc&#xA;cgccB/D/AMV3/d973Wi0mOERIeonr+pg3m159T85Wujz3psbMuY1m6U4wJL8BagDu0nHl8gO4O67&#xA;CxQxaQ5RHjnV1/nSjv5Dhuvf5Ea/tPLLjq9v2D9bvKTz6Z5yudIgvTfWYcRvN1rygkl+MrUF0aPj&#xA;y+Y8AHt3FDLpBlMeCdXX+dGO3kRK69x7yXszLLjq9v2H9TNrpF0m8PmOwnTTtRt1/ezsD6M8feG4&#xA;RaeordB+0DTjml7D7Y1GHIMUQckD/D/xPd933uw1ukxziZH0kdf1plc61a655k0TUYI2tzeJbC6g&#xA;f7SO0hR0J6H4e+et4T+7LwurH+ER86+9i+Zbqnrf5ff8otbf68v/ABM5rtR9b0Gg/uh8WR5S5jsV&#xA;dirsVdirsVdiq1lxVRZcVUmXFVFlxVeq4qrKuKqyriqoBTFXYq7FXYq7FXYq7FXYqk3m/TLvUtCm&#xA;tLRQ87shVSQv2WBO5y3DIRlZcbV4zPGQObzHUfKev6dbvc3doUt0pykDowFTQfZYnqczo5YyNAuk&#xA;yaXJAWRsmei6mlh5qtdQkPG21GMGRuwMo4v/AMDMpyucbgR3N+HJwZRLpL8fej/O/kHVEupvMHlE&#xA;ol/KTJqOkSbW92e8if77mPcj7Xffrz/aHZWDVxrIPV0kOY/WPIvS4NVPEfSdu7o8m8waj5Z1Rwnm&#xA;OzuNI1GKiSpKhKMFJ25jjUAk0KkH9WaXS9ja3RkjBOM4eexH3j52PJy8urw5vrBB+azRNX8q6Ny/&#xA;QNrPql84KoETjGoJ/nNaAkCpYk/qx1XY2t1hAzzjCHluf0D5UPJcWrw4foBJ+TINJ0DXtdvY73W2&#xA;FEblb2MdfRi8Dv8Abf8Ayj9Gbrs/srBpI1jHq6yPM/qHkHEz6qeU+o7d3RPIPSTVZbiKn1fTo2cN&#xA;2LIOKffKy50EI1ADveazZOPKZdI/j71PT/K+v6hAtxaWbSQvXhJVVBoaGhYr3GWSyxGxLj49NkmL&#xA;A2en+T9NvNO0GC0vE9OdGcsgIanJiRupIzBzSEpWHeaTGYYwDzTrKnJdirsVdirsVdirsVdiqmy4&#xA;qpMuKqLriq9BiqsgxVVUYq3irsVdirsVdirsVdirsVdirD/zA8ywWllJpUNJLq5WkoNCI4z4/wCU&#xA;e33+GZOnxWbddr9SIx4BzLAbKSK5tjp07iNuReznc0VHNAyMT0V6DfsfauZctjbqYESHCfgzLyx5&#xA;3+qAaVrvKGWGkcdw4OwGwWT/AJq+/wAcxsuC94uy02t4fRk6Mi1Ly9oWuRicrHKW+zOlGB+kdcxS&#xA;KdoJAiwkb+RdMsgZnMcUS9XchVHzJxAtTIAWUk1XWbf/AI5mhqZppfgadB9BWP8A5qzKxYK3k6vU&#xA;63i9GPr+NkivZIra2GnQOJG5B7ydDVXcVCopHVUqd+59qZkx3NutmREcI+L0HyB5jt7ywj0yQCK7&#xA;tE4oo2EkY/aHuP2vvzD1GMg27fQagSjw9Qy3Md2DsVdirsVdirsVdirsVdirRGKqTjFVFxiq9Biq&#xA;sgxVfiqW/wCI9H/Sx0o3Ci8A+z+zy/k5dOXtk/DlV9Gj8xDj4L3Qnne6ltvLN3JC7RykxqjoSCKy&#xA;LXce1clgFyDDWyMcRIeVfpnV/wDluuP+Rr/1zYcEe50PjT7z80y8ua3qo1ywR72dopLiNJEMrlWD&#xA;MF+IE0PXIZIDhOzdp80/Ejuefe9burq3tbd7i5kWKGMVeRjQAZrgCdg9BKQiLPJD6TrFhqtr9Zsp&#xA;OcYJVgdmUjsw7YZwMTRYYs0cguKNyLa7FUHq2s6VpFobvU7qO1twaB5DTkx6Ki/aZj2VQScICsV1&#xA;TSI/NtlJqNtYXGnXcZpbSXiLC1ygFamPkZEHZfUVT7Uy7Fl4NjycLV6QZBY+p53PBNBM8MyGOWMl&#xA;XRhQgjsczwbdDKJBopnEb+TTklvLGS705KpHc0ZWQL2WUA/D7MCPDIGr2NFvHEY3IXHv/apRnTlJ&#xA;a2vp7Ukbq6fhzjbf/gRhN9QxHD0JDpP0cxDXN/PckdFSP8Ocj7f8CcRfQKeHqSVSd76LT2ktLKSz&#xA;0+T4HuSGZpK/stKQNj4KAMAq9zZTIyEbAqPf+1LYIJp5khhQySyEKiKKkk9hkyaaYxJNBm89rP5D&#xA;8vHXF0p9b1IuiTwwOFaFJNvg+F+XxUDUHfwzByZeM10d7pdKMQs/Uy/y95j07XLP1baQC5iCre2R&#xA;5LNbykVMcqOqSKQf5lFeuUEU5oKaYEuxVA6xren6RbC4vZOKseKIu7sf8ke3fJwgZGg1Zs0cYuSI&#xA;s7y1vLZLm1kWWCQVR1NR/t5Egg0WcJiQscnkXmDWdT/TuoCK8mSNbiVUVZXCgK5ApQ+2bHHAcI2e&#xA;ez5peJKiefegP0zq/wDy3XH/ACNf+uT4I9zV40+8/N6r5IupbnyzaSTO0ko9RXdiSTSRqbn2pmvz&#xA;ipF32ikZYgSr/wCKdEOrjShcA3R2qPsc/wDffL+b/a64PClw2y/NQ4+C902ytyFrDFVFxiq5Biqq&#xA;o2xVh3nTzoLEPp2nPW9O00w6RDwH+X+r55k4cN7nk63Wazh9Mfq+55oWYtyJJYmpbvXxzOdLafXl&#xA;3rNzaRRa1qLQ26qDHbsOUrAfZYxrSvsZCMpiIg+kOXOc5ACcqH2/j3paW0VBQJczH+YvHF/wvGX9&#xA;eWepo9Hmfs/WvjTSWdWguZrOVTVGlUOoI3B9SMhh9CYN/ekCHQkfjy/UiNcv/MFxFAmo3BuLZa+h&#xA;IpVo3I78l2ZhXvuMEIxHJnnyZCBxGwoaHrl7o16tzbNUHaWI/ZdfA/wOGcBIUWODPLHKw9g0jV7L&#xA;VbJLu0fkjbOh+0jd1YeOa2cDE0XocWWOSNhLNX8y3P19tG0CBb7WAAbh3JFrZq3Rrl135H9mJfib&#xA;/JG+ABstfpHlS2tbsanqMzarrhBB1C4A/dg9Ut4h8ECey7n9oscSVpPcCUm1jyno+rXkN1dRn1Yj&#xA;8fA8fUUdFenhlsMsoig42bSwyEEo6+tYzpVxaxIEQwPGiKAAAUIAA6ZCJ3ttnH0EDueIfV7j/fT/&#xA;APAnNpbzHCVjKymjAgjqDthQ90gs4jp0VpNGrxCJY3jYVUgKBQg5qid7epjAcNHuS7RfKWkaRdTX&#xA;NshaWQ/uy55emp6qn9euTnmlIUWnDpIYySE6ypyUn1vyvp2qTR3gL2WrQClrqlsQlxGP5SaESJ4x&#xA;uCp8MIKKQem+Yr+yv4tG8yqkV5MeGn6pECtreGlQoBJ9KenWInf9knsa7ltNta1qy0iya6umoBtH&#xA;GPtO3ZVGGEDI0GvNmjjjZePa1rV7q9611dNUnaOMfZReyqM2MICIoPO5s0skrKvot1rsEM4sLlrS&#xA;0aguJi3CMHt8R/a/1fiwTETzDLDLIAeE0FF/0OjlpZbi9kY1dk4wqSTvR3ErN8yow+r3MTwdbl9n&#xA;61ok0RtjBcx/5frRyU/2PpR/8Sx9Xktw7j8/2I+0n1SG2li0TUXlgdT6loKxzAHqRGSw+ZjYnIkA&#xA;n1BthKYBEJbd3X8e5I6kGvQjvlrivSPJXnUXYTTdSel0Pht7hv8AdngrH+bwPf59cLNhrcO50es4&#xA;vTLmzUjbMV2ai4xVcgxVUxV5j5/8sLYXH6TtaC1uXpJH/JK1Tt7NQ/LM7T5b2LpNfpuA8Q5FI7dP&#xA;qMMMyp6mpXO9pHTl6aE0EnHu7H7Hh18MtO/ucWI4QD/EeX4+5lNv5W0fRNJuPMHmyaqwJ686MSVW&#xA;vZqbyOzECnc7b5jZNQeUXZYNAB6sm5SUefvNczg6Loml6VYnaG21Av8AWXU1oWSDisXIfs/FnLan&#xA;2m08CaE8gHOUR6fmS7/F2XIj+GPl1TPSfM/lzzBfJovmTR10fWp6/VWDK0VxTr6FwoQ8u/BgD882&#xA;3Z/auPUR4sUrrmOo94cLVdniJqcfj+1C65oF35alLD/TdFuW4yRvt8g1PsuP2XH9mbiGQT8pOjz4&#xA;DhPfA/j8Fj95YelcRrbkywXIDWr7AsGNKHwZW+E++XCW27iTx0duR5MwvvJ/nLT/AC9b23lS6htd&#xA;bubhX1G9mb92kCxuOCgpLX4mFDxzByZRI78ne6XTeHH+kebM9D0ay0fTo7O0iES7vMeRkaSV95JH&#xA;kb4pHY9Wbc5SS5aPwK7FUp8w+ZLLQ4I5bhHkaYkRJGBuVFdySKdcsx4zPk4+o1EcQs9WFXv5n6rI&#xA;SLS2it07F6yN9/wj8Myo6UdXWz7SmeQAZR5I8xzazYSi6YNeW70kIAWqPupoPkR9GUZ8fCduTnaL&#xA;UHJE3zDvO/mObRrCIWrBby4ekZIDURN2ND8wPpxwY+I78l1uoOOIrmWL2X5n6rGQLu2iuE7lKxt9&#xA;/wAQ/DL5aUdHBh2lMcwCzXy95kstcgklt0eNoSBKkgGxYV2IJr0zFyYzDm7LT6iOUWOibZW5DsVQ&#xA;up6ZYapYzWF/Cs9rOOMkbfeCCNwwO4I3B3GIKse1HyVNd+Xo7C4vnvr+z5/Ur6ZQJDHX4I5iPtnj&#xA;RS+1SOXjl2LLwnycXVaYZI+Y5POLKwEk8v1kmO3tQWunFCQAacV7FmbYff0zPlLudDCFk3yHNkWg&#xA;+XbrzLKJ5v8ARNHtzwhiTw7qlep/mc9cpyZBDzk5mDTnMbO0B+PwXoWnaFpGnIFs7WOMj/dlKufm&#xA;5q345hyyGXMu3x4IQ+kIua3gnQxzxrKh6o6hh9xyINNhiDzYh5i/L+0mQ3Wjj6reJ8QhBpGxG/w/&#xA;yN4dsyMeoI2lyddqNADvDYsIuEa/imkkQpqlrU3SkcTKimjOV7Oh+14jfqDXKG3udZIcYJ/iHP8A&#xA;Henv5f8AliO+mOqXVGt7Z+MUXXlKtDVvZaj55VqMtbBytBphI8Z5B6ZmC7tY4xVtBirGfPHmbUdE&#xA;FkLNYz9Y9TmZFLU4cKUoR/Nl+DEJXbg63UyxVw9WDXWu6r5iu7O0v5VEPqAfAoUAMaMx+S5ljGIA&#xA;kOrlnnmIEjsnnkOzTVNeu9WmQCO2oLePspaoQD2jRaD6Mqzy4YgOVoYceQzPT8fYivzjBPlvT1YE&#xA;2zatYi6A6GMy7cv8nnxzTdoGQ02Th5+HL7i73BXiRvlxD70v8vTWM0Fxp8yIbpZXknhkUfvEZyY5&#xA;BX7ahOK17EU7ZxukIOGEo8qr3HqPnv53bt8o9ZB52kfnjQQ9lJbQMVcRtd6dJUl4bi2IIox3oeQ9&#xA;+vtkITGlzwzw2BkIzHQiXl8PnSSPFgYHusfBmnkjXovOPk2Jb+jTXEAEx8SR9of5QOehgmJefnAT&#xA;iQerCHhlWxvrCb++02b1F9gXEMoHzbh92bG9we950g8JiecT+w/oTaD8yPMUSqrCCbiKVkRqnam5&#xA;Vlys6aLfHtHIO4vTbC4a4sbe4cAPNEkjAdAWUE0+/MGQo07uEriD3hZqWp2Wm2j3V5II4k+9j2VR&#xA;3JwxiZGgjJkjAWUp8v8AnTStYkMC1trqp4QyEfGB3UjYmnUZZkwmLRg1kMhrkUu/M+HlotvL3juA&#xA;PoZG/oMnpT6mntKPoB83mWZzpEz8v+YLzRLt7m2VXMiGN43rxIqDXYjcUyvJjEhRb8Gc4jYd5g8w&#xA;Xmt3aXNyqoY0EaRpXiBUmu5O5rjjxiIoLnznKbKWZY0PTfywg46LcTd5Lgj6FRf6nMHVH1O77Nj6&#xA;CfNMvMHnTStHlEDVuLqo5wxkfAp7sTtWnQZDHhMm7PrIYzXMprpup2WpWiXVnIJIn+9T3Vh2IyuU&#xA;TE0W/HkjMWF9/O9vYXNwgBeGJ5FDdKqpIrSnhgiLNJySqJPcHl1x+YfmWZGQSRxBhQlIxXfbYtyz&#xA;PGniHRy7QylLo7eSS00/T4TSTUZfVf3+MwxA/wCqQ5+nJ3uT3NIjYjEfxH9g/SzjXPOel+V/qvl7&#xA;SrOTVtb9MehpduVUqg/3bcSn4YlP8x6ntmrzZYxBnM0Ho8WOgIxCUfpj83JK3IfRIGp8GntHcyJT&#xA;c/HOHVuXbZaZqz2xiuqlXw+5y/yk65hptb/Ni/3H6K0VEoAoWW8kdh1NSYlVG7ClccnbGIfSDL7F&#xA;jpJnnQVYPzJ1vRZVj866bFDZO3Fdc00vJaoSQAJ4XrLEP8qrDMvT63Hm2ifV3FqyYZQ58lnneG3s&#xA;9YsNds+EtteKHcoQUkoBUgjYrJG3brm3wHiiYuj10ODIJjqkcGt6t5evLu00+cCH1TsyqwYKaK24&#xA;2quWmAmAS4kc08MiIna2c+RfMmpa0L0XvAm39LgUXifj51rv/kjMXPjEap2mh1Esl8XSmUsMx3Pc&#xA;vTFWA/mt/wBKv/nv/wAy8zNL1dT2p/D8f0MO0Sh1KMUqWWRVHT4mjYL+JzInyddh+r8dzO/ytZDp&#xA;l6o+2JgW+RQU/UcxdVzDtOzD6T70f+ZmnDUPIOuwc+Dx2r3MTCm0lrS4j6/5cQzFoHY8i7O3n+ks&#xA;da1HSZIV4G2SPULmUdY1ljISIHxkJNf8lT4jPNuzNJLDLJIn02YD+kQdz8PvPveh1OUTER1+r3Lv&#xA;PHmKCxeefq1jEbeFBu0t3c8WWJR/khVNfc+GZWbSy1E8eCP8UuKXlEWL+Nn5ebVHKMYlM9BQ8yUw&#xA;/KGyn07S7W3f7SIqt86b56ATZdEENqzK+t+YHjNIwJOXev75F/4nmwh9MXn8p9c/x1DHsucR7lpB&#xA;po1kaE0tojQdT8AzVT+ovUYvoHuDyXzN5gvNZ1BpJg0cMRKwW5/YHuP5j3zY4sYiHn9TnOSVnklC&#xA;syMGUlWU1VhsQR3GWOOCmyrr3mCUyTTNMkCgSXE7cYYl8WY/CP1nK/TByKyZTubrv5BcU8tWWzmX&#xA;VZx14H0Lev8ArEGRvuGPqPktYo98j8h+tadegUFYNKso06Dkjyt9LSO2Ph+ZXxx0jFw16BgFn0qy&#xA;kToeKPE30NG64+H5lfHHWMVwTy1e7IZdKnPTmfXt6/6wAkX7jj6h5rWKXfE/MfrWsuveX5RJDM0K&#xA;TqRHcQNyhlXxVh8J/WMfTNayYjsavu5FKWZnYsxLMxqzHcknucscclN/LPmC80bUFkhDSQykLPbj&#xA;9sew/mHbK8uMSDkabOccrHJ61q5ro16aEVtpTQ9R8BzXQ+oPQZfoPuLw3Nq8uyHSHVNd8vvJujCM&#xA;L/yOdP8AiQymf0ycvEayQ/HUsWvrXzN5c8/a1bza2LG91W4a6tJ7q3jmhvIWJMSrKeDI0deBQGg/&#xA;ZGcn21llCImcXi4xzqRBj8N7Hn83rNHEEkcXDLzHNOzP+YsvwvrFlbLT7cFmXau3aSSmcqe3dKOW&#xA;KR986+4O0GiynnID4ftWIfzEtVLRa9b371r6d5ZrGvv8UDKfwxj29ppH1YTEf0Z39hH6VOhyDlMH&#xA;3j9SVeZvMHm2306UaxrVjZicFEsbK09eScNsUVbhm+10+zmx0Gtx58gjgwzl3ylLhEfM8I/S4+fD&#xA;KEbnMDyAu/mpeVjrFp5MtdL1B2eKOZprWNzyMKsDWNT/AC71p453+n3kXlO0voA8031kEalKp+0o&#xA;RW/1lRQfxGZUOTq831My/Kn/AKWn/PD/AJmZjaro7Lsv+L4fpZ+emYbtnDpiqSeZfK1trwt/WmeE&#xA;23PiUANefGta/wCrluLKYONqdKMtWapg/mDynL5a+qalBcfWUWZa8k48XX417tUHicyseXjsOr1G&#xA;lOGpA3uq+VtTt9E8xvEzcdM1FQYZGNAFY1iZv9WpVvA18MGWJlHzDLTZRiyV/DL8BkP5sXU9v+Xu&#xA;rmBxG1wkVo0h6LHdzx28h/4CU5rsk+CJlV0Cfk7wCyB3sI0u/k0XT7y2gtSty8zyC5k4i2SFUVI5&#xA;HaoJCRIBx61HYfFnAY9dhOKJMrlX0j6jIkkj4yPP9OzvJYZiR227+lf2MV0S0l8ya0l8Sz6ZalhY&#xA;cxRpZHNZbpx/NIxNPbOu7L0RwxM5/wB7k3l5DpEeUR9rqtTmEzUfojy/Sfi9aR7bQNHe8koHUcYY&#xA;+7SH7I/rm3xw4jTg58wxxJLCaTLpx5Ve71SUFR+0Y0Y7/wCzl6f6ubDr5B0G/D5yP4+Z+5lsH5Vx&#xA;8VM+osSQOSpEBQ06VLH9WY51Xk7CPZffL7GcWluLa1ht1PJYUWMMepCgCv4Zik2bdnCNADueffmR&#xA;oVrbyx6rCyxvcvwmg7s1K+oo+j4szNNkJ2dR2jgAPGOrGNJ0uO5Et1duYdOtaG4lH2iT9mOMHq7f&#xA;h1y+cq2HNwsWLisnaIRYfU/MFzHpumwejZx7w2iGkaL/AL8kb9pvFj9GR2gLPNsuWU8MRt3frZnp&#xA;X5f6Jp8Szamwu5h15VWIHwVerfT18MxZ6gnls7LD2fCP1eop3Dd6VaClvbelEoHxRRqop/qijbfK&#xA;uUGRPNzowEeQp091pV18NzbCaM1q0kauKfI1bf5YiRHJZQEuYtJNV8gaJqMTTaYwtZj04ktET4Mv&#xA;Vfo6eGXw1BHPdwc3Z8JfT6Swwvqfl+5k03UoPWs5N5rRzWN1/wB+Rt+y3gw+nMraYsc3W3LEeGQ2&#xA;7v1ITVtLjthFdWjmbTrqpt5T9oEfajkA6Ov49clCV7Hm15cXDuN4lk/5b6Fa3EsmqzMsj2z8IYO6&#xA;tSvqMPp+HKNTkI2c3s7ACeM9HoV1brcW01uxIWZGjYjqAwpt9+YYNG3byjYI72Ez/lZa8WMF9IGo&#xA;eIdFO/apBXMoao9zrZdmDoWHBZW0+gqt5pcpJH7QjZhuP+Mco/4bMnr5F12/D5x/H2H73oUlj5d8&#xA;+eWki1O3juFIpIhHxwzAblT1X29s184GBd9gzDJC2A6h+T2q2DGLT9Yv0sv91xpcPRR4LWpGa/J2&#xA;dppy4pY4E/1Q5kc+QChKVe9CJ+VusKtYNY1GM/tAXLkEnvRq74z7O00ueLH/AKUKM+QcpS+aK0b8&#xA;rILW6NzOrz3R+3czsZJD82YnMqEIwHDECMe4bBrJJNncq0qWlzqoiSjadYAvO46FENXIP+WaIv0Z&#xA;scceGPmXRanKMuT+jH8fsTHy35TbzILvUrq4MIaZvsKCWdvjbqdvtDHJl4KAXT6XxrkTW7OPLnle&#xA;z0IXH1eWSU3HDmZOO3CtKUA/mOYuTKZ83Z6fTRxXR5pzlTkuxV2KvJPPOs6hfaxJbXEbW8FqxWG3&#xA;b/iZ7Et29s2OCAEbDz+tzSlOjsAllncW01v9RvW4ICWtbmhPpMeoYDcxt38DuO4MyCDYaISBHDL4&#xA;Hu/Yna69JHpkugeZ7T9IaPdxGMMDUtEe6ODRwP2SDUHvlM8IlvHm5uLWSx+mYsfj5sPvvK1jO4tj&#xA;5gu73SVIKWtySpK1qFl4opelP5iM1WLsbDinxwxxE+8fo7vg7Q9rCcaMzXcybTNT0TR4AsCG4kUU&#xA;VFHBdvEkfqGZ8dNI89nGydo4xy3WahdXd/Il/rLGK2Uf6LaL8LOD2jU1op7ufor0zJjER2i63LOU&#xA;zxZOXQfj70ovLyW6uGneik0CIuyoqiiqo7BRsMtAoONOZkbem+T/ADJdXWgT3GoI1LBTW6PSVUUn&#xA;qerADfMHNjAlQ6u70moMsZMv4eve8/bzPr/1iSZb+dDIxcoJG4Asa7KTTMvwo1ydT+ZyXfEVO81P&#xA;V9Znt47qZrmYUigUgDdz02A3JwxjGPJjPLPIQCbRmrB5Lq38v6f+8itW9Ki/7tuW2kkP0/CPADIw&#xA;5cRbcu5GOPT7T1ekaTpen+WtIpVedOVzOaAu4FTueij8Bv45gZcnEbPJ3mm04xjhHM/a8783fmC1&#xA;/AItI+tcXek+oRRkAQgGogqefxNT4gOn0ZzXaPbMBEwxS9b1vZ3YpjLizcPLaN9fP9ST+Xdbnt9c&#xA;sRZX89xBcTRwXVrNJJKrLMDxceqSVYUrUeFDmt7K1+o8YRmSRJz+0dFjlhkTERMQSCABy9yX+bfM&#xA;L3PmHUU1HUbi1trOeS3tLSCaWFFWCNWeRzCVLM3KtWPcAZ6Dgxw4bL5xqsuQSqKa+S/zMk022kh1&#xA;k33oxyD6pq00LPWClQLmh9Q8WJ+Ir07g75XkwG7A2bsOpBAEiOJ6he2ul+bNGIUp6ygNDKpD8GZQ&#xA;ysrD7Ubihr3Hv0qx5DEtmowDLGj8Hn2kh47q48v6h+7ium9Kjf7quV2jkH0/CfEHM6fLiDpMWxOO&#xA;XX7D0Qdnqer6NPcR2szW0xrFOoAO6HpuDuDkpRjLm1QyzxkgGlRfM+v/AFiOZr+dzGwcIZG4Eqa7&#xA;qDTB4Ua5MvzOS74iz/zl5gvIPL0Nxp6MI75Ryul/3UjqCOnRmrQH+OYmHGDKj0dtrNRIYwY/xde5&#xA;5laXUtrOs0VOS1BVhVWVhRlYdwwNDmcRbpISMTYTvTby70+4bUtActERW5sW+JkA6hl/bQdnHTvT&#xA;KpAEVJycczA8WP4j8fey7TvzK0WdAL2OS1k/aNPUj+gr8X/C5jy00hy3djj7Rgfq2RM3nzylGpdJ&#xA;2mb+RInB/wCHCD8cgNPNslr8Q638GMav5s1PXVkttNh+p2IH+kTsQDxP+/H+yo9huffpmRDCIbnc&#xA;uDm1c8u0dosdvLq3jt/qNkS0NQ1xcEUMzjpseiLX4R9J8BcAbsuFOQA4Y8vvTTyNq2pWesx29rG1&#xA;xDckLPAPAftiuwK5DPAGNlv0WWUZ0NwXrea56B2KuxV2KpD5s8rQa3ahkpHfQg+hL2I/kf2/Vl2L&#xA;LwnycTVaUZR/SeVjSNSOonTRbub0NxMNN6+PhTvXpmfxir6Oi8GXFw16k/1Ty1rvl7TRcG5iltXK&#xA;ie3I5qHb/IcFT/rdcpjkjM05eXTZMMbsV3JGNRsyayabbsfFWmTf5CSn3DLeE97i+IOsR9v61Wzv&#xA;Z5bqG2sLW3tp53WKNwpc8nIUENM0pXc9VwGO1ksoTJIEQAT+Otpj5i8m67YQfX7iT67y3uZULMyH&#xA;xYtuR/lZDHmidhs3ajR5IDiPq71nlLylPrU/rTVj06M/vJOhcj9hP4nthy5eH3o0mkOQ2fpZ95pt&#xA;Hg8qXNnptuTRFjjhiUmichyoBv8AZrmJiNzsu11UKxERDyAggkEUI2IObF55NvLNI7+W9Ir9Qt5b&#xA;lR/lqvGP/h3XK8vKu9yNNtIy/mglO/y008XOsT30nxfVE+En/fktRX/gQ2VamVRpyezcdzMj0TL8&#xA;1L2mgzW4k4+rJBbFBUM/qyq0ir41ir9Fc0Ha2Tg08iDRew7FhxamJr6QT9m32081W8vfUa3+rIs6&#xA;qHRfUJRkrQ0YJUEeHHPO/DjV3t7v2vZcI53sg9NuG+tpqF38KW9/F9eWMjkqQMpQRtU/ZLVbv1zZ&#xA;6OUMeeF3w8wjUwJxmEeZga+KT61dOuoXGr2PxJc6pMNMWQgmRbhiJRK+1FZk5IeooBnqeOxEPkmb&#xA;hlMjpW6YNqOq+slmLOFrtkMsqmZvSSOvEfF6dSzGu3HLuI8nC4I1d7e5nX5cak2n6DZ3EbkpZXlz&#xA;p1zEa1WAzM8CtX+RXXj7NmtzCpF3uCVwB8kw/MezSLVLbUYNlvY6lh/PFQV/4ErmTppXGnU9pY6m&#xA;JDqk3makl/FegU+v28Vyw/y2XjJ/w6NluLlXc42p3kJfzgClIBJAAqTsAMscd7B5UtpZfKtta6jA&#xA;R8DRvDKtKpyPGqn/ACaZrcp9dh6LSxJxASDA/N/lCbRpjcW4MmmyH4W6mMn9lv4HMvDm4tjzdVq9&#xA;IcZsfSu8v+R9Z1C2+vJL9SpRrVn5BnPiOO6j3xyZ4g1zTg0U5ji+nuSy8vrqG6mtr+CC6mgkaOR3&#xA;SjFkJU1kjMbtuOpOTEQRYaJzIJEgCQpHU7cGsWm2sbeP75/wllkX8MPD5lj4g6RH2/pKfaV5X1rz&#xA;Fppu3vEjgUsLa348U5rtsiBUQHxAyqeWMDVOVi0080bvbokB0TVBqY0w27fXS3ERfxr04969Mt4x&#xA;V9HF8GfFw16nqnlbyvbaHaEVEl7KB9Ym/wCNV/yR+OYGXKZHyd7pdMMQ/pJ5lTlOxV2KuxV2KrBB&#xA;AJzOI1E7KEMtByKg1C8utK4bRwi76pX5r0u41PQriztgDO5QxhjxHwuCan5VyeKQjKy0arEZ4zEc&#xA;3n//ACrnzL/JF/yMGZn5mLqf5Py+SP0HyJrtprFndXKRiGCVXcq4J+HfpkMmeJiQG3BockZgnkGW&#xA;3d9dR+c9OsDKPqN3p19K0BA+Ka3mtVU1P+RO22YfR3CcQQQwRLDBGsUSCiRoAqgewGJNrGIAoL8C&#xA;WO+dNN0aTR7u5uYYhdJGxgmNFcuB8IDChb5ZdhlLiADh6zHAwJIFvONILDTNZKjf6tGPoNxFX8Mz&#xA;Z8x+OjpsX0z936QzH8rAv1K/P7RlSvy4mmY2q5h2PZn0ySH81bu5N9ptvFH6kqTTXNCeIKRARcAD&#xA;sWIm28Ke+cp7RZAMQif4i9x7PYxc5E9APnv+hhrO5mWa3VIJ7j4WN0G5/ANlVARt1OzZxoG1HcDu&#xA;ekrajuB3KUQf0YIhFBLEbmEwJBUJO3rCsRStfip2OZmk3zx2JN8ixykVI2R6T8NuaVXoYx6hD6Ft&#xA;Hbi+u2u0uyWitj9YYrH6exJ3qNwM9Zx/QHyHP/ek730pUjkcXL3F2I7q5sgET6gJPUpKPsPESwp0&#xA;Iq33Zb73HI2obA96e+Tbu6+p+ZYLqH0ZZmsr6OMNy4qZPRCsBsH/AHAJp4+2YOpB4rdroyOCh0Zp&#xA;5vm9Xy/phbd1dgPkVFcOl5lxu0/pikerljpmjFhv9WkH0C4lp+GZMOZ/HR12X6Ye79Jej+S9N0aP&#xA;R7S5toYjdPGpnmFGcOR8QLGpX5ZhZpS4iC7nR44CAIAtkWUuYtliiljaOVFkjYUZGAKke4OIKCAd&#xA;ixTStV82S/mJrWm3EcH+H7a1tZbYBx6yGUyKGooNebQvUMdhx8ckQKXqk+ueQNbvNXu7u3aH0Z5W&#xA;kTm5DfFvuAuZcNRERALqM2gnKZIqigf+VaeYv5rf/g2/5pyX5mLV/J2TyZ95W0qfStDt7K44meMu&#xA;ZChJWrOWFCQOxGYmWfFKw7XS4jCAieaZmKIyiUovqgFRJQcgpNSK9abZXbfQu12KXYq7FXYql3mT&#xA;WF0Ty7qmtNEZ10y0nvGhB4lxbxNJxDUNOXGlaYhBNC3nWpf85A6DBBFLYwQX6vaafczyJexCKCW/&#xA;maIwTyBXEbQcQzlux6DJcLWcoTNfzi09NV8raZc2a+r5lDs09tcLcwWytIYbVjKqqsn1iReIpSh8&#xA;ceFPicvNI9N/5yIsL2zvrj9DkNaW7XQiiuo5iFS9SyKzhU5QOWk5qGHxLvh4EDKjYPz90Fri4gub&#xA;GS2ls7+7s7lWcVFvaQzym7T4RzRjaOlB0YdcHCvihknkXz8/meWeGfThp00cFvdwx/WYblmgulLR&#xA;81jo0bheJZWG3IUJwEUyjK0Z5hJt/Mvlm8Joj3FzYufD6xbPKtfm9so+nEcmRZFgSlHmy9vrLQLq&#xA;6sn4XEXEhqBqAuFbY1HQ5ZiiDIAuPqpyjjJjzePXd7d3kpmupnnkP7cjFj+ObIRA5POzmZGybTHy&#xA;0PVuLuy/avbSWKMeMigSoPpaOmQycge4t2n3Jj/OB/Wn/wCV9+seoXdkxp9YjWRP9aMmo+5/wynV&#xA;R2BcvsydSMe9V/Na0QWsF0wIkS6gMU+44K5EbqCOzUANdtxnNduQB05NXT2nYUyMxj0MTt3083ew&#xA;gWK6a8jj+rtJzt4Wc0DUpXkacS57DOFGU2OHnW/48nrhM2K5q9jOfrljbpB9XvLa8tBDEhDCjygV&#xA;U0XYpyBqPHM3s4SGphKJuy0aqI8KZJuJhL7ks1C5pqGqW01uLq/vdSvY54GPFSqSEfExBoiw8KfR&#xA;nq+EjgAfJNSD4hJNAINdGs5LazOnRRfVo5vUu7WOU8WcDiauAeRjbseuWcI2pp8Ugni51syryz6I&#xA;0C8VV5XWparIjzmpaSC1IKip/Zjc8AB7965gag+p2+lFYwnnmy4HGysgf7iMu/zkoAPuX8cu0sdi&#xA;XXdpzuQj3IXzKPSuLSy/asrSKKQeEjAyuPoaSmXY+RPeXE1GxEf5oH60utL27s5RNazPBIP242Kn&#xA;8MmYg82mEzE2DT2Hyne319oFrdXrc7iUMS1AtQGKg0FB0Ga3LECRAei0s5Sxgy5pvlbkMd8uk3Hm&#xA;PzNe9Y1ubexjO+4trZJG+6S4cfRhPJAQv5geddS8qQWNzb6QNTgvLmKzLfWVtyk1w4jiFGR6hidz&#xA;2xAtEpUkkf5zWv6Q8x6bLpE/17y7Y/XJIoHEwnlijRrqCJgq1NvJMqM300w8LHxOahH+cOrTaHYa&#xA;ta+XY7mC/v4tMjeHUoXiMtyyLAVkSNqhmko4ZVZCNxjwr4m3JMvK35nT655tu/LcumwWd1p7NHeq&#xA;b6OSdWSJHZkgEas8YeQJzrTEhMZ2aZ5kWbsVdirh0xVBa7pFtrWiaho90zpbalbTWc7xECQRzxmN&#xA;ihYMAwDbVBxCCLDENQ/Jzy3dvZyx3l9ZT2NtYWttPbNbqw/RkzTwSnnC6mTm/wARIoadBkuJicYU&#xA;r78lPLepTXF5q+o6lqerzC3EGrXEkAubb6rIZY/q/pQxRL8Tb8kNceJBxhYfyL8n/oy209Li9jS2&#xA;guLUzo8Alliurxb5hK3o/FwlT4NhQV69ceJfDCJf8mPJkt1Y3U6zzTWM1/MrO0f71NTMjTwS0Qco&#xA;gZm4DYjx61eIp8MJj5Q/LfQ/K19NfWdxd3VzLbRWSPdyI/p20BJjiXgkdQvLq/JqU3wE2mMAEV58&#xA;gmby1cXdupa50t4tShUdWNnIs7IP9dEZPpxjzSU9t54biCO4hcSQzKskTjoysKqR8xgSpajZpe2F&#xA;xaPss8bRk+HIUr9GGJo2wyQ4okd7w2S3mjneBkPrIxRkpuGU0Iza28uYkGuqtF9e027t7kxvDNGy&#xA;yw81K14nrv1G2A1IUyHFAg8kzv3bS9YttZ04Utbk/WbXwFT+8hP+qaqfbIR9UeEt+Q8ExOPI7j9T&#xA;0aVNL81aBUKssM6kNG/Y/tRsRuPmPY5rc2EG4yGz0Ol1R2yQNEPK/M3lG50g214lxNeWFpORdQSo&#xA;rSwVQ8Xdk+0FqN6dDXcb5yPaPYoxQlLF1ey7O7WGcmEgIzI27j5ILQ4orrzBYjTG9e4F1HdXEyNz&#xA;CRJXnyYVCgpVVHvmB2NhynPE1Qi5faExDBLj2BiQPM9Pt3S3zNb2tn5q1Eay/wBVuWvWvrK5dvSW&#xA;SEoqrwc0DAIvB19s9N08o8L5drIz4rAsEKnlzywdRi1PW7q/l0rQZ5l+riKNVluSIwJJImcHiHIo&#xA;pVTXrleXPRPC3YdIDEGfMMn0q2s7SIXXo/VtPtEEVlbVqVQEkCprV3YlmPcmuY0YmRcrLkjjjZa0&#xA;pPr2pzarfCtnaf6Rc+Bof3cQ/wBY0Ue2Z8vTHhDosZ45mcuQ3P6kvl+vald3FyI3mmkZpZuClqcj&#xA;126DfJioimg8UyTzUY7eaSdIFQ+s7BFSm5ZjQDDbERJNdXuWnWaWVhb2ibrBGsYPjxFK/TmqkbNv&#xA;UY4cMQO5feXdvZ2k93cuI7e3jaWaQ9FRFLMT8gMDNJfItrPD5ZtZ7pOF7qJk1G7Q9VlvZGnZD/qe&#xA;pw+jDLmgK/mfyvp/mOztrS+kljjtbu3vozAVVjJayCRA3JX+Ekb9/fEFTG2LRfkh5PhnW8hnv4tS&#xA;Zr17vUopxHcXJv8AkZPVdEX7DMGTgFoVFa71PEw8MI6y/KnQLW1MJu724mfVbbW57yaSNppbq0ZG&#xA;jD8Y1Th+7HLioJ8a4OJIgEfpHkiHSfMF/q9pq1+ItSuZL270pmtzaNPJGsRanoiYUWNafve2NpEa&#xA;LJMDJ2KuxVpemKt4q7FXYq7FXYq7FXMoYFWFVOxB6EYqxryQ7Wltd+XJSTNoMv1eGvVrKQc7NvkI&#xA;v3df5kOSl3oDJcilpURSSqgFtyQKVxWmAfmdqGnSG3slXnfwnm0gP2EYfZPu2xzM0sTz6Oo7SyRN&#xA;R/iYvpF/atA+l6kSLCZuUcwFWgl6CRR/KejDwy+cTzHNwcWQVwS+k/YUXZX+teU9RoKSW8tG4g1h&#xA;nj7OjD8CPpyMoxyBshkngl5fYWZRazoXmJFe2uvqGqqOKc6Kx/yCD8Mi+Hce2Yc8Mou3w6uGTrRS&#xA;6/bzLp0UkKWMDO2yXMVVUeDGOjV/4LKQAHLMieaGub/X3tYlNhDK1BWeSrLy/wCMdBQ/7LChJLt0&#xA;EwuNWujdXC/YgSlF9go+FcthhlJxc2rhj62UPFHqGuXQhiAjgiHJiTSKFO7ux/XmZGMcYdRPJPPL&#xA;y+wO1e/tVgTS9NJNhC3KSYijTy9DIw/lHRR4ZKETzPNry5BXBH6R9pZR+WOoadGbiyZeF/MeayE/&#xA;bRR9ke67nKNVE8+jndm5Ii4/xM/ZEYgsoJXcEitMw3b03irGPOT/AKRm0/ytGatq0nqX4H7On2xV&#xA;560/36SkP+zPhkh3oLJ8il2KuxV2KuxV2KuxVx6YqtU4quxV2KuxV2KuxV2KuxVi3m9jot3bebo9&#xA;orJfq2soP27CRq8/dreQ+oP8kuOpyQ32QU+0nVbDVtOg1HT5fWsrlecEoBUMtSKgMAe2RISimDFS&#xA;FNGI2PWhxV4p5h0/UbHVZ4tQJed2L+sekgY/bHzzaY5AjZ5nUY5RmRLmluTaU0s9WubKI2N7bi6s&#xA;W+I2k4KleQryjb7SEjuMrMAdxzb4ZTEcMhce4/o7lU6bol58Vhfi1c/8e18ONP8AVmUFD9IGPFIc&#xA;x8k+HCX0yryP61eHSfOESBLSSV4j9kW1yrqfojc+GRMoHn9zOOLMPpJ+B/a1Lo3m2VSt28iRj7X1&#xA;m4VFHz9Rx44iUBy+5ZYsx+on4n9qiNN0Sz+K/vxdOP8Aj2sRyr/rTMAg+gHJcUjyHzYeHCP1SvyH&#xA;61K81a5vYhY2VuLWxX4haQAsW4ivKRvtOQO5xEANzzRPKZDhiKj3D9PeleWNCZeXtP1G+1WCLTyU&#xA;nRg/rDpGFP2z8shkkAN27T45SmBHm9rUMFAY1YDc9KnNW9Mp3l5bWVpNd3Uiw21ujSzytsqogqzH&#xA;5AYqkHlK1ubqS68zX8RivNWCC0gcUe3sI6mCIg/ZduRkkH8zU/ZyR7kBkmRS7FXYq7FXYq7FXYq0&#xA;xxVYhxVUxV2KuxV2KuxV2KuxVQvrGyv7WS0vreO6tZhxlgmUOjDwKsCDiqVWF95R0Kwi02zu7e3t&#xA;LYFYrdZvU4AksV3Zm6tsPuyzw5Ho0nUYx/EFs3nrytFUG9DkdkSRvxC0yQwT7mo67EOqJ1bR9N8w&#xA;6ZGJfsuoktrhR8S8hUEV7HuMjCZgWeXDHNHf4JJ5d/L20sJvrOoOt3MjVhjAPprQ7MQep/AZbk1B&#xA;Ow2cbT6AQNy3K38zxbDSLdjGpuGmCpIQOQQKxYA9aVpjpbtHaVcA77eZ5nOlRulaRf6rcm2so/Ul&#xA;Cl2BIUBQQK1NPHIzmIiy2YsUshqLtV0i/wBKuRbXsfpylQ6gEMCpJFaivhjCYkLC5cUsZqSCyTW9&#xA;M/LAWx0i4YRqLhZiryADkUKqVBPWla5g6q7d12bXAe+13mL8vbS/m+s6e62kztWaMg+m1TuwA6H8&#xA;Djj1BGx3TqNAJm47FO9J0fTfL2mSCL7KKZLm4YfE3EVJNOw7DKpzMy5OLDHDHb4oaHz15WloBehC&#xA;ezpIv4laZI4J9zAa7EeqzUrjyrr0VvbXGpRtbxzJO9qJURZzHUokqtuyB6NxFKkCu2xj4ch0bRqM&#xA;Z/iDIcrbnYq7FXYq7FXYq7FXYqsc4qsQ4qqg7Yq3irsVdirsVdiqW655g0/RYEmvGP7xuKRoAXPi&#xA;QCRsvfJwxmXJpz544xckVZajY31sLq0mWWA/tg9PY16H2OCUSDRZwyRkLB2eIX3H67ccKcfUfjTp&#xA;TkaZtI8nmJ/UVDCxek+X/PGjWvl2GO6lb65axcPQCtVuJogVqcelO+YWTBIy25O5wa2EcYBO4Y/B&#xA;+YWtJqz3shEltJs1lX4FQdOJ7N798uOnjVOJHXzE+I8u5lOq2dl500uCXT7wRNASxjdakMwA4uAa&#xA;r0675jwJxHcOdlhHUwBieTD73yF5mtSeNuLhB+3Cwb/hTxb8MyY54l189Dlj0tl/5e6BPp1lPdXc&#xA;TRXVw3ERuKMsaex6cmr+GY2oyWaDsOz8BhEkjcu/MLQJ9RsoLq0iaW6t24mNBVmjf2HXi1Pxx0+S&#xA;jRXtDAZxBA3DELLyF5muiOVuLdD+3MwX/hRyb8MyZZ4h18NDll0pmGlWdl5L0ueXULwStOQwjRaE&#xA;soI4oCat167ZjTJynYOwxQjpoEyPNi0/5ha0+rJexkR20ey2VfgZD15Hu3v2zIGnjVODLXzM+Icu&#xA;5kHmDzxo115dmjtZW+uXUXD0CrVXkaOGanHpXvlOPBIS35OXn1sJYyAdy82zNdMr2PH67b86cfUT&#xA;lXpTkK4JcmUPqD2+91GxsbY3V3MsUA/bJ6+wp1PsM1cYkmg9PPJGIsnZC6H5g0/WoHms2P7tuLxu&#xA;AHHgSATs3bDPGY82GDPHILimWQbnYq7FXYq7FXHpiqk5xVTQ4qrIcVX4q7FXYq7FULqepWum2Ut5&#xA;dNxiiFT4k9lUeJyUYmRoMMmQQjxF43rmtXWsag95cGldoogahEHRR/HNlCAiKDzefMckrLVhbztb&#xA;yyPcNa6exCzvU0kI3CKgI9RvboO5GMjv5rjiaO9R/HzRun211duY9F0v1uOxuJ1Exr/lc/3K/Kn0&#xA;nIyIH1FtxxMvojfmd/2Jv/hXzx6fL04D39GkHXp048Mr8XG5H5XP5fYlGoW9xaOItb0v0SxoLiBR&#xA;Cf8AY8P3LfIL9OWRIP0lxskTHaca9237EvvNPMMa3EEguLNzxSdRSjdeDr+y1O33E5MSvbq1Tx0L&#xA;G4TDybHqsmvQJp0hifrO/VRED8XIdx/HIZq4d27RiZyDh/AexZrXonYq7FXYq8d85R6rHr06ajIZ&#xA;X6wP0UxE/DxHYfxzZYa4dnndYJjIeL8BL7PTzNG1xPILeyQ8XnYVq3Xgi/tNTt95GTMq26tMMdiz&#xA;tFMNPt7i7cxaJpfrFTQ3E6iY/wCy5/uV+RX6chIgfUW3HEy2hG/fv+xN/wDC3njhy9ODrX0qQden&#xA;Tjxyvxcbk/lc/l9iUahbXVo4j1rS/R5bC4gUQmv+Tw/ct8qfSMsiQfpLj5ImP1xrzG37EFf28628&#xA;UiXDXWnqSsD1NIydyjISfTb26HsTkonfzaskTQ3uP4+Teh61daPqCXlua02liJoHQ9VP8MZwEhRX&#xA;BmOOVh7JpmpWupWUV5atyilFR4g91YeIzWyiYmi9JjyCceIIrIs3Yq7FXYqtY4qoucVU0OKqyHFV&#xA;VTireKuxV2KpR5m8vRa3p/1dnMc0Z5wPU8Q9KfEO4OWYsnCbcfU6cZY11eUDR7lNWbTrqkLwkm4e&#xA;oIREXmzbdfhFRmw4xVh0HgkT4TsnvlzQ/wDEmomWRTDo1lRI4Qe3URgjuertlWSfAP6RcvT4PGlZ&#xA;2hH8f2q/5geetZ8qajHp+h2dp9RsLFdRvI5VaskXqtG0cXBlCsFQsWIO9PfNNqdbHFOEZWfElw+5&#xA;3+LBcTw7CIt6HY3trfWkV3ayCW3mUPG47g5lMF9zbW9zA8FxGssLijxuKg4QSOTGURIUeTzLzFoh&#xA;8t6hzjVptGvfgkiJrt1KE/zL9pG/tzOxz4x/SDpNRh8GW30S/H9jXlrXrXyzf3kN1G09vOqNDNEq&#xA;8yv2kPxFfhZWr1xyYzMCl02cYJEHcFmWiedtJ1i+FnbRTpKVLgyqgWi9fsu2Y08BiLLssOthklwi&#xA;0Tqt/wCZbeZhp2kQ30AAIdrv0HJPUcDE42/1sqFOUk+m67+YU/msWV75fgtdDNussl39Z5tG5Lji&#xA;GCgSMeA+AKOI3LbgYaFLZR+t+dtJ0e+NncxTvKFDkxKhWjdPtOuWQwGQsOLm1sMcuE2w3zLr1r5m&#xA;v7OG1jaC3gV2mmlVeYX7Tn4S3wqq165k48ZgDbrdTnGeQA2Ab8u6IfMmoc5FaHRrL4I4gabdQgP8&#xA;zfadv7Mck+Af0iunw+NLf6I/j+16O7afpOmySEJa2NnE0khAoqRxgszbeAFcwSSS7uMREUOTyuLz&#xA;t5+ms5/Nkcy/o6Ii5Xy36MfxWJqf76nq+v6Y5/a41245pMPbUMmplhA9MTw8X9Lf7L2+1zZ6OUcY&#xA;n1O9eT1Czu9K13SIbqHhdafexrInIAhlcVFQe+bsEguFKIkKPJ555j0P/DeoiWNTNo17VJISe3Ux&#xA;knuOqNmdjnxj+kHS6jB4MrG8Jfj+xIjo9y+rLp1rSZ5iDbvUAOjrzVt+nwmpy3jFWXE8EmfCN3q/&#xA;lny9Fomn/V1cyTSHnO9TxL0p8I7AZr8uTiNu/wBNpxijXVN8rch2KuxVxO2KqTnFVFziqmrYqrKc&#xA;VVVbFVQYq7FXYqwDXfzF1O01C5sra1hX6vI8XqSFnJ4kjlQFKVzMhpwRZLqc/aEoyMQBsxQ3k09t&#xA;qmoTGtxcyRxORtT1maVqDw/c0y+qIDgcZIlI8z+nf9D1DydYpaeW7JVFGmjE7nxMvxb/AEEDMHNK&#xA;5F3mjhw4x82B/mrY+v5rtoqbajot9a9OpSWMjf5SnOZ9pJ8GLHk/mZon73b9njinKPfAsU8nfmD5&#xA;38v2mjxXGnwXNpqQa2tdKZmgug0CUM7uwfiCVNQU+zQjNhPtbAJT3uGOIkZAgjfpt1aI6WZEe+Rq&#xA;uT1XyL+ZGg+boCls31fVYUL3mnNyJj4yGMlJCqpKtQPiXxFaHbNhGQIsNBCZec7FLzy3eqRVoUM6&#xA;HwMXxH/hQRl2GVSDjayHFiPlu8qvP3mmWE56r6tsT4+mVkH4TUzPHMuhnvEH3j8fNMPIkoj802Ve&#xA;j+oh/wBlG1PxyGcegt2hNZQ9fzXPQuxV5B57m9XzTe06J6aD/YxrX8c2OAegPPa43lKX2dY9Mv5x&#xA;1f0ravgJC0h/CGmTPMNMNoyPuH4+T1XyZYpZ+W7JQKNMgnc+Jl+If8KQMwM0rkXfaOHDiHnukn5u&#xA;3bJ5SGmxsVk1q7g06o6+nI3qTffDG4zB1uo8HDPJ/NiT8en2ubix8cxHvKA0NI+M0dBwoo4UFKbi&#xA;lPDPNOxibmfd+l6LVjkhPygvHsBqXl2Rjw0y8mt4QTv6fLnEf+RbrnqGHJxwjLvDzUo8JI7ma+cb&#xA;FLvy3eqwq0MZnQ+Bi+Lb6ARmThlUg4ushxYz83mAu5oLbS9QhNJ7aSSJGO9fRZZVqP8AntTM6rJD&#xA;o+MgRkOY/Rv+llWhfmLqd3qFtZXNrC31iRIvUjLIRyIHKhL1plE9OALBc/B2hKUhEgbs/wAw3bOx&#xA;V2KrGbFVFmxVRZsVU1bFVl9Zx31lNaSSTRJMvFpLeV4JVHiksZV1PuDipDwywn1e08t+XrzVdb16&#xA;DTtRg1J9QvY7q9nl+vW8vCxj5VlaJWXlRVoHYUauWNA5Dmr23mHz6lpqWm6rc6jF5j1oeWZNHt0N&#xA;wpoBB+kDHx+CEVST1xUdTy640Fs/HZRv9f8AMK+XdVmTWNbXziqXP6W0/lOtnbFdTiSD02PEQ1iI&#xA;CejXmhYnGkEmvN6P+Xd/5qufO/niDzAwR7aXTRb2kE81xZwh7Pk31dpkhpz2Z6IPir165E8myBNm&#xA;2Ped4vS8036/zMrj/ZorfxzYYD6A6HWisskDbDnpF8gHxRyQTH/UXnGf+GlXJHmGqO8D8D9/63rX&#xA;lS5S58uae6dFhSI/OIcD+K5r8oqRd/pZXjj7mD+fFZfzD093JKSaTMIVNKKyXKeoV92DrX5DOR9r&#xA;wfysT08QfcXd9lEeKf6v6QhjBYqXlWSUziMCISpXlIftgcCVRNhQnc984mcNOYnhmRQGxjzPXkXc&#xA;gzB3HXvY/osNva/mKsekfuLXSrOKOAInpKGuHaST4O1aAHx+nPQvZ6P7mWQyOQzn9R5mgB3nlu6D&#xA;Xn1iNcNDk9c8x6gqeVb6aSitJA0XH/KlHDb/AILOixC5B1Wqlw45e55c8U0mm6daRqXmnlmlijA3&#xA;PqFIhT5tCc2F7kuhIJjEDmSf0D9Cf+WvJnmODVrO9mtxBFDKrvzdeXEH4qKOR6eOU5M0SCHL02jy&#xA;CYkRVPTcwXduxV5l5l8meY59WvL2G3E8U0rOnB15cSfhqp4np4ZnY80QAHSanR5DMyAu0gjilj03&#xA;UbSRSk0EsMssbDcemXib7mmGXXuC4gBEZA8wR+kfpereU7pLny5p7qQeEKxGnYxDgf8AiOa/KKkX&#xA;faWXFjj7nnGt61ceavMi3SD0tB0OaeGwHVrm6FYZbg9hGnxJGO+59s4n2q7WjGB00fqNcXkOYHvO&#xA;x93vd92ZpST4h5Dkm+jOBcMp6su30ZzHY+QCco94+52erjsCk2prN5X82jzQp5aLqLQwawo+1BLt&#xA;FFcAd0+yrj6d89A7J1YMfCPMcv1Oh1WKjxB6P5nvYovLF9MSCklu0akdzKOC0/4LN7iFyDrNVKsc&#xA;vc8nuRw0ixQj4pJJ5h/qNwjH/DRNmwHMugltAfE/d+pHeSIvV802C/yszn/YIzfwyOc+gtuiF5Yr&#xA;/Peq63afmnpqRX+oNayPp8cWl2rzwfbmYSyogV7W6iI2nEnFkH2SMwByd7Inied+TfOH5nXVp5P0&#xA;q9udQ9KHWbK+vdUklmL3Nld3cdvHbSuTzdef1jmrnjxUZIgNcZS2Rnk3zhf2ukeWdQ1TXboz/pSz&#xA;GrFtT1K7c27QXZk+tW86rFEOax7Rlge/QYCExlyeh+UfPmn3P5kearSbVXltL6TTT5fgkaUxFWsl&#xA;aX0FYcUq5q1KVORI2bIy3L0dmyLYpM2KqStiqsrYqqq2KqqtiqqrYquxViHmTyHJrGqPfJdrAHVV&#xA;KFC26ila8hmTjz8IqnX6jQ+JPiumLat5fk8tX0AuJfrFjeRtFNIq8SAdnAFTutQy++XwycY25hwM&#xA;uA4ZC94lMfJ2u/oO+k0jUXAtJmDwXFfgBYbMD/JIKb9vvyGbHxCxzbtJn8KXBLkfx9rX5zSQ6fBo&#xA;HmDdpLS9NoUH7cF7GfU+lTErD5ZpO0+zzq8EsQ+o7j3jl+p32DUDDMTPLr7mI/430H+eT/gDnEf6&#xA;C9f3R/0ztv5d0/efkt/Ly5i1TzRreorUK1xHGobakcUSqp+nc52/ZmhlpdPDFL6o8/eSS6nPqBlm&#xA;ZjkWV+Z9a/TdzBpFg4+pwEvPcHZCVB5OT/Ii137/AHZu8OPgFnm6DV5/FlwR5BI01kW2tQX1tGHh&#xA;syqW8UneNBxBNOjN9o/5Ry7guNHq4gzcMxIchyet6LrVlq9kt1atUHaSM/aRu6sM184GJovQYc0c&#xA;kbCOyDa7FUDrWtWWkWTXV01ANo4x9p27KoycIGRoNWbNHHGy8kfWRc61PfXMYSG8LJcRR9o3HEkV&#xA;6sv2h/lDNhwVGh0efObimZHkebIPJ+vDQb+TStQcfU52DwXA+wCwHFwf5HWm/b78pzY+MWObl6TP&#xA;4UuCXI/j7Up1ryn5y8uyStpEVtq2iSTSTQK7vDcRCZzJ6bELIjDk3wt9+ch2n7NYtVlOTiMJy59R&#xA;3eX3vU6btGWOIjQISQ+epbR1jfRr9NVVqCzMfwk+PrV9Ph/lfhmhw+ympx5gRKPAP4v0Vz/R5udP&#xA;tTHKHI33KmrXHnXzPZHT7qyttO0ydka4EbvNOURg/DkVjQVK7mmdhpezYYpCVmRDqcuoMhVUE5ut&#xA;SvNStrXQ4JK21uecspPwjiN2Y/yIKn/MZvcOPhFnm8/q8/iy4I8h+PsVdJ8vyeZb6cW8v1exs41i&#xA;hkZeRIGyAio3ahZvfJzycA35lpxYDmka2iGU+W/Icmj6ol892s4RWUIEK7sKVryOUZM/EKpz9Pof&#xA;DnxXbL8xnYLWbFVNmxVRZsVUmbFVJmxVSVsVVVbFVVWxVVVsVVVbFVVWxVdirx7zlq93qOtS+ujQ&#xA;x25MUMDggqo7kHu3XNlhgIxed1mUzmb2pA299BJbrZ36s1ulfQmQAyw13PGtOSE7lSfkRkjHew1R&#xA;mCOGXL7nazpGp6vpEeli4bUNNgmS5gW3PN0eMMB8DD1EFGNRxpkfTdnYuRCeQConij+Pixv/AAXL&#xA;6nD99X+T0zy8f89su8QNfiS7k60nyrJpMc4dzYRXLB52uWKu2wHwxAc2FB2WnicpPCTY3LOU8hjU&#xA;jwx/HxRNxfQpbtZ2KlLd6etK9PUmI3HKleKg9FB+ZOSEd7LRKYA4Y8vvUtO0661G8is7VOc0poPA&#xA;Dux9hhlIAWWOPGZyoc3smg6Ja6Np6WkAq32ppT1dz1J/hmtyTMjb0eDCMcaCY5BudiqXa9olrrOn&#xA;vaTijfahlHVHHQj+OTxzMTbTnwjJGi8b1HTrrTryWzuk4TRGh8COzD2ObKMgRYecyYzCVHmq299C&#xA;9utnfKXt0r6MqU9SEnc8a05KT1Un5EYDHewyjMEcMuX3J3pOreZdOi9PTZU1Ox7QAGWg949pU/V8&#xA;8qnCMuexcnFmyw+k8Ufx8V935nnulEcuiL643BHOo2r9mlfxyH5aPe3/AMoT5cO6Cum1m4Thesmm&#xA;Wh6o4MZI9o95X+6mThCEeW5acubLP6jwx/HxS+4v4Y7drKwDJbvT15noJZiNxypUKgO4UH5k5aI7&#xA;2XFlMAcMeX3o7ybq93p2tRegjTR3BEU0CAksp7gDuvXI5oCUW3R5TCYre3sOa16JazYqps2KqTNi&#xA;qkzYqpM2KqTNiqkrYqqq2KqqtiqorYqqq2KqitiqorYqlHmPyvp+uQ/vP3V4gpFcqNx7N/MuW48p&#xA;j7nG1GljlHn3vMpvK+tQ6smltATcSH92w3Rl/nDfyjv4ZnDLEi3Ry00xPgrdkeufl/badob3sNxI&#xA;93bIGlBpwY8hyK7VWgPjlMNQZSro5ufQCGPiB3DDfr99Tj9Yl49Kc2pT78yeEOt8SXeWrRFlvIUf&#xA;4leRQ1e4LAHE8lgLkHsGoeUtDvrFLR7dYhEKQyRAIyfIjr9Oa2OWQNvRZNLjlGqpS8r+VLXQopCH&#xA;9e6lJDTkU+AH4VA3p4n3w5cpmx02lGId5T3KnKdirsVdiqReaPKlrrsUZL+hdREBZwK/AT8SkbV8&#xA;R75biymDi6nSjKO4qum+U9DsLJrVbZZlkFJpJgHZ/mT0+jBLLIm2WPS44xqreQXiLFezpGOKpIwQ&#xA;DsAxpmyHJ52YqRd9fvqcfrEvHpTm1KffjwhfEl3lmWh/l/bajoaXs1xIl3coWiApwU8jxLbVaoHj&#xA;mNPUGMq6OywaATx8RO5Y5D5X1qbVn0tYCLmM/vGOyKv85b+U9vHLjliBbhR00zPgrd6b5c8rafoc&#xA;NY/3t44pLcsNz7L/ACrmDkymXud5p9LHEPPvThmypyVNmxVSZsVU2bFVJmxVSZsVUmbFVJWxVVVs&#xA;VVVbFVRWxVVVsVVFbFVRWxVeHxVeGFa9/HFVO9to7yzntZNknjaNiOoDgiv44YmjbGceKJB6sVh/&#xA;K/RV3lubiQ+xRR/xE5kHVScAdmQ6ko+28geWreRJBA8joQyl5H6jp9krkDqJFtjoMQ6MiylzHYq7&#xA;FXYq7FXYq7FXYqx268g+WriR5DA8buSzFJH6ncn4i2XDUSDhy0GI9EBN+V+it/dXNxGfcow/4iMm&#xA;NVJqPZkOhLKrK2js7OC1j3jgjWNSepCACuY8jZtz4R4YgDoqlhWvfxwMlhfFVNmxVTZsVU2bFVNm&#xA;xVSZsVU2bFVJmxVSVsVVFbFVVWxVUVsVVFbFVRWxVUV8VXh8VVA+Krg+Krw+Krg2Kt1GKuxV2Kux&#xA;V2KuxV2KuqMVaLYqtL4qtL4qsL4qsL4qps2KrGbFVNmxVTZsVUmbFVNmxVSZsVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:51077323-cf69-664b-a92b-f1ec89a41ffc</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:51077323-cf69-664b-a92b-f1ec89a41ffc</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:74c4f702-1249-524a-b587-5561860aeb61</stRef:instanceID>
            <stRef:documentID>xmp.did:74c4f702-1249-524a-b587-5561860aeb61</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:36461D58FF58E4119DCA8196425230FC</stEvt:instanceID>
                  <stEvt:when>2014-10-21T15:06:40+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:7C2E34317E5EE411A500D4BE8B15E0A8</stEvt:instanceID>
                  <stEvt:when>2014-10-28T11:00:45+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:74c4f702-1249-524a-b587-5561860aeb61</stEvt:instanceID>
                  <stEvt:when>2014-10-28T19:12:57+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:51077323-cf69-664b-a92b-f1ec89a41ffc</stEvt:instanceID>
                  <stEvt:when>2014-10-28T19:15:18+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>450.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
450 450 li
450 0 li
cp
clp
450 450 mo
0 450 li
0 0 li
450 0 li
450 450 li
false sop
/0 
[/DeviceRGB] /CSA add_res
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/0 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [1 1 1 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 1 1 ]
/C1 [.870588 .870588 .870588 ]
/N 1 
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)trVc]mr;6Bf
qYBs_q"XUXp@e1Pp%7nJoCDJBnaZ,<n*f]4mHs<-m-F!&lKRQtkih3mk2tdejlGL_j5T(WiSi_Qhr!;I
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)trVc]mr;6Bf
qYBs_q"XUXp@e1Pp%7nJoCDJBnaZ,<n*f]4mHs<-m-F!&lKRQtkih3mk2tdejlGL_j5T(WiSi_Qhr!;I
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)trVc]mr;6Bf
qYBs_q"XUXp@e1Pp%7nJoCDJBnaZ,<n*f]4mHs<-m-F!&lKRQtkih3mk2tdejlGL_j5T(WiSi_Qhr!;I
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
174.083 416.902 mo
173.069 416.902 li
153.08 416.902 li
152.067 416.902 li
152.067 416.187 li
152.366 416.187 li
172.355 416.187 li
173.369 416.187 li
173.369 404.735 li
174.083 404.735 li
174.083 416.902 li
173.069 404.02 mo
172.654 404.02 li
172.654 403.306 li
172.355 403.306 li
172.355 402.898 li
173.267 401.774 173.439 399.819 173.838 397.067 cv
175.712 383.771 li
176.638 381.438 li
176.742 381.174 176.788 380.904 176.805 380.636 cv
177.055 379.856 176.923 379.03 176.494 378.387 cv
177.451 379.024 177.877 380.233 177.519 381.35 cv
177.503 381.618 177.456 381.888 177.352 382.152 cv
176.427 384.485 li
174.552 397.782 li
174.154 400.533 173.981 402.489 173.069 403.612 cv
173.069 404.02 li
153.179 359.52 mo
153.117 359.402 153.047 359.29 152.97 359.183 cv
153.095 359.272 153.214 359.371 153.324 359.478 cv
153.275 359.491 153.227 359.505 153.179 359.52 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/1 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8W,urr2orrr)forVc]mr;?Kjr;6Bgqtp9eqYL'bqYBs_q>'j]q"XXZq"OOWp\4FUp@e4Rp@\+Op%A"M
o^qbHoCMSFo()ABo()>@naZ/>nF5r:nF5o8n*f`6mdBN2mdBK0mHs<.m-O**m-O'(lg*m&lK[["lK[Wu
l0.?pkih6nkND$kkN:phk2tgfjlPUcjlGL`jQ,C^j5]1[j5T(Xio8tViSibSiS`YPi8EPNhr!>Khqm5H
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)srVcZlqtp6d
qYBs^q"OOWp@e1Pp%7nJo()>@naQ&:n*f]4mHs9,m-F!&lKRQtki_-kk2tdejQ,@]j5T(WiS`YPhr!;I
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)srVcZlqtp6d
qYBs^q"OOWp@e1Pp%7nJo()>@naQ&:n*f]4mHs9,m-F!&lKRQtki_-kk2tdejQ,@]j5T(WiS`YPhr!;I
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)srVcZlqtp6d
qYBs^q"OOWp@e1Pp%7nJo()>@naQ&:n*f]4mHs9,m-F!&lKRQtki_-kk2tdejQ,@]j5T(WiS`YPhr!;I
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
173.369 416.187 mo
172.355 416.187 li
152.366 416.187 li
152.067 416.187 li
151.352 416.187 li
151.352 415.473 li
151.652 415.473 li
171.641 415.473 li
172.654 415.473 li
172.654 404.02 li
173.069 404.02 li
173.369 404.02 li
173.369 404.735 li
173.369 416.187 li
172.355 403.306 mo
171.94 403.306 li
171.94 402.592 li
171.641 402.592 li
171.641 402.184 li
172.553 401.06 172.725 399.105 173.123 396.353 cv
174.998 383.057 li
175.923 380.723 li
176.028 380.46 176.074 380.19 176.09 379.921 cv
176.341 379.141 176.208 378.316 175.779 377.672 cv
176.068 377.864 176.308 378.108 176.494 378.387 cv
176.923 379.03 177.055 379.856 176.805 380.636 cv
176.788 380.904 176.742 381.174 176.638 381.438 cv
175.712 383.771 li
173.838 397.067 li
173.439 399.819 173.267 401.774 172.355 402.898 cv
172.355 403.306 li
152.772 359.68 mo
152.688 359.233 152.508 358.822 152.256 358.469 cv
152.531 358.665 152.773 358.907 152.97 359.183 cv
153.047 359.29 153.117 359.402 153.179 359.52 cv
153.039 359.563 152.903 359.617 152.772 359.68 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/2 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~s8W,urr2orrr)forVc]mr;?Kjr;6Bgqtp9eqYL'bqYBs_q>'j]q"XXZq"OOWp\4FUp@e4Rp@\+Op%A"L
oCMPDo()ABnaZ/>naZ,<nF5r:n*f`6n*f]4mdBN2mdBN2mdBK0mHs<.m-O**m-O'(lg*m&lK[["lK[Wu
l0.?pkih6nkND$kkN:phk2tgfjlPUcjlGL`jQ,C^j5]1[j5T(Xio8tViSibSiS`YPi8EPNhr!>Khqm5H
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)srVcZlqtp6d
qYBs^q"OOWp@e1Pp%7kHnaZ,<nF,i6mdBK0mHs9,m-F!&lKRQtki_-kk2tdejQ,@]j5T(WiS`YPhr!;I
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)srVcZlqtp6d
qYBs^q"OOWp@e1Pp%7kHnaZ,<nF,i6mdBK0mHs9,m-F!&lKRQtki_-kk2tdejQ,@]j5T(WiS`YPhr!;I
~>
<~s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W)srVcZlqtp6d
qYBs^q"OOWp@e1Pp%7kHnaZ,<nF,i6mdBK0mHs9,m-F!&lKRQtki_-kk2tdejQ,@]j5T(WiS`YPhr!;I
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
172.654 415.473 mo
171.641 415.473 li
151.652 415.473 li
151.352 415.473 li
150.638 415.473 li
150.638 414.759 li
150.937 414.759 li
170.927 414.759 li
171.94 414.759 li
171.94 403.306 li
172.355 403.306 li
172.654 403.306 li
172.654 404.02 li
172.654 415.473 li
171.641 402.592 mo
171.226 402.592 li
171.226 401.877 li
170.927 401.877 li
170.927 401.47 li
171.839 400.346 172.011 398.39 172.409 395.639 cv
174.284 382.342 li
175.209 380.009 li
175.314 379.745 175.36 379.475 175.376 379.207 cv
175.626 378.427 175.494 377.602 175.065 376.958 cv
175.354 377.15 175.594 377.394 175.779 377.672 cv
176.208 378.316 176.341 379.141 176.09 379.921 cv
176.074 380.19 176.028 380.46 175.923 380.723 cv
174.998 383.057 li
173.123 396.353 li
172.725 399.105 172.553 401.06 171.641 402.184 cv
171.641 402.592 li
152.214 360.025 mo
152.076 359.079 li
152.004 358.588 151.815 358.138 151.542 357.755 cv
151.817 357.951 152.058 358.192 152.256 358.469 cv
152.508 358.822 152.688 359.233 152.772 359.68 cv
152.574 359.774 152.387 359.89 152.214 360.025 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/3 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
rr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2orrr2or
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~rr2oqrVc]nrVZTkr;?Kiqtp9fqtg0cqYL'`q"XXZq"OOWp\4FVp\4FVp\+=Sp@e4Qp%A"Np%7nKo^qeI
oCMPDo()ABnaZ/>naZ,<nF5r:n*f`6n*f]4mdBN2m-O**m-O**m-O**lg*m&lg*j$lK[["l07Hsl07Eq
ki_-lkND$jk2tggk2k^djlPUbjQ,C_jQ#:\j5]1Zio8tWio/kTiSibRi8EPOi8<GLhr!>JhVR,GhVI#D
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]mr;?HhqYL$`
q"OOVp@e4Rp%@tLo^h\FnaZ,<nF,i6mdBK/lg*m&lg!d"l0.?pkN:pgjlPRaj5].Yio/kSi8<GLhVR)E
~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]mr;?HhqYL$`
q"OOVp@e4Rp%@tLo^h\FnaZ,<nF,i6mdBK/lg*m&lg!d"l0.?pkN:pgjlPRaj5].Yio/kSi8<GLhVR)E
~>
<~rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]mr;?HhqYL$`
q"OOVp@e4Rp%@tLo^h\FnaZ,<nF,i6mdBK/lg*m&lg!d"l0.?pkN:pgjlPRaj5].Yio/kSi8<GLhVR)E
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
171.94 414.759 mo
170.927 414.759 li
150.937 414.759 li
150.638 414.759 li
149.924 414.759 li
149.924 414.044 li
150.223 414.044 li
170.212 414.044 li
171.226 414.044 li
171.226 402.592 li
171.641 402.592 li
171.94 402.592 li
171.94 403.306 li
171.94 414.759 li
170.927 401.877 mo
170.512 401.877 li
170.512 401.163 li
170.212 401.163 li
170.212 400.755 li
171.124 399.632 171.296 397.676 171.695 394.925 cv
173.569 381.628 li
174.495 379.295 li
174.599 379.031 174.645 378.761 174.662 378.493 cv
174.912 377.713 174.78 376.887 174.351 376.243 cv
174.639 376.436 174.88 376.68 175.065 376.958 cv
175.494 377.602 175.626 378.427 175.376 379.207 cv
175.36 379.475 175.314 379.745 175.209 380.009 cv
174.284 382.342 li
172.409 395.639 li
172.011 398.39 171.839 400.346 170.927 401.47 cv
170.927 401.877 li
151.682 360.56 mo
151.362 358.365 li
151.289 357.874 151.101 357.423 150.828 357.04 cv
151.102 357.237 151.344 357.478 151.542 357.755 cv
151.815 358.138 152.004 358.588 152.076 359.079 cv
152.214 360.025 li
152.017 360.179 151.838 360.358 151.682 360.56 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/4 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
r;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kj
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~r;?Kjr;?Kjr;6Bgqtp9dq>'j^q=sa[q"XXYp\4FVp\+=Sp@e4Qp%A"Np%A"Np%A"Mo^qeJo^h\GoCMSD
naZ,<nF5r:n*f`6n*f]4mdBN2mdBN2mdBK0mHs<.m-O**m-O'(lg*m&l07Hsl07Eqkih6okND$kkND$k
kN:phk2tgfjlPUcjlGL`jQ,C^j5]1[j5JtUiSibRi8EPOi8EPOi8EPNhr!>Khqm5HhVR,Fh;-oCh;$f@
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp6cq"XUX
p\+=Rp%7nKo^qbHoCDG@n*f]4md9E/mHs9,lg*j$l0.?okN:phk2k^cjQ,@]io8nSi8<GLhqm5Hh;-lA
~>
<~qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp6cq"XUX
p\+=Rp%7nKo^qbHoCDG@n*f]4md9E/mHs9,lg*j$l0.?okN:phk2k^cjQ,@]io8nSi8<GLhqm5Hh;-lA
~>
<~qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp6cq"XUX
p\+=Rp%7nKo^qbHoCDG@n*f]4md9E/mHs9,lg*j$l0.?okN:phk2k^cjQ,@]io8nSi8<GLhqm5Hh;-lA
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
171.226 414.044 mo
170.212 414.044 li
150.223 414.044 li
149.924 414.044 li
149.209 414.044 li
149.209 413.33 li
149.509 413.33 li
169.498 413.33 li
170.512 413.33 li
170.512 401.877 li
170.927 401.877 li
171.226 401.877 li
171.226 402.592 li
171.226 414.044 li
170.212 401.163 mo
169.797 401.163 li
169.797 400.449 li
169.498 400.449 li
169.498 400.041 li
170.41 398.917 170.582 396.962 170.98 394.21 cv
172.855 380.914 li
173.78 378.58 li
173.885 378.317 173.931 378.047 173.948 377.778 cv
174.198 376.999 174.065 376.173 173.636 375.529 cv
173.925 375.721 174.165 375.966 174.351 376.243 cv
174.78 376.887 174.912 377.713 174.662 378.493 cv
174.645 378.761 174.599 379.031 174.495 379.295 cv
173.569 381.628 li
171.695 394.925 li
171.296 397.676 171.124 399.632 170.212 400.755 cv
170.212 401.163 li
151.656 360.593 mo
151.51 360.434 151.347 360.288 151.17 360.158 cv
151.11 360.076 151.046 359.996 150.978 359.92 cv
150.648 357.651 li
150.575 357.159 150.387 356.709 150.113 356.326 cv
150.388 356.522 150.63 356.764 150.828 357.04 cv
151.101 357.423 151.289 357.874 151.362 358.365 cv
151.682 360.56 li
151.673 360.571 151.664 360.582 151.656 360.593 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
qYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'b
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~qYL'bqYL'bqYBs_q>'j\p\4FVp\+=Sp@e4Qp%A"Np%A"Np%A"Mo^qeJo^h\GoCMSDnaZ/>naQ&;nF5r:
nF5o8n*f`6mdBN2mdBH.m-O**lg*m&lg*j$lK[["lK[["lK[Wul07Hskih6okih0kk2tggjlPUcjlPUc
jlGL`jQ,C^j5]1[j5T(Xio8tViSibSiS`YPi8EPNhr!>Khqm5HhVR,Fh;-oCh;$f@gt^]>gY:K;gY1B8
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'g[p@e1P
p%7nKo^h\Go();>nF,i7mdBK0m-F!&lK[Wul07Eqki_*ijlGL`jQ#:[io8qUi8EMMhqm5Gh;$f@gY:H9
~>
<~q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'g[p@e1P
p%7nKo^h\Go();>nF,i7mdBK0m-F!&lK[Wul07Eqki_*ijlGL`jQ#:[io8qUi8EMMhqm5Gh;$f@gY:H9
~>
<~q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'g[p@e1P
p%7nKo^h\Go();>nF,i7mdBK0m-F!&lK[Wul07Eqki_*ijlGL`jQ#:[io8qUi8EMMhqm5Gh;$f@gY:H9
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
170.512 413.33 mo
169.498 413.33 li
149.509 413.33 li
149.209 413.33 li
148.495 413.33 li
148.495 412.616 li
148.794 412.616 li
168.784 412.616 li
169.797 412.616 li
169.797 401.163 li
170.212 401.163 li
170.512 401.163 li
170.512 401.877 li
170.512 413.33 li
169.498 400.449 mo
169.083 400.449 li
169.083 399.735 li
168.784 399.735 li
168.784 399.327 li
169.696 398.203 169.868 396.248 170.266 393.496 cv
172.141 380.199 li
173.066 377.866 li
173.171 377.602 173.217 377.333 173.233 377.064 cv
173.483 376.284 173.351 375.459 172.922 374.815 cv
173.211 375.007 173.451 375.251 173.636 375.529 cv
174.065 376.173 174.198 376.999 173.948 377.778 cv
173.931 378.047 173.885 378.317 173.78 378.58 cv
172.855 380.914 li
170.98 394.21 li
170.582 396.962 170.41 398.917 169.498 400.041 cv
169.498 400.449 li
150.978 359.92 mo
150.822 359.744 150.648 359.584 150.456 359.443 cv
150.395 359.361 150.331 359.282 150.264 359.205 cv
149.933 356.936 li
149.861 356.445 149.672 355.995 149.399 355.612 cv
149.674 355.808 149.916 356.049 150.113 356.326 cv
150.387 356.709 150.575 357.159 150.648 357.651 cv
150.978 359.92 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZ
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~q"XXYp\4FVp\"4Pp%A"Np%A"Np%7nKo^qeIoCMSFoCDJCo()A@nF5r:nF5r:nF5r9n*f`6n*]W3mdBN1
mHs9,m-O**lg*m&lg*j$lK[["l07Hsl07Hsl07HskND$kkND!ik2tggjlPUcjlPUcjlPUcj5]1[j5].Y
io/kTiSibSiSibSiS`YPi8EPMhVR,GhVI#Dh;-oCh;-oCh;$f@gt^]>gY:K;gY1B8g=k95f\"j/f\"j/
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FUp@\(Mo^qbH
oCDJBnaGr8n*f]4md9E.lg*j$lKRQskih6nk2tdejlGL`jPo1YiS`YPi8EMLh;-lAgt^]>gY1B8g"G!/
~>
<~p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FUp@\(Mo^qbH
oCDJBnaGr8n*f]4md9E.lg*j$lKRQskih6nk2tdejlGL`jPo1YiS`YPi8EMLh;-lAgt^]>gY1B8g"G!/
~>
<~p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
p\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FUp@\(Mo^qbH
oCDJBnaGr8n*f]4md9E.lg*j$lKRQskih6nk2tdejlGL`jPo1YiS`YPi8EMLh;-lAgt^]>gY1B8g"G!/
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
169.797 412.616 mo
168.784 412.616 li
148.794 412.616 li
148.495 412.616 li
147.781 412.616 li
147.781 411.902 li
148.08 411.902 li
168.069 411.902 li
169.083 411.902 li
169.083 400.449 li
169.498 400.449 li
169.797 400.449 li
169.797 401.163 li
169.797 412.616 li
168.784 399.735 mo
168.369 399.735 li
168.369 399.02 li
168.069 399.02 li
168.069 398.612 li
168.981 397.489 169.154 395.533 169.552 392.782 cv
171.427 379.485 li
172.352 377.152 li
172.456 376.888 172.503 376.618 172.519 376.35 cv
172.769 375.57 172.637 374.745 172.208 374.101 cv
172.497 374.293 172.737 374.537 172.922 374.815 cv
173.351 375.459 173.483 376.284 173.233 377.064 cv
173.217 377.333 173.171 377.602 173.066 377.866 cv
172.141 380.199 li
170.266 393.496 li
169.868 396.248 169.696 398.203 168.784 399.327 cv
168.784 399.735 li
150.264 359.205 mo
150.108 359.03 149.934 358.87 149.742 358.729 cv
149.681 358.647 149.617 358.568 149.549 358.491 cv
149.219 356.222 li
149.146 355.731 148.958 355.28 148.684 354.897 cv
148.96 355.094 149.201 355.335 149.399 355.612 cv
149.672 355.995 149.861 356.445 149.933 356.936 cv
150.264 359.205 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~o^qeJo^qeJo^_SDo()AAnaZ/>naZ/>naZ/=nF5r:nF#`4mdBN1mHs<.mHs<.mHs<-m-O**m-<m$lK[["
lK[Wul07Hskih6okih0kk2tggk2tggk2tdejlPUcjQ,C_jQ,C_jQ,C_io8tWio8qUiSibSi8EPOi8EPO
i83>IhVR,Fh;-oCh;-oCh;-oBgt^]?gtLK9g=k96g"G'3g"G'3g"G'2f\"j/f[na,f@SX*f%/F'f%&=$
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~oCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
oCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
oCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCDGAnF5r:
nF,i5mHj3+m-O'(lKRQtkih3mk2k^djlPRaj5]1[io/kSi8<GLhVI#Cgt^]?gY:E7g"=s0f[na,f%/C%
~>
<~oCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
oCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
oCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCDGAnF5r:
nF,i5mHj3+m-O'(lKRQtkih3mk2k^djlPRaj5]1[io/kSi8<GLhVI#Cgt^]?gY:E7g"=s0f[na,f%/C%
~>
<~oCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
oCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
oCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCDGAnF5r:
nF,i5mHj3+m-O'(lKRQtkih3mk2k^djlPRaj5]1[io/kSi8<GLhVI#Cgt^]?gY:E7g"=s0f[na,f%/C%
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
169.083 411.902 mo
168.069 411.902 li
148.08 411.902 li
147.781 411.902 li
147.067 411.902 li
147.067 411.187 li
147.366 411.187 li
167.355 411.187 li
168.369 411.187 li
168.369 399.735 li
168.784 399.735 li
169.083 399.735 li
169.083 400.449 li
169.083 411.902 li
168.069 399.02 mo
167.654 399.02 li
167.654 398.306 li
167.355 398.306 li
167.355 397.898 li
168.267 396.774 168.439 394.819 168.837 392.067 cv
170.712 378.771 li
171.638 376.438 li
171.742 376.174 171.788 375.904 171.805 375.636 cv
172.055 374.856 171.923 374.03 171.494 373.387 cv
171.782 373.579 172.023 373.823 172.208 374.101 cv
172.637 374.745 172.769 375.57 172.519 376.35 cv
172.503 376.618 172.456 376.888 172.352 377.152 cv
171.427 379.485 li
169.552 392.782 li
169.154 395.533 168.981 397.489 168.069 398.612 cv
168.069 399.02 li
149.549 358.491 mo
149.348 358.264 149.114 358.062 148.852 357.895 cv
148.505 355.508 li
148.432 355.016 148.244 354.566 147.97 354.183 cv
148.245 354.379 148.487 354.621 148.684 354.897 cv
148.958 355.28 149.146 355.731 149.219 356.222 cv
149.549 358.491 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>
naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>
naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~naZ/=nF5r:nF#`4mdBN2mdBN2md9E/mHs<-m-O**m-F!'lg*m%lK[["lKRQtl07Hrkih6oki_-lkND$j
k2tggk2tggjQ,C_jQ,@]j5]1[j5]1[j5].Yio8tWi8EPOi8EPOi8EPOhr!>Khr!8Gh;-oCh;-oCh;-lA
gtUT<gY:K:g=k97g=b04g"G'2f\"j/f[na,f@SX*f%/F'f%&=$e^`4#e^`4#e^N!re'ldodaHRldaHRl
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r9n*]T1mHs9,
m-F!&lKRQtkih3mkN:pgjlPO_j5T(Xio8qThr!>Khqm2Egt^]?gY1B7g"G$1f@SU)f%&=#eC<!sdaHOj
~>
<~nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r9n*]T1mHs9,
m-F!&lKRQtkih3mkN:pgjlPO_j5T(Xio8qThr!>Khqm2Egt^]?gY1B7g"G$1f@SU)f%&=#eC<!sdaHOj
~>
<~nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r9n*]T1mHs9,
m-F!&lKRQtkih3mkN:pgjlPO_j5T(Xio8qThr!>Khqm2Egt^]?gY1B7g"G$1f@SU)f%&=#eC<!sdaHOj
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
168.369 411.187 mo
167.355 411.187 li
147.366 411.187 li
147.067 411.187 li
146.352 411.187 li
146.352 410.473 li
146.652 410.473 li
166.641 410.473 li
167.654 410.473 li
167.654 399.02 li
168.069 399.02 li
168.369 399.02 li
168.369 399.735 li
168.369 411.187 li
167.355 398.306 mo
166.94 398.306 li
166.94 397.592 li
166.641 397.592 li
166.641 397.184 li
167.553 396.06 167.725 394.105 168.123 391.353 cv
169.998 378.057 li
170.923 375.723 li
171.028 375.46 171.074 375.19 171.09 374.921 cv
171.341 374.141 171.208 373.316 170.779 372.672 cv
171.068 372.864 171.308 373.108 171.494 373.387 cv
171.923 374.03 172.055 374.856 171.805 375.636 cv
171.788 375.904 171.742 376.174 171.638 376.438 cv
170.712 378.771 li
168.837 392.067 li
168.439 394.819 168.267 396.774 167.355 397.898 cv
167.355 398.306 li
148.852 357.895 mo
148.649 357.766 148.43 357.657 148.195 357.573 cv
147.791 354.794 li
147.718 354.302 147.53 353.852 147.256 353.469 cv
147.531 353.665 147.773 353.907 147.97 354.183 cv
148.244 354.566 148.432 355.016 148.505 355.508 cv
148.852 357.895 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**
m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**
m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**m-O**
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~m-O*)lg*m&lg!d#lK[["lK[["lKRQtl07HqkND$kkND$kkND$ijlPUcjlGL`jQ,C_jQ,C_jQ#:\j5]1[
j5]+WiSibSi8EPOi8EPOi8EPOhVR,GhVR)Eh;-oCh;-oCh;-lAgt^]?gY:K;gY:H9g=k97g"G'3g"G$1
f[na,f@SX*f%/F'f%&=$e^`4"eC<!teC2mqe'ldodaHRlda?IidF$@hdF$@hdEg.bcd0q`cd0q`cd'h]
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&
lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&
lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m%lK[Wul07Eq
kN:phk2bUaj5]1[j5T(Xi8EMMhr!>Ih;-lAgt^Z=gY1B7g"=s0f@JO'e^`1!e'landa?Ihd*U.ccHa_\
~>
<~lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&
lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&
lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m%lK[Wul07Eq
kN:phk2bUaj5]1[j5T(Xi8EMMhr!>Ih;-lAgt^Z=gY1B7g"=s0f@JO'e^`1!e'landa?Ihd*U.ccHa_\
~>
<~lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&
lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&
lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m&lg*m%lK[Wul07Eq
kN:phk2bUaj5]1[j5T(Xi8EMMhr!>Ih;-lAgt^Z=gY1B7g"=s0f@JO'e^`1!e'landa?Ihd*U.ccHa_\
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
167.654 410.473 mo
166.641 410.473 li
146.652 410.473 li
146.352 410.473 li
145.638 410.473 li
145.638 409.759 li
145.937 409.759 li
165.927 409.759 li
166.94 409.759 li
166.94 398.306 li
167.355 398.306 li
167.654 398.306 li
167.654 399.02 li
167.654 410.473 li
166.641 397.592 mo
166.226 397.592 li
166.226 396.877 li
165.927 396.877 li
165.927 396.47 li
166.839 395.346 167.011 393.39 167.409 390.639 cv
169.284 377.342 li
170.209 375.009 li
170.314 374.745 170.36 374.475 170.376 374.207 cv
170.626 373.427 170.494 372.602 170.065 371.958 cv
170.354 372.15 170.594 372.394 170.779 372.672 cv
171.208 373.316 171.341 374.141 171.09 374.921 cv
171.074 375.19 171.028 375.46 170.923 375.723 cv
169.998 378.057 li
168.123 391.353 li
167.725 394.105 167.553 396.06 166.641 397.184 cv
166.641 397.592 li
148.195 357.573 mo
148.114 357.543 148.031 357.517 147.946 357.493 cv
147.818 357.458 147.689 357.431 147.561 357.412 cv
147.076 354.079 li
147.004 353.588 146.815 353.138 146.542 352.755 cv
146.817 352.951 147.059 353.192 147.256 353.469 cv
147.53 353.852 147.718 354.302 147.791 354.794 cv
148.195 357.573 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
kND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$kkND$k
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~kND$jk2tggk2k^djlPUcjlPUcjl>C]j5]1[j5]1[j5JtUiSibRi8EPOi8EPOi8EPNhr!>Khqm5HhVR,F
h;-oCh;-oCgY:K;gY:H9g=k97g=k97g=k65g"G'3f\"j/f\"g-f@SX+f%/F'f%/C%e^`4#eC<!teC<!t
eC)dndaHRldaHRlda6@fd*U.dd*U.dd*L%acd0q^c-=MXc-=MXc-=MWbfn;Tbfe2QbKJ)Ob0%lLb/qcI
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~k2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tgg
k2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tgg
k2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tgfjlPRajQ,=[
io8tUi8<GLhr!;IhVI#Cgt^W;g=b04g"G$1f@SU)f%&=#eC2mqda?IidEp4ccd0n^c-4DUbfe2Qb0%iJ
~>
<~k2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tgg
k2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tgg
k2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tgfjlPRajQ,=[
io8tUi8<GLhr!;IhVI#Cgt^W;g=b04g"G$1f@SU)f%&=#eC2mqda?IidEp4ccd0n^c-4DUbfe2Qb0%iJ
~>
<~k2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tgg
k2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tgg
k2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tgfjlPRajQ,=[
io8tUi8<GLhr!;IhVI#Cgt^W;g=b04g"G$1f@SU)f%&=#eC2mqda?IidEp4ccd0n^c-4DUbfe2Qb0%iJ
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
166.94 409.759 mo
165.927 409.759 li
145.937 409.759 li
145.638 409.759 li
144.924 409.759 li
144.924 409.044 li
145.223 409.044 li
165.212 409.044 li
166.226 409.044 li
166.226 397.592 li
166.641 397.592 li
166.94 397.592 li
166.94 398.306 li
166.94 409.759 li
165.927 396.877 mo
165.512 396.877 li
165.512 396.163 li
165.212 396.163 li
165.212 395.755 li
166.124 394.632 166.296 392.676 166.695 389.925 cv
168.569 376.628 li
169.495 374.295 li
169.599 374.031 169.645 373.761 169.662 373.493 cv
169.912 372.713 169.78 371.888 169.351 371.244 cv
169.64 371.436 169.88 371.68 170.065 371.958 cv
170.494 372.602 170.626 373.427 170.376 374.207 cv
170.36 374.475 170.314 374.745 170.209 375.009 cv
169.284 377.342 li
167.409 390.639 li
167.011 393.39 166.839 395.346 165.927 396.47 cv
165.927 396.877 li
147.561 357.412 mo
147.396 357.387 147.231 357.375 147.067 357.375 cv
147.027 357.375 146.986 357.375 146.946 357.377 cv
146.362 353.365 li
146.289 352.874 146.101 352.423 145.827 352.04 cv
146.102 352.237 146.344 352.478 146.542 352.755 cv
146.815 353.138 147.004 353.588 147.076 354.079 cv
147.561 357.412 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
io8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tWio8tW
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~io8tViSibSiS`YPi8EPNhr!>Khr!>Khr!>Ih;-oCh;-oCh;-oBgt^]?gtUT<gY:K:g=k97g=b04g"G'2
f\"g-f@SX+f%/F'f%/C%e^`4#eC<!teC<!teC<!tdaHRldaHRldaHRldF$@hdF$=fd*U.dcd0q`cd0k\
c-FV[cHa_Zbfn;Tbfn;Tbfn;Rb0%lLb0%lLb0%lKaiVZHaiMQEaN2HCa2c6@a2Z-=`l?$;`Pog8`Pog8
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibS
iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibS
iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibRi8EMMhVR,G
h;$f@gtUT<g=k65g"=s/f%/C%e^W*te'ldodF$@hdEp7dcd'h\c-=MVbKJ)OaiVZHaiMQDa2Z-=`Pod6
~>
<~iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibS
iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibS
iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibRi8EMMhVR,G
h;$f@gtUT<g=k65g"=s/f%/C%e^W*te'ldodF$@hdEp7dcd'h\c-=MVbKJ)OaiVZHaiMQDa2Z-=`Pod6
~>
<~iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibS
iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibS
iSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibRi8EMMhVR,G
h;$f@gtUT<g=k65g"=s/f%/C%e^W*te'ldodF$@hdEp7dcd'h\c-=MVbKJ)OaiVZHaiMQDa2Z-=`Pod6
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
166.226 409.044 mo
165.212 409.044 li
145.223 409.044 li
144.924 409.044 li
144.209 409.044 li
144.209 408.33 li
144.509 408.33 li
164.498 408.33 li
165.512 408.33 li
165.512 396.877 li
165.927 396.877 li
166.226 396.877 li
166.226 397.592 li
166.226 409.044 li
165.212 396.163 mo
164.797 396.163 li
164.797 395.449 li
164.498 395.449 li
164.498 395.041 li
165.41 393.917 165.582 391.962 165.98 389.21 cv
167.855 375.914 li
168.78 373.58 li
168.885 373.317 168.931 373.047 168.948 372.778 cv
169.198 371.998 169.065 371.173 168.636 370.529 cv
168.925 370.721 169.166 370.966 169.351 371.244 cv
169.78 371.888 169.912 372.713 169.662 373.493 cv
169.645 373.761 169.599 374.031 169.495 374.295 cv
168.569 376.628 li
166.695 389.925 li
166.296 392.676 166.124 394.632 165.212 395.755 cv
165.212 396.163 li
146.347 357.454 mo
145.648 352.651 li
145.575 352.159 145.387 351.709 145.113 351.326 cv
145.388 351.522 145.63 351.764 145.827 352.04 cv
146.101 352.423 146.289 352.874 146.362 353.365 cv
146.946 357.377 li
146.743 357.384 146.542 357.411 146.347 357.454 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~gt^]=g=k97g=k97g=k96g"G'3g"=s0f\"j.f@SX+f@SX+f@SX)e^`4#e^`4#e^`4"eC<!teC2mqe'ldo
daHOjdF$@hd*U.dd*U+bcd0q`cd0q`cd0k\c-=MXc-=MXc-=JVbfn;TbKJ)PbKJ&Nb0%lLb0%lLb0%fH
aN2HDaN2HB`l?$<`l?$<`l?$;`Pog8`Pf^5`5KU3_o'C0_ns:-_SX1,_SX1,_SEt&^qdb$^qdb$^q[Y!
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;
gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;
gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K9g"G'3f\"g-
f@JO(f$r4!eC;sre'c[ld*U+bcd'h]cHXSWbfn8RbK@uLaiVZGa2c6>`Pog8`5KR2_ns:,_83t'^V@Ou
~>
<~gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;
gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;
gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K9g"G'3f\"g-
f@JO(f$r4!eC;sre'c[ld*U+bcd'h]cHXSWbfn8RbK@uLaiVZGa2c6>`Pog8`5KR2_ns:,_83t'^V@Ou
~>
<~gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;
gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;
gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K9g"G'3f\"g-
f@JO(f$r4!eC;sre'c[ld*U+bcd'h]cHXSWbfn8RbK@uLaiVZGa2c6>`Pog8`5KR2_ns:,_83t'^V@Ou
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
165.512 408.33 mo
164.498 408.33 li
144.509 408.33 li
144.209 408.33 li
143.495 408.33 li
143.495 407.616 li
143.794 407.616 li
163.784 407.616 li
164.797 407.616 li
164.797 396.163 li
165.212 396.163 li
165.512 396.163 li
165.512 396.877 li
165.512 408.33 li
164.498 395.449 mo
164.083 395.449 li
164.083 394.735 li
163.784 394.735 li
163.784 394.327 li
164.696 393.203 164.868 391.248 165.266 388.496 cv
167.141 375.199 li
168.066 372.866 li
168.171 372.603 168.217 372.333 168.233 372.064 cv
168.484 371.284 168.351 370.459 167.922 369.815 cv
168.211 370.007 168.451 370.251 168.636 370.529 cv
169.065 371.173 169.198 371.998 168.948 372.778 cv
168.931 373.047 168.885 373.317 168.78 373.58 cv
167.855 375.914 li
165.98 389.21 li
165.582 391.962 165.41 393.917 164.498 395.041 cv
164.498 395.449 li
145.764 357.643 mo
144.933 351.936 li
144.861 351.445 144.672 350.995 144.399 350.612 cv
144.674 350.808 144.916 351.049 145.113 351.326 cv
145.387 351.709 145.575 352.159 145.648 352.651 cv
146.347 357.454 li
146.147 357.499 145.952 357.563 145.764 357.643 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#
e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#
e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#e^`4#
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~e^`4"eC<!teC2mqe'ldpe'ldpe'ZRjdF$@gd*U.dd*U.dd*U.ccd0q`cd'h]cHa_[c-=MXc-=MXc-=MW
bfn5Pb0%lLb0%lLb0%iJaiVZHaN2HDaN2EBa2c6@a2c6@a2c3>`l?$<`Pog8`Pog8`Pog8_o'C0_o'C0
_ns:-_SX1+_83t(_8*k%^qdb#^V@Ou^V@Ou^V@Os]tM+m]tM+m]tM+l]Y(ni]Xtef]=Y\d]"5Ja]",A^
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~eC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!t
eC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!t
eC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!se'landaHLh
d*L%acd'h]c-=JVbfn;SaiVZHaiMQDa2c3>`l?!:`Pf^5`59C._SO((^qd_"^:q=q]tD"j]Xtef]"5G_
~>
<~eC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!t
eC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!t
eC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!se'landaHLh
d*L%acd'h]c-=JVbfn;SaiVZHaiMQDa2c3>`l?!:`Pf^5`59C._SO((^qd_"^:q=q]tD"j]Xtef]"5G_
~>
<~eC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!t
eC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!t
eC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!teC<!se'landaHLh
d*L%acd'h]c-=JVbfn;SaiVZHaiMQDa2c3>`l?!:`Pf^5`59C._SO((^qd_"^:q=q]tD"j]Xtef]"5G_
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /13 /Gradient get_res exec grestore
}if
np
164.797 407.616 mo
163.784 407.616 li
143.794 407.616 li
143.495 407.616 li
142.781 407.616 li
142.781 406.902 li
143.08 406.902 li
163.069 406.902 li
164.083 406.902 li
164.083 395.449 li
164.498 395.449 li
164.797 395.449 li
164.797 396.163 li
164.797 407.616 li
163.784 394.735 mo
163.369 394.735 li
163.369 394.02 li
163.069 394.02 li
163.069 393.612 li
163.981 392.489 164.153 390.533 164.552 387.782 cv
166.427 374.485 li
167.352 372.152 li
167.456 371.888 167.503 371.618 167.519 371.35 cv
167.769 370.57 167.637 369.745 167.208 369.101 cv
167.497 369.293 167.737 369.537 167.922 369.815 cv
168.351 370.459 168.484 371.284 168.233 372.064 cv
168.217 372.333 168.171 372.603 168.066 372.866 cv
167.141 375.199 li
165.266 388.496 li
164.868 391.248 164.696 393.203 163.784 394.327 cv
163.784 394.735 li
145.199 357.953 mo
144.219 351.222 li
144.146 350.731 143.958 350.28 143.685 349.897 cv
143.96 350.094 144.201 350.335 144.399 350.612 cv
144.672 350.995 144.861 351.445 144.933 351.936 cv
145.764 357.643 li
145.566 357.728 145.377 357.832 145.199 357.953 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~c-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MX
c-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MX
c-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MXc-=MX
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~c-=MXc-=MXc-4DUbfn;Tbfn;Tbfe2QbKJ)Ob0%lLb/qcIaiVZGaN2HDaN)?Aa2c6@a2c6@a2Q$:`Pog8
`Pod6`5KU4_o'C0_o'C0_o'C0_SX1,_SX.*_83t(^qdb$^qd_"^V@Ou^V@Ou^V@Iq]tM+m]tM+m]tM(k
]Xtef]=Y\d]"5Ja]"5Ja]"5J_\@B&Y\@B&Y\@B&X\$riU\$i`R[^NWQ[^NWQ[^ENN[C*EL['[3I['R*F
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn8RbKJ&N
b/qcHaN)?A`l?$<`Pf^5_o'@._SX1+_83q&^V@Ls^:q:n]Y(ni]=PSa\[f8\\$riU\$i`Q[C*EM['[0G
~>
<~bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn8RbKJ&N
b/qcHaN)?A`l?$<`Pf^5_o'@._SX1+_83q&^V@Ls^:q:n]Y(ni]=PSa\[f8\\$riU\$i`Q[C*EM['[0G
~>
<~bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;T
bfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn;Tbfn8RbKJ&N
b/qcHaN)?A`l?$<`Pf^5_o'@._SX1+_83q&^V@Ls^:q:n]Y(ni]=PSa\[f8\\$riU\$i`Q[C*EM['[0G
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /14 /Gradient get_res exec grestore
}if
np
164.083 406.902 mo
163.069 406.902 li
143.08 406.902 li
142.781 406.902 li
142.067 406.902 li
142.067 406.187 li
142.366 406.187 li
162.355 406.187 li
163.369 406.187 li
163.369 394.735 li
163.784 394.735 li
164.083 394.735 li
164.083 395.449 li
164.083 406.902 li
163.069 394.02 mo
162.654 394.02 li
162.654 393.306 li
162.355 393.306 li
162.355 392.898 li
163.267 391.774 163.439 389.819 163.837 387.067 cv
165.712 373.771 li
166.638 371.438 li
166.742 371.174 166.788 370.904 166.805 370.636 cv
167.055 369.856 166.922 369.03 166.494 368.387 cv
166.782 368.579 167.023 368.823 167.208 369.101 cv
167.637 369.745 167.769 370.57 167.519 371.35 cv
167.503 371.618 167.456 371.888 167.352 372.152 cv
166.427 374.485 li
164.552 387.782 li
164.153 390.533 163.981 392.489 163.069 393.612 cv
163.069 394.02 li
144.656 358.416 mo
143.505 350.508 li
143.432 350.016 143.244 349.566 142.97 349.183 cv
143.245 349.379 143.487 349.621 143.685 349.897 cv
143.958 350.28 144.146 350.731 144.219 351.222 cv
145.199 357.953 li
145.003 358.087 144.821 358.242 144.656 358.416 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<
`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<
`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<`l?$<
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~`l?$;`Pog8`Pog8`Pog6_o'C0_o'C0_o'C0_o'C0_nj1*_83t(_83t(_8*k%^qdb#^V@Ou^V7Fr^:q=q
^:q7m]Y(ni]Y(ni]Y(ni]Y(ni]"5Ja]"5Ja]"5Ja\[f8]\[f5[\@B&Y\$riU\$riU\$riU[C*EM[C*EM
[C*EM[C*EKZa7!EZa7!EZa7!DZEgdAZE^[>Z*CR<Yct@9Yct@9Yct@7Y-+q1Y-+q1Y-+q1Y-+q1Y,n_+
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8
`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8
`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog7`5KU3_SX1,
_SX1*^qdb$^V@Ls^:h4n]=Y\e]=Y\c\[f8]\@B#W\$i`R[^<EK['[3GZEgdAZ*CO;Yck76YH=q/Xf\_-
~>
<~`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8
`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8
`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog7`5KU3_SX1,
_SX1*^qdb$^V@Ls^:h4n]=Y\e]=Y\c\[f8]\@B#W\$i`R[^<EK['[3GZEgdAZ*CO;Yck76YH=q/Xf\_-
~>
<~`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8
`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8
`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog8`Pog7`5KU3_SX1,
_SX1*^qdb$^V@Ls^:h4n]=Y\e]=Y\c\[f8]\@B#W\$i`R[^<EK['[3GZEgdAZ*CO;Yck76YH=q/Xf\_-
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /15 /Gradient get_res exec grestore
}if
np
163.369 406.187 mo
162.355 406.187 li
142.366 406.187 li
142.067 406.187 li
141.352 406.187 li
141.352 405.473 li
141.652 405.473 li
161.641 405.473 li
162.654 405.473 li
162.654 394.02 li
163.069 394.02 li
163.369 394.02 li
163.369 394.735 li
163.369 406.187 li
162.355 393.306 mo
161.94 393.306 li
161.94 392.592 li
161.641 392.592 li
161.641 392.184 li
162.553 391.06 162.725 389.105 163.123 386.353 cv
164.998 373.057 li
165.923 370.723 li
166.028 370.46 166.074 370.19 166.09 369.921 cv
166.341 369.141 166.208 368.316 165.779 367.672 cv
166.068 367.864 166.308 368.109 166.494 368.387 cv
166.922 369.03 167.055 369.856 166.805 370.636 cv
166.788 370.904 166.742 371.174 166.638 371.438 cv
165.712 373.771 li
163.837 387.067 li
163.439 389.819 163.267 391.774 162.355 392.898 cv
162.355 393.306 li
144.148 359.119 mo
142.79 349.794 li
142.718 349.302 142.53 348.852 142.256 348.469 cv
142.531 348.665 142.773 348.906 142.97 349.183 cv
143.244 349.566 143.432 350.016 143.505 350.508 cv
144.656 358.416 li
144.459 358.624 144.288 358.86 144.148 359.119 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m
]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m
]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m]tM+m
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~]tM+m]tM+m]tD"j]Y(nh]=Y\e]=Y\e]=Y\d]"5Ja]",A^\[f8\\@B&Y\@B&Y\@B&W[^NWQ[^NWQ[^NWQ
[^NTO[C*EM['[3I['[0GZa7!EZa7!EZa6sCZEgdAZ*CR=Z*CO;Yct@9Yct@9Yct:5Y-+q1Y-+q1Y-+q1
Y,n_+XK8M)XK8M)XK/D&X/i;$WiE)!Wi;tsWMukqW2QYnW2QYnW2QYmVl-GjVl$>gVP^5fVP^5fVP^5f
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni
]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni
]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(kg]"5Ja
]",A]\@8rV\$rcQ[C*EM['[0GZa-mBZEga?Yct=7YHP+2Xf\_-XK/D&X/i8#WMuhpW2HPkVl$>gV5:#b
~>
<~]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni
]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni
]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(kg]"5Ja
]",A]\@8rV\$rcQ[C*EM['[0GZa-mBZEga?Yct=7YHP+2Xf\_-XK/D&X/i8#WMuhpW2HPkVl$>gV5:#b
~>
<~]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni
]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni
]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(ni]Y(kg]"5Ja
]",A]\@8rV\$rcQ[C*EM['[0GZa-mBZEga?Yct=7YHP+2Xf\_-XK/D&X/i8#WMuhpW2HPkVl$>gV5:#b
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /16 /Gradient get_res exec grestore
}if
np
162.654 405.473 mo
161.641 405.473 li
141.652 405.473 li
141.352 405.473 li
140.638 405.473 li
140.638 404.759 li
140.937 404.759 li
160.926 404.759 li
161.94 404.759 li
161.94 393.306 li
162.355 393.306 li
162.654 393.306 li
162.654 394.02 li
162.654 405.473 li
161.641 392.592 mo
161.226 392.592 li
161.226 391.877 li
160.926 391.877 li
160.926 391.47 li
161.839 390.346 162.011 388.39 162.409 385.639 cv
164.284 372.342 li
165.209 370.009 li
165.314 369.745 165.36 369.475 165.376 369.207 cv
165.626 368.427 165.494 367.602 165.065 366.958 cv
165.354 367.15 165.594 367.394 165.779 367.672 cv
166.208 368.316 166.341 369.141 166.09 369.921 cv
166.074 370.19 166.028 370.46 165.923 370.723 cv
164.998 373.057 li
163.123 386.353 li
162.725 389.105 162.553 391.06 161.641 392.184 cv
161.641 392.592 li
143.719 360.365 mo
142.076 349.079 li
142.004 348.588 141.815 348.137 141.542 347.754 cv
141.817 347.951 142.059 348.192 142.256 348.469 cv
142.53 348.852 142.718 349.302 142.79 349.794 cv
144.148 359.119 li
144.032 359.335 143.938 359.568 143.87 359.815 cv
143.719 360.365 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I
['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I
['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I['[3I
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~['[3HZa7!EZa7!EZa7!DZEgdAZE^[>Z*CR<Yct@9Yck76YHP.6Yct@9Yck76YHP.3Xf\_-Xf\_-Xf\_,
XK8M)XK8M)WiE)!WiE%tWMukrWiE)!WiE%tWMukrW2QYnW2QVlVl-GjVl-GjVl-GjVl-GjV5:#bV5:#b
V50o_Unjf]USFTZUS=KWU8"BUTqS0RTqS0RTqS0RTqS0RTqJ'OTV.sMT:_aJT:VXGSt;OFSt;OFSt2FC
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!E
Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!E
Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!DZEgdAZ*CO;
Yck75YHP.5Y-+k-XK8M(X/i5!WMleqWMuhpVl-DhVP^5fVPL#`Una]ZU8"?TTV.sNTV.sMT:VXGSXl=B
~>
<~Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!E
Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!E
Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!DZEgdAZ*CO;
Yck75YHP.5Y-+k-XK8M(X/i5!WMleqWMuhpVl-DhVP^5fVPL#`Una]ZU8"?TTV.sNTV.sMT:VXGSXl=B
~>
<~Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!E
Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!E
Za7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!EZa7!DZEgdAZ*CO;
Yck75YHP.5Y-+k-XK8M(X/i5!WMleqWMuhpVl-DhVP^5fVPL#`Una]ZU8"?TTV.sNTV.sMT:VXGSXl=B
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /17 /Gradient get_res exec grestore
}if
np
161.94 404.759 mo
160.926 404.759 li
140.937 404.759 li
140.638 404.759 li
139.924 404.759 li
139.924 404.044 li
140.223 404.044 li
160.212 404.044 li
161.226 404.044 li
161.226 392.592 li
161.641 392.592 li
161.94 392.592 li
161.94 393.306 li
161.94 404.759 li
160.926 391.877 mo
160.512 391.877 li
160.512 391.163 li
160.212 391.163 li
160.212 390.755 li
161.124 389.632 161.296 387.676 161.695 384.925 cv
163.569 371.628 li
164.495 369.295 li
164.599 369.031 164.645 368.761 164.662 368.493 cv
164.912 367.713 164.78 366.888 164.351 366.244 cv
164.639 366.436 164.88 366.68 165.065 366.958 cv
165.494 367.602 165.626 368.427 165.376 369.207 cv
165.36 369.475 165.314 369.745 165.209 370.009 cv
164.284 372.342 li
162.409 385.639 li
162.011 388.39 161.839 390.346 160.926 391.47 cv
160.926 391.877 li
158.945 363.196 mo
158.876 363.06 158.796 362.928 158.707 362.802 cv
158.847 362.902 158.977 363.012 159.096 363.132 cv
159.045 363.152 158.995 363.173 158.945 363.196 cv
143.309 361.735 mo
141.362 348.365 li
141.289 347.874 141.101 347.423 140.827 347.04 cv
141.102 347.237 141.344 347.478 141.542 347.754 cv
141.815 348.137 142.004 348.588 142.076 349.079 cv
143.719 360.365 li
143.552 360.977 li
143.455 361.191 143.377 361.416 143.326 361.654 cv
143.309 361.735 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%
X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%
X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%X/i;%
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~X/i;$WiE)!WiE)!WiE(tW2QYnW2QYnW2QYmVl-GjVl-GjVl-GiVP^5fVPU,cV5:#aUnjf^Una][USFTZ
USFTZUSFTZTqS0RTqS0RTqS0RTV.sNTV/!PTqS0RTV.sNTV.pLT:_aJSt;OFSt;LDSXl=BSXl=BSXl:@
S=?";S"#n9R[T\6R[KS3R@0J3R[T\6R[KS3R@0J1R$a8.R$X/+Q^=&)QBmi&QBmi&QBmi%Q'IW"Q'@Mt
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE(uWMukqVl-Gj
Vl$>gVPU,cUnjc\US=KWU8"<RTV.sMTV.sNT:_^HSt2FBS=H+>S!oe6R@0G1R@0G0R$X/*QBd`#Q'ISu
~>
<~WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE(uWMukqVl-Gj
Vl$>gVPU,cUnjc\US=KWU8"<RTV.sMTV.sNT:_^HSt2FBS=H+>S!oe6R@0G1R@0G0R$X/*QBd`#Q'ISu
~>
<~WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!
WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE(uWMukqVl-Gj
Vl$>gVPU,cUnjc\US=KWU8"<RTV.sMTV.sNT:_^HSt2FBS=H+>S!oe6R@0G1R@0G0R$X/*QBd`#Q'ISu
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /18 /Gradient get_res exec grestore
}if
np
161.226 404.044 mo
160.212 404.044 li
140.223 404.044 li
139.924 404.044 li
139.209 404.044 li
139.209 403.33 li
139.509 403.33 li
159.498 403.33 li
160.512 403.33 li
160.512 391.877 li
160.926 391.877 li
161.226 391.877 li
161.226 392.592 li
161.226 404.044 li
160.212 391.163 mo
159.797 391.163 li
159.797 390.449 li
159.498 390.449 li
159.498 390.041 li
160.41 388.917 160.582 386.962 160.98 384.21 cv
162.855 370.914 li
163.78 368.58 li
163.885 368.317 163.931 368.047 163.948 367.779 cv
164.198 366.998 164.065 366.173 163.636 365.529 cv
163.925 365.721 164.166 365.966 164.351 366.244 cv
164.78 366.888 164.912 367.713 164.662 368.493 cv
164.645 368.761 164.599 369.031 164.495 369.295 cv
163.569 371.628 li
161.695 384.925 li
161.296 387.676 161.124 389.632 160.212 390.755 cv
160.212 391.163 li
158.529 363.439 mo
158.462 362.951 158.277 362.487 157.993 362.088 cv
158.273 362.287 158.513 362.529 158.707 362.802 cv
158.796 362.928 158.876 363.06 158.945 363.196 cv
158.799 363.264 158.66 363.345 158.529 363.439 cv
142.872 362.93 mo
140.648 347.651 li
140.575 347.159 140.387 346.709 140.113 346.326 cv
140.388 346.522 140.63 346.764 140.827 347.04 cv
141.101 347.423 141.289 347.874 141.362 348.365 cv
143.309 361.735 li
143.189 362.299 li
143.033 362.866 li
142.872 362.93 li
151.529 360.776 mo
151.432 360.558 151.311 360.351 151.17 360.158 cv
151.347 360.288 151.51 360.434 151.656 360.593 cv
151.611 360.652 151.569 360.713 151.529 360.776 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~TqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
TqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
TqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0RTqS0R
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~TqS0PT:_aJT:_aJT:_aISt;OFSt;OFSt;OESXl=BSXl=BSXl=AS=H+>S=5n8R[T\6R[T\6R[KS3R@0J3
R[TY4R@0J2R@0J2R@0G0R$a8.Q^=&*Q^=#(QBmi&Q'IW"Q'IW"Q'IW"Pa%DsPa%DsPa%DsPEV2oPEV/m
P*(lhOcbcfOH>QcOH>QcOH>QcOH>QcOH>QcOH>QbO,o?_O,f6\NfK-ZNK&pWNJrgTN/W^SN/W^SN/W^S
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sLSt;OFSXl=B
SXc4?S=?":R@0J2R@'D1R$a8.R$X/*QBmf$Pa%DsP`q;pPEM)lOcYZcO,o?_O,o?_O,f6[NJrgTMi3LO
~>
<~TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sLSt;OFSXl=B
SXc4?S=?":R@0J2R@'D1R$a8.R$X/*QBmf$Pa%DsP`q;pPEM)lOcYZcO,o?_O,o?_O,f6[NJrgTMi3LO
~>
<~TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sN
TV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sNTV.sLSt;OFSXl=B
SXc4?S=?":R@0J2R@'D1R$a8.R$X/*QBmf$Pa%DsP`q;pPEM)lOcYZcO,o?_O,o?_O,f6[NJrgTMi3LO
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /19 /Gradient get_res exec grestore
}if
np
160.512 403.33 mo
159.498 403.33 li
139.509 403.33 li
139.209 403.33 li
138.495 403.33 li
138.495 402.616 li
138.794 402.616 li
158.784 402.616 li
159.797 402.616 li
159.797 391.163 li
160.212 391.163 li
160.512 391.163 li
160.512 391.877 li
160.512 403.33 li
159.498 390.449 mo
159.083 390.449 li
159.083 389.735 li
158.784 389.735 li
158.784 389.327 li
159.696 388.203 159.868 386.247 160.266 383.496 cv
162.141 370.2 li
163.066 367.866 li
163.171 367.603 163.217 367.333 163.233 367.064 cv
163.484 366.284 163.351 365.459 162.922 364.815 cv
163.211 365.007 163.451 365.251 163.636 365.529 cv
164.065 366.173 164.198 366.998 163.948 367.779 cv
163.931 368.047 163.885 368.317 163.78 368.58 cv
162.855 370.914 li
160.98 384.21 li
160.582 386.962 160.41 388.917 159.498 390.041 cv
159.498 390.449 li
157.077 365.888 mo
157.519 364.553 li
157.65 364.203 li
158.017 363.221 157.844 362.169 157.278 361.374 cv
157.559 361.573 157.799 361.815 157.993 362.088 cv
158.277 362.487 158.462 362.951 158.529 363.439 cv
158.152 363.709 157.842 364.082 157.647 364.54 cv
157.077 365.888 li
142.295 363.156 mo
139.933 346.936 li
139.861 346.445 139.672 345.995 139.399 345.612 cv
139.674 345.808 139.916 346.049 140.113 346.326 cv
140.387 346.709 140.575 347.159 140.648 347.651 cv
142.872 362.93 li
142.295 363.156 li
151.078 361.786 mo
151.177 360.936 150.94 360.103 150.456 359.443 cv
150.648 359.584 150.822 359.744 150.978 359.92 cv
151.046 359.996 151.11 360.076 151.17 360.158 cv
151.311 360.351 151.432 360.558 151.529 360.776 cv
151.413 360.956 151.315 361.151 151.237 361.36 cv
151.078 361.786 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&
QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&
QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&QBmi&
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~QBmi%Q'IW"Q'IW"Q'IW!Pa%DsPa%DsPa%DqP*1ukP*1ukP*1ujOcbcgOcbcgOcbcfOH>QcOH>QcOH>Qb
O,o<]NfK-[NfK-[NfK*YNK&pWNK&pWNK&jSMi3LOMi3LOMi3IMMMd:KMMd:KMMd7IM2@(GMMd:KMMd7I
M26tDLkpkCLkpkCLkgb@LPLY>L5(G;L4t>8KnY57KnY57KnP,4KS5#3KS5#3KS5#3KS5#3KS5#3KS+o0
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"
Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"
Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW!Pa%DsPEV2o
P*(lhOcYZdOH>NaO,o?^NK&pWNJrgTN/NRNMMd7IM2@(FM2@(GLkgb@LPLV=KnY25KS5#2K7ef/K7ef/
~>
<~Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"
Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"
Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW!Pa%DsPEV2o
P*(lhOcYZdOH>NaO,o?^NK&pWNJrgTN/NRNMMd7IM2@(FM2@(GLkgb@LPLV=KnY25KS5#2K7ef/K7ef/
~>
<~Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"
Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"
Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW"Q'IW!Pa%DsPEV2o
P*(lhOcYZdOH>NaO,o?^NK&pWNJrgTN/NRNMMd7IM2@(FM2@(GLkgb@LPLV=KnY25KS5#2K7ef/K7ef/
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /20 /Gradient get_res exec grestore
}if
np
159.797 402.616 mo
158.784 402.616 li
138.794 402.616 li
138.495 402.616 li
137.781 402.616 li
137.781 401.902 li
138.08 401.902 li
158.069 401.902 li
159.083 401.902 li
159.083 390.449 li
159.498 390.449 li
159.797 390.449 li
159.797 391.163 li
159.797 402.616 li
158.784 389.735 mo
158.069 389.735 li
158.069 388.612 li
158.981 387.489 159.154 385.533 159.552 382.782 cv
161.427 369.485 li
162.352 367.152 li
162.456 366.888 162.503 366.618 162.519 366.35 cv
162.769 365.57 162.637 364.745 162.208 364.101 cv
162.497 364.293 162.737 364.537 162.922 364.815 cv
163.351 365.459 163.484 366.284 163.233 367.064 cv
163.217 367.333 163.171 367.603 163.066 367.866 cv
162.141 370.2 li
160.266 383.496 li
159.868 386.247 159.696 388.203 158.784 389.327 cv
158.784 389.735 li
156.736 366.691 mo
156.468 366.637 156.196 366.575 155.921 366.504 cv
156.805 363.839 li
156.936 363.488 li
157.303 362.506 157.129 361.454 156.564 360.66 cv
156.844 360.858 157.085 361.101 157.278 361.374 cv
157.844 362.169 158.017 363.221 157.65 364.203 cv
157.519 364.553 li
157.077 365.888 li
156.736 366.691 li
149.924 364.875 mo
149.734 364.844 149.541 364.824 149.349 364.8 cv
149.775 363.194 li
149.815 363.032 li
149.824 362.949 li
150.224 361.713 li
150.267 361.569 li
150.545 360.553 150.32 359.518 149.742 358.729 cv
149.934 358.87 150.108 359.03 150.264 359.205 cv
150.331 359.282 150.395 359.361 150.456 359.443 cv
150.94 360.103 151.177 360.936 151.078 361.786 cv
149.924 364.875 li
141.718 363.382 mo
139.219 346.222 li
139.146 345.731 138.958 345.28 138.685 344.897 cv
138.959 345.094 139.201 345.335 139.399 345.612 cv
139.672 345.995 139.861 346.445 139.933 346.936 cv
142.295 363.156 li
141.718 363.382 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Mi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LO
Mi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LO
Mi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LOMi3LO
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~Mi3LNMMd:KMMd:KMMd:JM2@(GM2@(GM2@(FLkpkCLkgb@LPLY>L5(G;L5(G;L5(G:KnY57KnY57KnY56
KS5#3KS5#3K7ef/K7ec-JqAT+JUrB'JUrE)JqAT+JUrB'JUrB'JUrB'J:N0#J:N0#J:N0#It)rtIt)rt
IsuiqIXZ`oI=6NlI=6NlI=6NkI!g<hI!^3eH[C*dH[C*dH[:!aH?sm_H$O[\H$O[\H$O[[G^+IXG^+IX
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~MMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:K
MMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:K
MMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:JM2@(GLkpkC
Lkgb?L4t>8KnY25KS5#2K7ec-Jq8K'JUrB'J:N0#J:E&uIsuiqIXQWlI!g<hH[C'bH?sm_H$FRYG^+FV
~>
<~MMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:K
MMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:K
MMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:JM2@(GLkpkC
Lkgb?L4t>8KnY25KS5#2K7ec-Jq8K'JUrB'J:N0#J:E&uIsuiqIXQWlI!g<hH[C'bH?sm_H$FRYG^+FV
~>
<~MMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:K
MMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:K
MMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:KMMd:JM2@(GLkpkC
Lkgb?L4t>8KnY25KS5#2K7ec-Jq8K'JUrB'J:N0#J:E&uIsuiqIXQWlI!g<hH[C'bH?sm_H$FRYG^+FV
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /21 /Gradient get_res exec grestore
}if
np
159.083 401.902 mo
158.069 401.902 li
138.08 401.902 li
137.781 401.902 li
137.067 401.902 li
137.067 389.735 li
138.08 389.735 li
138.08 388.601 li
136.639 387.265 135.991 384.944 135.256 382.709 cv
134.535 380.518 133.952 375.832 133.861 372.416 cv
133.392 370.395 li
133.194 369.54 li
132.867 368.137 133.569 366.745 134.798 366.122 cv
133.175 346.916 li
133.034 345.242 134.277 343.769 135.952 343.628 cv
136.038 343.62 136.124 343.617 136.21 343.617 cv
137.217 343.617 138.128 344.118 138.685 344.897 cv
138.958 345.28 139.146 345.731 139.219 346.222 cv
141.718 363.382 li
142.295 363.156 li
142.872 362.93 li
143.033 362.866 li
143.189 362.299 li
143.309 361.735 li
143.326 361.654 li
143.377 361.416 143.455 361.191 143.552 360.977 cv
143.719 360.365 li
143.87 359.815 li
143.938 359.568 144.032 359.335 144.148 359.119 cv
144.288 358.86 144.459 358.624 144.656 358.416 cv
144.821 358.242 145.003 358.087 145.199 357.953 cv
145.377 357.832 145.566 357.728 145.764 357.643 cv
145.952 357.563 146.147 357.499 146.347 357.454 cv
146.542 357.411 146.743 357.384 146.946 357.377 cv
146.986 357.375 147.027 357.375 147.067 357.375 cv
147.231 357.375 147.396 357.387 147.561 357.412 cv
147.689 357.431 147.818 357.458 147.946 357.493 cv
148.031 357.517 148.114 357.543 148.195 357.573 cv
148.43 357.657 148.649 357.766 148.852 357.895 cv
149.114 358.062 149.348 358.264 149.549 358.491 cv
149.617 358.568 149.681 358.647 149.742 358.729 cv
150.32 359.518 150.545 360.553 150.267 361.569 cv
150.224 361.713 li
149.824 362.949 li
149.815 363.032 li
149.775 363.194 li
149.349 364.8 li
149.541 364.824 149.734 364.844 149.924 364.875 cv
151.078 361.786 li
151.237 361.36 li
151.315 361.151 151.413 360.956 151.529 360.776 cv
151.569 360.713 151.611 360.652 151.656 360.593 cv
151.664 360.582 151.673 360.571 151.682 360.56 cv
151.838 360.358 152.017 360.179 152.214 360.025 cv
152.387 359.89 152.574 359.774 152.772 359.68 cv
152.903 359.617 153.039 359.563 153.179 359.52 cv
153.227 359.505 153.275 359.491 153.324 359.478 cv
153.57 359.414 153.826 359.381 154.084 359.381 cv
154.438 359.381 154.799 359.443 155.15 359.575 cv
155.742 359.796 156.224 360.181 156.564 360.66 cv
157.129 361.454 157.303 362.506 156.936 363.488 cv
156.805 363.839 li
155.921 366.504 li
156.196 366.575 156.468 366.637 156.736 366.691 cv
157.077 365.888 li
157.647 364.54 li
157.842 364.082 158.152 363.709 158.529 363.439 cv
158.66 363.345 158.799 363.264 158.945 363.196 cv
158.995 363.173 159.045 363.152 159.096 363.132 cv
159.399 363.013 159.723 362.95 160.052 362.95 cv
160.39 362.95 160.734 363.016 161.065 363.156 cv
161.549 363.361 161.937 363.695 162.208 364.101 cv
162.637 364.745 162.769 365.57 162.519 366.35 cv
162.503 366.618 162.456 366.888 162.352 367.152 cv
161.427 369.485 li
159.552 382.782 li
159.154 385.533 158.981 387.489 158.069 388.612 cv
158.069 389.735 li
158.784 389.735 li
159.083 389.735 li
159.083 390.449 li
159.083 401.902 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/22 
<<
/ShadingType 3 
/ColorSpace /0 /CSA get_res
/Coords [0 0 0 0 0 1 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
It)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rtIt)rt
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~It)rtIt)rtIsuiqIXZ`pIXZ`pIXQWmI=6NlI=6NlI=-EiI!g<hI!g<hI!^3eH[C*dH[C*dH[:!aH?sm`
H?sj^H$O[\H$O[\H$OXZG^+IXG^+IXG^+FVGB\7TGB\7TGB\4RG'8%PG'8%PG'8"NF`hhLF`hhLF`heJ
FEDVHFEDVGF)uDDF)uDDF)uDCEcQ2@EcQ2@EcQ2?EH,u<EH,u<EH,u;E,]c8E,]c8E,]c7Df9Q4Df9Q4
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds [.709532 ]
/Encode [0 1 0 1 ]
>>
>>/Gradient add_res /22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/22 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~IXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`p
IXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`p
IXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ]nI=6Kj
I!g<gH[C*dH?sm`H?jd]G^+IXG^"@UGB\4RG'8"NF`hhKFEDVHF)uDCEcQ2@EH,u<EH#l9E,TZ5Df9N2
~>
<~IXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`p
IXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`p
IXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ]nI=6Kj
I!g<gH[C*dH?sm`H?jd]G^+IXG^"@UGB\4RG'8"NF`hhKFEDVHF)uDCEcQ2@EH,u<EH#l9E,TZ5Df9N2
~>
<~IXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`p
IXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`p
IXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ`pIXZ]nI=6Kj
I!g<gH[C*dH?sm`H?jd]G^+IXG^"@UGB\4RG'8"NF`hhKFEDVHF)uDCEcQ2@EH,u<EH#l9E,TZ5Df9N2
~>
]
>>
0 0 0 0 0 1 [
]true true []
/DeviceRGB
RadialShade
} /Gradient add_res /22 /Gradient get_res exec grestore
}if
np
139.202 346.169 mo
142.012 365.468 li
142.301 367.456 140.924 369.302 138.936 369.591 cv
136.949 369.88 135.103 368.503 134.813 366.516 cv
134.788 366.298 li
133.146 346.864 li
133.004 345.187 134.249 343.711 135.928 343.569 cv
137.541 343.433 138.968 344.589 139.202 346.169 cv
cp
.992157 .752941 .0588235 rgb
f
147.972 364.69 mo
142.904 364.69 137.79 363.214 134.196 368.542 cv
133.313 369.851 134.108 379.318 135.23 382.729 cv
136.353 386.141 137.261 389.769 141.108 389.769 cv
155.042 389.769 li
158.89 389.769 158.914 387.373 159.575 382.802 cv
162.009 365.542 li
158.161 368.985 153.443 364.69 147.972 364.69 cv
cp
f
149.779 363.175 mo
146.966 373.784 li
146.534 375.412 144.865 376.382 143.238 375.95 cv
141.662 375.532 140.705 373.946 141.037 372.369 cv
143.317 361.632 li
143.698 359.837 145.463 358.69 147.258 359.072 cv
149.053 359.453 150.2 361.218 149.818 363.013 cv
149.779 363.175 li
cp
.678431 .513726 .0431373 rgb
f
150.229 361.69 mo
146.497 373.224 li
145.978 374.826 144.259 375.705 142.657 375.187 cv
141.101 374.683 140.23 373.04 140.656 371.48 cv
143.862 359.789 li
144.348 358.02 146.176 356.978 147.946 357.463 cv
149.716 357.949 150.757 359.777 150.271 361.547 cv
150.229 361.69 li
cp
.992157 .752941 .0588235 rgb
f
141.756 371.398 mo
141.756 371.398 140.704 373.191 141.863 374.186 cv
143.022 375.179 144.09 374.858 144.653 374.469 cv
145.369 373.971 145.835 372.481 145.835 372.481 cv
141.756 371.398 li
cp
1 1 1 rgb
f
158.09 401.96 mo
138.061 401.96 li
138.061 387.373 li
158.09 387.373 li
158.09 401.96 li
cp
.992157 .752941 .0588235 rgb
f
148.146 367.363 mo
149.131 366.747 149.574 365.501 149.139 364.378 cv
148.646 363.106 147.216 362.473 145.944 362.965 cv
135.906 366.849 li
134.452 367.417 133.61 369.004 134.019 370.55 cv
134.099 370.854 li
135.873 377.564 li
136.093 375.22 136.713 373.744 139.039 372.77 cv
139.581 372.542 148.146 367.363 148.146 367.363 cv
cp
.678431 .513726 .0431373 rgb
f
141.292 370.26 mo
141.598 369.685 147.297 366.534 147.297 366.534 cv
148.311 365.906 148.764 364.626 148.313 363.477 cv
147.806 362.183 146.346 361.544 145.052 362.052 cv
135.035 365.978 li
133.637 366.523 132.814 368.028 133.164 369.533 cv
133.363 370.391 li
135.689 380.405 li
135.807 380.897 136.002 381.401 136.274 381.859 cv
137.717 384.29 140.857 385.091 143.287 383.648 cv
143.618 383.451 143.915 383.222 144.183 382.97 cv
141.299 381.903 139.884 370.964 141.292 370.26 cv
cp
.992157 .752941 .0588235 rgb
f
150.109 377.432 mo
149.791 377.432 149.468 377.382 149.15 377.276 cv
147.552 376.747 146.686 375.022 147.216 373.424 cv
151.058 361.839 li
151.588 360.241 153.313 359.374 154.911 359.905 cv
156.508 360.435 157.374 362.159 156.844 363.757 cv
153.002 375.343 li
152.578 376.622 151.387 377.432 150.109 377.432 cv
cp
.678431 .513726 .0431373 rgb
f
156.698 376.997 mo
156.377 376.997 156.051 376.938 155.735 376.813 cv
154.394 376.279 153.738 374.762 154.27 373.421 cv
157.524 365.215 li
158.056 363.873 159.576 363.219 160.915 363.749 cv
162.257 364.281 162.913 365.799 162.381 367.141 cv
159.127 375.346 li
158.72 376.371 157.737 376.997 156.698 376.997 cv
cp
f
149.949 376.562 mo
149.595 376.562 149.235 376.499 148.883 376.367 cv
147.306 375.778 146.505 374.023 147.094 372.446 cv
151.244 361.337 li
151.832 359.76 153.587 358.957 155.165 359.549 cv
156.742 360.137 157.543 361.894 156.954 363.47 cv
152.805 374.579 li
152.347 375.805 151.185 376.562 149.949 376.562 cv
cp
.992157 .752941 .0588235 rgb
f
156.697 376.126 mo
156.357 376.126 156.012 376.059 155.68 375.918 cv
154.352 375.356 153.73 373.823 154.292 372.493 cv
157.667 364.523 li
158.229 363.196 159.765 362.577 161.091 363.137 cv
162.42 363.699 163.041 365.231 162.479 366.562 cv
159.104 374.531 li
158.683 375.527 157.715 376.126 156.697 376.126 cv
cp
f
159.105 401.96 mo
137.045 401.96 li
137.045 389.769 li
159.105 389.769 li
159.105 401.96 li
cp
.317647 .486275 .619608 rgb
f
143.231 363.208 mo
143.503 364.024 li
143.503 364.024 146.514 362.723 146.832 362.775 cv
147.15 362.827 146.941 362.174 146.174 362.065 cv
145.408 361.956 143.231 363.208 143.231 363.208 cv
cp
1 1 1 rgb
f
148.209 372.736 mo
148.209 372.736 147.204 374.449 148.311 375.399 cv
149.419 376.349 150.44 376.043 150.978 375.67 cv
151.663 375.195 152.108 373.771 152.108 373.771 cv
148.209 372.736 li
cp
f
155.242 372.842 mo
155.242 372.842 154.4 374.275 155.327 375.071 cv
156.254 375.865 157.109 375.61 157.56 375.298 cv
158.133 374.899 158.505 373.707 158.505 373.707 cv
155.242 372.842 li
cp
f
138.045 400.96 mo
158.105 400.96 li
158.09 390.769 li
157.538 390.769 157.09 390.321 157.09 389.769 cv
157.09 388.645 li
157.09 388.415 157.169 388.192 157.313 388.015 cv
157.944 387.237 158.157 385.716 158.451 383.608 cv
160.463 369.339 li
160.524 369.109 li
161.451 366.772 li
161.506 366.635 161.538 366.472 161.55 366.275 cv
161.596 366.031 li
161.853 365.231 161.469 364.382 160.702 364.058 cv
159.899 363.721 158.924 364.12 158.588 364.914 cv
157.675 367.068 li
157.491 367.505 157.024 367.756 156.559 367.659 cv
156.272 367.603 155.982 367.536 155.689 367.461 cv
155.421 367.393 155.193 367.215 155.06 366.972 cv
154.926 366.729 154.9 366.44 154.988 366.178 cv
156.018 363.119 li
156.208 362.607 156.189 362.052 155.962 361.554 cv
155.735 361.056 155.328 360.677 154.816 360.486 cv
153.77 360.093 152.563 360.66 152.181 361.687 cv
150.865 365.209 li
150.698 365.657 150.236 365.931 149.766 365.846 cv
149.63 365.824 149.494 365.808 149.357 365.792 cv
149.231 365.776 li
148.944 365.742 148.686 365.584 148.524 365.345 cv
148.362 365.106 148.312 364.808 148.386 364.528 cv
148.831 362.842 li
148.842 362.76 li
148.876 362.621 li
149.308 361.279 li
149.646 360.048 148.916 358.767 147.681 358.427 cv
146.465 358.096 145.158 358.847 144.827 360.054 cv
144.507 361.219 li
144.454 361.366 li
144.38 361.53 144.328 361.686 144.295 361.84 cv
143.988 363.111 li
143.904 363.416 143.682 363.663 143.388 363.777 cv
142.07 364.294 li
141.786 364.407 141.468 364.381 141.203 364.228 cv
140.939 364.074 140.759 363.81 140.715 363.508 cv
138.212 346.314 li
138.056 345.257 137.094 344.481 136.012 344.565 cv
135.466 344.612 134.972 344.867 134.618 345.286 cv
134.265 345.704 134.096 346.234 134.143 346.78 cv
135.769 366.025 li
135.803 366.431 135.587 366.817 135.224 367.001 cv
134.37 367.435 133.923 368.382 134.138 369.307 cv
134.807 372.189 li
134.832 372.389 li
134.928 375.949 135.532 380.447 136.18 382.416 cv
136.388 383.053 li
137.023 385.013 137.623 386.863 138.741 387.899 cv
138.944 388.089 139.061 388.355 139.061 388.633 cv
139.061 389.769 li
139.061 390.321 138.613 390.769 138.061 390.769 cv
138.045 390.769 li
138.045 400.96 li
cp
159.105 402.96 mo
137.045 402.96 li
136.493 402.96 136.045 402.513 136.045 401.96 cv
136.045 389.769 li
136.045 389.287 136.385 388.885 136.838 388.79 cv
135.699 387.412 135.083 385.514 134.485 383.67 cv
134.281 383.041 li
133.496 380.657 132.934 375.859 132.836 372.544 cv
132.19 369.759 li
131.819 368.166 132.441 366.538 133.724 365.586 cv
132.149 346.948 li
132.058 345.871 132.392 344.822 133.09 343.996 cv
133.788 343.169 134.766 342.664 135.844 342.573 cv
137.967 342.391 139.883 343.935 140.191 346.023 cv
142.398 361.182 li
142.45 360.994 142.517 360.808 142.598 360.618 cv
142.898 359.524 li
143.412 357.651 145.126 356.344 147.065 356.344 cv
147.451 356.344 147.836 356.396 148.21 356.498 cv
149.739 356.918 150.851 358.112 151.239 359.541 cv
152.316 358.468 154.032 358.057 155.516 358.612 cv
156.527 358.989 157.332 359.739 157.782 360.724 cv
158.038 361.286 158.161 361.886 158.148 362.485 cv
159.104 361.884 160.385 361.753 161.48 362.216 cv
163.169 362.93 164.037 364.765 163.537 366.522 cv
163.505 366.882 163.431 367.206 163.311 367.509 cv
162.427 369.736 li
160.432 383.885 li
160.137 385.996 159.913 387.598 159.214 388.774 cv
159.715 388.828 160.105 389.253 160.105 389.769 cv
160.105 401.96 li
160.105 402.513 159.658 402.96 159.105 402.96 cv
cp
.239216 .27451 .333333 rgb
f
144.118 333.082 mo
162.664 331.156 179.262 344.636 181.189 363.184 cv
183.111 381.733 169.637 398.328 151.09 400.256 cv
132.541 402.18 115.943 388.702 114.021 370.153 cv
112.092 351.604 125.569 335.009 144.118 333.082 cv
cp
86.333 358.883 mo
89.2373 386.87 li
103.36 386.689 li
104.313 388.798 105.413 390.821 106.643 392.75 cv
98.7725 404.488 li
120.617 422.224 li
130.476 412.109 li
132.608 412.915 134.813 413.576 137.069 414.075 cv
139.818 427.94 li
167.807 425.033 li
167.64 410.907 li
169.736 409.958 171.75 408.862 173.67 407.64 cv
185.423 415.499 li
203.16 393.653 li
193.049 383.781 li
193.854 381.65 194.51 379.455 195.012 377.204 cv
208.876 374.453 li
205.968 346.466 li
191.841 346.634 li
190.895 344.537 189.797 342.522 188.573 340.6 cv
196.432 328.85 li
174.588 311.113 li
164.716 321.225 li
162.581 320.418 160.381 319.758 158.126 319.257 cv
155.388 305.397 li
127.399 308.304 li
127.583 322.425 li
125.473 323.376 123.454 324.476 121.522 325.704 cv
109.784 317.838 li
92.0488 339.685 li
102.163 349.544 li
101.355 351.682 100.694 353.889 100.192 356.147 cv
86.333 358.883 li
cp
.415686 .709804 .768627 rgb
f
146.27 407.531 mo
168.803 408.266 187.731 390.533 188.466 368.001 cv
189.2 345.471 171.468 326.542 148.936 325.808 cv
126.406 325.073 107.476 342.806 106.741 365.337 cv
106.006 387.868 123.741 406.797 146.27 407.531 cv
cp
148.969 324.761 mo
172.081 325.514 190.267 344.924 189.513 368.036 cv
188.76 391.144 169.348 409.331 146.236 408.579 cv
123.128 407.825 104.937 388.411 105.69 365.303 cv
106.444 342.19 125.861 324.007 148.969 324.761 cv
cp
1 1 1 rgb
f
34.3613 369.383 mo
31.1113 369.383 li
31.1113 379 li
28.8301 379 li
28.8301 369.383 li
25.627 369.383 li
25.627 367.625 li
34.3613 367.625 li
34.3613 369.383 li
cp
.0588235 .168627 .188235 rgb
f
42.0957 372.273 mo
42.0957 371.389 41.874 370.662 41.4316 370.094 cv
40.9888 369.526 40.377 369.242 39.5957 369.242 cv
38.8247 369.242 38.2246 369.526 37.7949 370.094 cv
37.3652 370.662 37.1504 371.389 37.1504 372.273 cv
37.1504 374.336 li
37.1504 375.237 37.3662 375.972 37.7988 376.539 cv
38.231 377.107 38.835 377.391 39.6113 377.391 cv
40.3926 377.391 41.002 377.107 41.4395 376.539 cv
41.877 375.972 42.0957 375.237 42.0957 374.336 cv
42.0957 372.273 li
cp
44.3691 374.336 mo
44.3691 375.737 43.9287 376.893 43.0488 377.801 cv
42.1685 378.71 41.0225 379.164 39.6113 379.164 cv
38.2051 379.164 37.0645 378.709 36.1895 377.797 cv
35.3145 376.886 34.877 375.732 34.877 374.336 cv
34.877 372.289 li
34.877 370.898 35.313 369.746 36.1855 368.832 cv
37.0576 367.918 38.1943 367.461 39.5957 367.461 cv
41.0068 367.461 42.1553 367.918 43.041 368.832 cv
43.9263 369.746 44.3691 370.898 44.3691 372.289 cv
44.3691 374.336 li
cp
f
55.1895 367.625 mo
55.1895 375.07 li
55.1895 376.352 54.7646 377.354 53.916 378.078 cv
53.0669 378.803 51.9653 379.164 50.6113 379.164 cv
49.2622 379.164 48.167 378.803 47.3262 378.078 cv
46.4849 377.354 46.0645 376.352 46.0645 375.07 cv
46.0645 367.625 li
48.3535 367.625 li
48.3535 375.07 li
48.3535 375.831 48.5566 376.412 48.9629 376.813 cv
49.3691 377.214 49.9185 377.414 50.6113 377.414 cv
51.3145 377.414 51.8716 377.214 52.2832 376.813 cv
52.6943 376.412 52.9004 375.831 52.9004 375.07 cv
52.9004 367.625 li
55.1895 367.625 li
cp
f
65.6973 375.234 mo
65.7129 375.281 li
65.7334 376.495 65.3638 377.445 64.6035 378.133 cv
63.8428 378.82 62.7935 379.164 61.4551 379.164 cv
60.0903 379.164 58.9888 378.726 58.1504 377.848 cv
57.3115 376.971 56.8926 375.836 56.8926 374.445 cv
56.8926 372.188 li
56.8926 370.803 57.3013 369.668 58.1191 368.785 cv
58.9365 367.902 60.0098 367.461 61.3379 367.461 cv
62.7231 367.461 63.8066 367.8 64.5879 368.477 cv
65.3691 369.154 65.749 370.107 65.7285 371.336 cv
65.7129 371.383 li
63.4941 371.383 li
63.4941 370.654 63.3184 370.111 62.9668 369.754 cv
62.6152 369.397 62.0723 369.219 61.3379 369.219 cv
60.6553 369.219 60.123 369.494 59.7402 370.043 cv
59.3574 370.593 59.166 371.303 59.166 372.172 cv
59.166 374.445 li
59.166 375.32 59.3677 376.034 59.7715 376.586 cv
60.1748 377.139 60.7363 377.414 61.4551 377.414 cv
62.1372 377.414 62.6465 377.236 62.9824 376.879 cv
63.3184 376.522 63.4863 375.975 63.4863 375.234 cv
65.6973 375.234 li
cp
f
76.5332 379 mo
74.2598 379 li
74.2598 374.273 li
69.627 374.273 li
69.627 379 li
67.3379 379 li
67.3379 367.625 li
69.627 367.625 li
69.627 372.516 li
74.2598 372.516 li
74.2598 367.625 li
76.5332 367.625 li
76.5332 379 li
cp
f
240.002 113.191 mo
229.495 113.191 220.433 105.87 215.325 100.675 cv
220.538 105.801 229.255 112.477 239.288 112.477 cv
255.225 112.477 267.839 95.6316 268.368 94.9144 cv
268.806 94.3218 li
268.368 93.7293 li
268.188 93.4848 266.605 91.3682 263.965 88.6832 cv
267.032 91.6987 268.886 94.1779 269.082 94.4436 cv
269.52 95.036 li
269.082 95.6287 li
268.553 96.346 255.94 113.191 240.002 113.191 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
239.288 112.477 mo
229.255 112.477 220.538 105.801 215.325 100.675 cv
215.08 100.434 214.844 100.197 214.614 99.9641 cv
219.827 105.089 228.542 111.763 238.573 111.763 cv
254.511 111.763 267.125 94.9174 267.654 94.2002 cv
268.091 93.6075 li
267.654 93.015 li
267.473 92.7706 265.891 90.6547 263.252 87.9703 cv
263.497 88.2113 263.735 88.4499 263.965 88.6832 cv
266.605 91.3682 268.188 93.4848 268.368 93.7293 cv
268.806 94.3218 li
268.368 94.9144 li
267.839 95.6316 255.225 112.477 239.288 112.477 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
238.573 111.763 mo
228.542 111.763 219.827 105.089 214.614 99.9641 cv
214.366 99.7206 214.128 99.4816 213.896 99.246 cv
219.109 104.372 227.825 111.048 237.859 111.048 cv
253.797 111.048 266.41 94.2031 266.939 93.4858 cv
267.377 92.8933 li
266.939 92.3007 li
266.759 92.0562 265.175 89.9381 262.534 87.2524 cv
262.781 87.4954 263.021 87.7352 263.252 87.9703 cv
265.891 90.6547 267.473 92.7706 267.654 93.015 cv
268.091 93.6075 li
267.654 94.2002 li
267.125 94.9174 254.511 111.763 238.573 111.763 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
237.859 111.048 mo
227.825 111.048 219.109 104.372 213.896 99.246 cv
213.65 99.0045 213.412 98.766 213.182 98.5323 cv
218.395 103.658 227.112 110.334 237.145 110.334 cv
253.083 110.334 265.696 93.4888 266.225 92.7715 cv
266.663 92.1789 li
266.225 91.5864 li
266.045 91.342 264.462 89.2257 261.823 86.5421 cv
262.068 86.7826 262.305 87.0196 262.534 87.2524 cv
265.175 89.9381 266.759 92.0562 266.939 92.3007 cv
267.377 92.8933 li
266.939 93.4858 li
266.41 94.2031 253.797 111.048 237.859 111.048 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
237.145 110.334 mo
227.112 110.334 218.395 103.658 213.182 98.5323 cv
212.937 98.2908 212.7 98.0534 212.47 97.8196 cv
217.683 102.945 226.398 109.62 236.431 109.62 cv
252.368 109.62 264.982 92.7745 265.511 92.0573 cv
265.948 91.4646 li
265.511 90.8722 li
265.331 90.6277 263.747 88.5104 261.107 85.8253 cv
261.354 86.0683 261.592 86.3069 261.823 86.5421 cv
264.462 89.2257 266.045 91.342 266.225 91.5864 cv
266.663 92.1789 li
266.225 92.7715 li
265.696 93.4888 253.083 110.334 237.145 110.334 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
236.431 109.62 mo
226.398 109.62 217.683 102.945 212.47 97.8196 cv
212.223 97.5771 211.985 97.3386 211.754 97.1039 cv
216.967 102.229 225.683 108.905 235.716 108.905 cv
251.654 108.905 264.267 92.0602 264.797 91.3429 cv
265.234 90.7504 li
264.797 90.1578 li
264.616 89.9134 263.033 87.7968 260.393 85.1118 cv
260.639 85.3532 260.877 85.5916 261.107 85.8253 cv
263.747 88.5104 265.331 90.6277 265.511 90.8722 cv
265.948 91.4646 li
265.511 92.0573 li
264.982 92.7745 252.368 109.62 236.431 109.62 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
235.716 108.905 mo
225.683 108.905 216.967 102.229 211.754 97.1039 cv
211.509 96.8629 211.272 96.626 211.043 96.3927 cv
216.256 101.518 224.971 108.191 235.002 108.191 cv
250.94 108.191 263.553 91.346 264.082 90.6287 cv
264.52 90.0361 li
264.082 89.4436 li
263.902 89.1991 262.318 87.0818 259.677 84.396 cv
259.924 84.638 260.163 84.8775 260.393 85.1118 cv
263.033 87.7968 264.616 89.9134 264.797 90.1578 cv
265.234 90.7504 li
264.797 91.3429 li
264.267 92.0602 251.654 108.905 235.716 108.905 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
235.002 108.191 mo
224.971 108.191 216.256 101.518 211.043 96.3927 cv
210.795 96.1492 210.555 95.9094 210.324 95.6737 cv
215.537 100.799 224.254 107.477 234.288 107.477 cv
250.225 107.477 262.839 90.6317 263.368 89.9144 cv
263.806 89.3217 li
263.368 88.7293 li
263.188 88.4849 261.605 86.3691 258.966 83.6848 cv
259.211 83.9253 259.448 84.1632 259.677 84.396 cv
262.318 87.0818 263.902 89.1991 264.082 89.4436 cv
264.52 90.0361 li
264.082 90.6287 li
263.553 91.346 250.94 108.191 235.002 108.191 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
234.288 107.477 mo
224.254 107.477 215.537 100.799 210.324 95.6737 cv
210.079 95.4327 209.842 95.1959 209.613 94.9626 cv
214.826 100.088 223.541 106.763 233.573 106.763 cv
249.511 106.763 262.125 89.9173 262.654 89.2002 cv
263.091 88.6075 li
262.654 88.015 li
262.473 87.7705 260.89 85.6542 258.251 82.9698 cv
258.497 83.2118 258.736 83.4506 258.966 83.6848 cv
261.605 86.3691 263.188 88.4849 263.368 88.7293 cv
263.806 89.3217 li
263.368 89.9144 li
262.839 90.6317 250.225 107.477 234.288 107.477 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
233.573 106.763 mo
223.541 106.763 214.826 100.088 209.613 94.9626 cv
209.366 94.7201 209.128 94.4819 208.897 94.2472 cv
214.11 99.3725 222.826 106.048 232.859 106.048 cv
248.797 106.048 261.41 89.2031 261.939 88.4858 cv
262.377 87.8932 li
261.939 87.3007 li
261.759 87.0563 260.175 84.9389 257.535 82.2539 cv
257.782 82.4964 258.02 82.7352 258.251 82.9698 cv
260.89 85.6542 262.473 87.7705 262.654 88.015 cv
263.091 88.6075 li
262.654 89.2002 li
262.125 89.9173 249.511 106.763 233.573 106.763 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
232.859 106.048 mo
222.826 106.048 214.11 99.3725 208.897 94.2472 cv
208.651 94.0052 208.413 93.7667 208.183 93.5324 cv
213.395 98.6578 222.112 105.334 232.145 105.334 cv
248.083 105.334 260.696 88.4888 261.225 87.7715 cv
261.663 87.179 li
261.225 86.5864 li
261.045 86.342 259.462 84.2254 256.822 81.5411 cv
257.068 81.7826 257.305 82.0201 257.535 82.2539 cv
260.175 84.9389 261.759 87.0563 261.939 87.3007 cv
262.377 87.8932 li
261.939 88.4858 li
261.41 89.2031 248.797 106.048 232.859 106.048 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
232.145 105.334 mo
222.112 105.334 213.395 98.6578 208.183 93.5324 cv
207.937 93.2914 207.701 93.0546 207.471 92.8213 cv
212.685 97.9462 221.399 104.62 231.431 104.62 cv
247.368 104.62 259.982 87.7746 260.511 87.0573 cv
260.948 86.4646 li
260.511 85.8722 li
260.331 85.6277 258.747 83.5102 256.107 80.8252 cv
256.353 81.0677 256.592 81.3064 256.822 81.5411 cv
259.462 84.2254 261.045 86.342 261.225 86.5864 cv
261.663 87.179 li
261.225 87.7715 li
260.696 88.4888 248.083 105.334 232.145 105.334 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
231.431 104.62 mo
221.399 104.62 212.685 97.9462 207.471 92.8213 cv
207.224 92.5777 206.984 92.338 206.752 92.1023 cv
211.965 97.2278 220.682 103.905 230.716 103.905 cv
246.654 103.905 259.267 87.0602 259.797 86.343 cv
260.234 85.7504 li
259.797 85.1579 li
259.616 84.9134 258.033 82.797 255.393 80.1119 cv
255.639 80.3534 255.877 80.5914 256.107 80.8252 cv
258.747 83.5102 260.331 85.6277 260.511 85.8722 cv
260.948 86.4646 li
260.511 87.0573 li
259.982 87.7746 247.368 104.62 231.431 104.62 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
230.716 103.905 mo
220.682 103.905 211.965 97.2278 206.752 92.1023 cv
206.507 91.8613 206.271 91.6245 206.041 91.3912 cv
211.254 96.5163 219.97 103.191 230.002 103.191 cv
245.94 103.191 258.553 86.3459 259.082 85.6287 cv
259.52 85.0361 li
259.082 84.4435 li
258.902 84.1991 257.319 82.0828 254.68 79.3984 cv
254.925 79.6399 255.163 79.8782 255.393 80.1119 cv
258.033 82.797 259.616 84.9134 259.797 85.1579 cv
260.234 85.7504 li
259.797 86.343 li
259.267 87.0602 246.654 103.905 230.716 103.905 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
230.002 103.191 mo
219.97 103.191 211.254 96.5163 206.041 91.3912 cv
205.795 91.1487 205.556 90.9097 205.325 90.6749 cv
210.538 95.8004 219.254 102.477 229.288 102.477 cv
245.225 102.477 257.839 85.6317 258.368 84.9144 cv
258.806 84.3217 li
258.368 83.7293 li
258.188 83.4849 256.604 81.3675 253.964 78.6824 cv
254.21 78.9249 254.449 79.1637 254.68 79.3984 cv
257.319 82.0828 258.902 84.1991 259.082 84.4435 cv
259.52 85.0361 li
259.082 85.6287 li
258.553 86.3459 245.94 103.191 230.002 103.191 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
229.288 102.477 mo
219.254 102.477 210.538 95.8004 205.325 90.6749 cv
205.079 90.4335 204.842 90.1955 204.612 89.9617 cv
209.825 95.0871 218.54 101.763 228.573 101.763 cv
244.511 101.763 257.125 84.9173 257.654 84.2001 cv
258.091 83.6075 li
257.654 83.015 li
257.473 82.7706 255.89 80.654 253.251 77.9696 cv
253.497 78.2111 253.734 78.4487 253.964 78.6824 cv
256.604 81.3675 258.188 83.4849 258.368 83.7293 cv
258.806 84.3217 li
258.368 84.9144 li
257.839 85.6317 245.225 102.477 229.288 102.477 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
228.573 101.763 mo
218.54 101.763 209.825 95.0871 204.612 89.9617 cv
204.367 89.7207 204.129 89.483 203.9 89.2497 cv
209.113 94.3746 217.828 101.048 227.859 101.048 cv
243.797 101.048 256.41 84.2031 256.939 83.4859 cv
257.377 82.8932 li
256.939 82.3008 li
256.759 82.0563 255.175 79.9389 252.535 77.2539 cv
252.782 77.4964 253.02 77.735 253.251 77.9696 cv
255.89 80.654 257.473 82.7706 257.654 83.015 cv
258.091 83.6075 li
257.654 84.2001 li
257.125 84.9173 244.511 101.763 228.573 101.763 cv
223.643 96.1497 mo
218.287 95.7938 213.301 93.3873 209.15 90.5062 cv
213.139 92.9863 218.131 95.3177 223.643 96.1497 cv
243.71 72.4227 mo
239.721 69.9432 234.73 67.6125 229.218 66.7806 cv
234.574 67.1364 239.559 69.5423 243.71 72.4227 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
227.859 101.048 mo
217.828 101.048 209.113 94.3746 203.9 89.2497 cv
203.652 89.0061 203.413 88.7667 203.181 88.531 cv
208.394 93.6565 217.111 100.334 227.145 100.334 cv
243.083 100.334 255.696 83.4888 256.225 82.7715 cv
256.663 82.179 li
256.225 81.5864 li
256.045 81.342 254.462 79.2254 251.822 76.5403 cv
252.067 76.7818 252.305 77.0202 252.535 77.2539 cv
255.175 79.9389 256.759 82.0563 256.939 82.3008 cv
257.377 82.8932 li
256.939 83.4859 li
256.41 84.2031 243.797 101.048 227.859 101.048 cv
225.002 96.1951 mo
224.547 96.1951 224.094 96.1797 223.643 96.1497 cv
218.131 95.3177 213.139 92.9863 209.15 90.5062 cv
208.236 89.8722 207.364 89.2157 206.537 88.5526 cv
211.694 92.0799 219.017 95.7572 227.145 95.7572 cv
228.076 95.7572 228.997 95.709 229.905 95.6181 cv
228.311 95.9874 226.672 96.1951 225.002 96.1951 cv
245.609 73.6624 mo
245.005 73.2491 244.371 72.8339 243.71 72.4227 cv
239.559 69.5423 234.574 67.1364 229.218 66.7806 cv
227.843 66.573 226.435 66.4587 225.002 66.4587 cv
224.071 66.4587 223.15 66.507 222.242 66.5977 cv
223.836 66.2287 225.475 66.021 227.145 66.021 cv
234.206 66.021 240.706 69.7329 245.609 73.6624 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
227.145 100.334 mo
217.111 100.334 208.394 93.6565 203.181 88.531 cv
202.936 88.2905 202.7 88.0541 202.471 87.8213 cv
207.685 92.9462 216.399 99.6197 226.431 99.6197 cv
242.368 99.6197 254.982 82.7746 255.511 82.0573 cv
255.949 81.4646 li
255.511 80.8721 li
255.331 80.6277 253.748 78.5113 251.108 75.827 cv
251.354 76.0685 251.592 76.3066 251.822 76.5403 cv
254.462 79.2254 256.045 81.342 256.225 81.5864 cv
256.663 82.179 li
256.225 82.7715 li
255.696 83.4888 243.083 100.334 227.145 100.334 cv
227.145 95.7572 mo
219.017 95.7572 211.694 92.0799 206.537 88.5526 cv
205.988 88.1131 205.459 87.6704 204.952 87.2304 cv
210.138 90.9297 217.833 95.0429 226.431 95.0429 cv
229.71 95.0429 232.857 94.4445 235.785 93.4989 cv
233.918 94.4059 231.949 95.1447 229.905 95.6181 cv
228.997 95.709 228.076 95.7572 227.145 95.7572 cv
246.479 74.2698 mo
246.196 74.0682 245.907 73.8657 245.609 73.6624 cv
240.706 69.7329 234.206 66.021 227.145 66.021 cv
225.475 66.021 223.836 66.2287 222.242 66.5977 cv
219.953 66.8266 217.744 67.3256 215.648 68.0026 cv
218.97 66.3886 222.618 65.3066 226.431 65.3066 cv
234.281 65.3066 241.438 69.8955 246.479 74.2698 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
226.431 99.6197 mo
216.399 99.6197 207.685 92.9462 202.471 87.8213 cv
202.224 87.5778 201.984 87.3377 201.752 87.1021 cv
206.965 92.2278 215.681 98.9053 225.716 98.9053 cv
241.654 98.9053 254.268 82.0602 254.797 81.343 cv
255.234 80.7503 li
254.797 80.1579 li
254.616 79.9134 253.032 77.7961 250.392 75.111 cv
250.639 75.3535 250.878 75.5923 251.108 75.827 cv
253.748 78.5113 255.331 80.6277 255.511 80.8721 cv
255.949 81.4646 li
255.511 82.0573 li
254.982 82.7746 242.368 99.6197 226.431 99.6197 cv
226.431 95.0429 mo
217.833 95.0429 210.138 90.9297 204.952 87.2304 cv
204.552 86.8833 204.166 86.5375 203.793 86.1954 cv
208.978 89.9731 216.87 94.3287 225.716 94.3287 cv
231.573 94.3287 237.011 92.4198 241.522 90.0333 cv
239.76 91.3048 237.834 92.5032 235.785 93.4989 cv
232.857 94.4445 229.71 95.0429 226.431 95.0429 cv
246.924 74.5907 mo
246.778 74.4841 246.63 74.3772 246.479 74.2698 cv
241.438 69.8955 234.281 65.3066 226.431 65.3066 cv
222.618 65.3066 218.97 66.3886 215.648 68.0026 cv
213.346 68.7459 211.181 69.7038 209.195 70.7541 cv
213.816 67.4214 219.552 64.5924 225.716 64.5924 cv
234.19 64.5924 241.856 69.9383 246.924 74.5907 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
225.716 98.9053 mo
215.681 98.9053 206.965 92.2278 201.752 87.1021 cv
201.507 86.8611 201.27 86.6236 201.04 86.3903 cv
206.253 91.5156 214.969 98.1911 225.002 98.1911 cv
240.94 98.1911 253.553 81.3459 254.082 80.6286 cv
254.52 80.0361 li
254.082 79.4435 li
253.902 79.1991 252.319 77.0826 249.68 74.3982 cv
249.925 74.6397 250.163 74.8773 250.392 75.111 cv
253.032 77.7961 254.616 79.9134 254.797 80.1579 cv
255.234 80.7503 li
254.797 81.343 li
254.268 82.0602 241.654 98.9053 225.716 98.9053 cv
225.716 94.3287 mo
216.87 94.3287 208.978 89.9731 203.793 86.1954 cv
203.473 85.902 203.164 85.6115 202.866 85.3251 cv
208.046 89.138 216.034 93.6144 225.002 93.6144 cv
233.97 93.6144 241.957 89.1384 247.137 85.3259 cv
245.548 86.8501 243.654 88.4953 241.522 90.0333 cv
237.011 92.4198 231.573 94.3287 225.716 94.3287 cv
202.865 74.7477 mo
207.898 69.9204 215.993 63.8781 225.002 63.8781 cv
234.011 63.8781 242.106 69.9199 247.138 74.747 cv
247.067 74.6952 246.996 74.6428 246.924 74.5907 cv
241.856 69.9383 234.19 64.5924 225.716 64.5924 cv
219.552 64.5924 213.816 67.4214 209.195 70.7541 cv
206.798 72.0221 204.663 73.4248 202.865 74.7477 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
225.002 98.1911 mo
214.969 98.1911 206.253 91.5156 201.04 86.3903 cv
197.973 83.3739 196.118 80.8944 195.922 80.6286 cv
195.484 80.0361 li
195.922 79.4435 li
196.451 78.7262 209.064 61.8821 225.002 61.8821 cv
235.51 61.8821 244.572 69.2036 249.68 74.3982 cv
252.319 77.0826 253.902 79.1991 254.082 79.4435 cv
254.52 80.0361 li
254.082 80.6286 li
253.553 81.3459 240.94 98.1911 225.002 98.1911 cv
223.643 96.1497 mo
224.094 96.1797 224.547 96.1951 225.002 96.1951 cv
226.672 96.1951 228.311 95.9874 229.905 95.6181 cv
231.949 95.1447 233.918 94.4059 235.785 93.4989 cv
237.834 92.5032 239.76 91.3048 241.522 90.0333 cv
243.654 88.4953 245.548 86.8501 247.137 85.3259 cv
241.957 89.1384 233.97 93.6144 225.002 93.6144 cv
216.034 93.6144 208.046 89.138 202.866 85.3251 cv
203.164 85.6115 203.473 85.902 203.793 86.1954 cv
204.166 86.5375 204.552 86.8833 204.952 87.2304 cv
205.459 87.6704 205.988 88.1131 206.537 88.5526 cv
207.364 89.2157 208.236 89.8722 209.15 90.5062 cv
213.301 93.3873 218.287 95.7938 223.643 96.1497 cv
225.002 63.8781 mo
215.993 63.8781 207.898 69.9204 202.865 74.7477 cv
204.663 73.4248 206.798 72.0221 209.195 70.7541 cv
211.181 69.7038 213.346 68.7459 215.648 68.0026 cv
217.744 67.3256 219.953 66.8266 222.242 66.5977 cv
223.15 66.507 224.071 66.4587 225.002 66.4587 cv
226.435 66.4587 227.843 66.573 229.218 66.7806 cv
234.73 67.6125 239.721 69.9432 243.71 72.4227 cv
244.371 72.8339 245.005 73.2491 245.609 73.6624 cv
245.907 73.8657 246.196 74.0682 246.479 74.2698 cv
246.63 74.3772 246.778 74.4841 246.924 74.5907 cv
246.996 74.6428 247.067 74.6952 247.138 74.747 cv
242.106 69.9199 234.011 63.8781 225.002 63.8781 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
197.936 80.0361 mo
200.33 83.0225 211.673 96.2275 225.002 96.2275 cv
238.331 96.2275 249.674 83.0225 252.067 80.0361 cv
249.674 77.0498 238.331 63.8457 225.002 63.8457 cv
211.673 63.8457 200.33 77.0498 197.936 80.0361 cv
cp
225.002 98.2275 mo
209.032 98.2275 196.394 81.3486 195.863 80.6299 cv
195.425 80.0361 li
195.863 79.4424 li
196.394 78.7236 209.032 61.8457 225.002 61.8457 cv
240.972 61.8457 253.61 78.7236 254.141 79.4424 cv
254.579 80.0361 li
254.141 80.6299 li
253.61 81.3486 240.972 98.2275 225.002 98.2275 cv
cp
.239216 .27451 .333333 rgb
f
253.336 80.0361 mo
253.336 80.0361 240.65 93.6416 225.002 93.6416 cv
209.354 93.6416 196.668 80.0361 196.668 80.0361 cv
196.668 80.0361 209.354 66.4316 225.002 66.4316 cv
240.65 66.4316 253.336 80.0361 253.336 80.0361 cv
cp
.992157 .752941 .0588235 rgb
f
225.002 70.7314 mo
219.871 70.7314 215.697 74.9053 215.697 80.0361 cv
215.697 85.1675 219.871 89.3418 225.002 89.3418 cv
230.133 89.3418 234.307 85.1675 234.307 80.0361 cv
234.307 74.9053 230.133 70.7314 225.002 70.7314 cv
cp
225.002 90.3418 mo
219.32 90.3418 214.697 85.7188 214.697 80.0361 cv
214.697 74.354 219.32 69.7314 225.002 69.7314 cv
230.684 69.7314 235.307 74.354 235.307 80.0361 cv
235.307 85.7188 230.684 90.3418 225.002 90.3418 cv
cp
.239216 .27451 .333333 rgb
f
232.826 80.0361 mo
232.826 84.3584 229.323 87.8613 225.002 87.8613 cv
220.681 87.8613 217.177 84.3584 217.177 80.0361 cv
217.177 75.7148 220.681 72.2119 225.002 72.2119 cv
229.323 72.2119 232.826 75.7148 232.826 80.0361 cv
cp
f
228.688 80.0361 mo
228.688 82.0723 227.037 83.7217 225.002 83.7217 cv
222.967 83.7217 221.316 82.0723 221.316 80.0361 cv
221.316 78.001 222.967 76.3516 225.002 76.3516 cv
227.037 76.3516 228.688 78.001 228.688 80.0361 cv
cp
.756863 .839216 .286275 rgb
f
201.052 103.842 mo
187.907 90.6172 187.975 69.2358 201.198 56.0884 cv
214.427 42.9443 235.804 43.0093 248.951 56.2329 cv
262.097 69.46 262.031 90.8398 248.803 103.985 cv
235.579 117.133 214.199 117.067 201.052 103.842 cv
cp
257.418 132.61 mo
277.375 112.774 li
268.364 101.897 li
269.408 99.8311 270.293 97.7046 271.021 95.5366 cv
285.099 94.2905 li
285.183 66.1523 li
271.12 64.832 li
270.408 62.6665 269.538 60.5356 268.511 58.4658 cv
277.573 47.6201 li
257.736 27.6631 li
246.847 36.6641 li
244.791 35.6289 242.676 34.7495 240.517 34.0229 cv
239.253 19.9419 li
211.114 19.856 li
209.781 33.9238 li
207.617 34.6348 205.497 35.5039 203.431 36.5269 cv
192.582 27.4653 li
172.628 47.3027 li
181.63 58.1924 li
180.592 60.2456 179.713 62.3647 178.986 64.5244 cv
164.906 65.7871 li
164.821 93.9243 li
178.889 95.2578 li
179.602 97.4253 180.47 99.5527 181.496 101.622 cv
172.43 112.456 li
192.267 132.413 li
203.141 123.402 li
205.207 124.448 207.331 125.328 209.5 126.059 cv
210.748 140.134 li
238.89 140.217 li
240.21 126.155 li
242.38 125.441 244.514 124.569 246.587 123.541 cv
257.418 132.61 li
cp
.415686 .709804 .768627 rgb
f
257.64 55.415 mo
244.061 37.418 218.374 33.8223 200.378 47.4004 cv
182.382 60.9775 178.787 86.6636 192.365 104.661 cv
205.942 122.655 231.63 126.252 249.626 112.675 cv
267.622 99.0977 271.216 73.4087 257.64 55.415 cv
cp
191.529 105.293 mo
177.602 86.8315 181.287 60.4907 199.748 46.564 cv
218.205 32.6387 244.549 36.3237 258.476 54.7832 cv
272.401 73.2407 268.716 99.5884 250.258 113.514 cv
231.798 127.441 205.455 123.748 191.529 105.293 cv
cp
1 1 1 rgb
f
290.885 55.9766 mo
290.885 55.5444 290.733 55.2031 290.432 54.9531 cv
290.129 54.7031 289.59 54.4609 288.814 54.2266 cv
287.507 53.8359 286.515 53.3711 285.838 52.832 cv
285.16 52.293 284.822 51.5601 284.822 50.6328 cv
284.822 49.7007 285.201 48.939 285.959 48.3477 cv
286.717 47.7568 287.689 47.4609 288.877 47.4609 cv
290.137 47.4609 291.151 47.7788 291.92 48.4141 cv
292.688 49.0498 293.059 49.8828 293.033 50.9141 cv
293.018 50.9609 li
290.814 50.9609 li
290.814 50.3936 290.641 49.957 290.295 49.6523 cv
289.948 49.3477 289.465 49.1953 288.846 49.1953 cv
288.283 49.1953 287.852 49.3311 287.553 49.6016 cv
287.253 49.8726 287.103 50.2188 287.103 50.6406 cv
287.103 51.0264 287.269 51.3428 287.6 51.5898 cv
287.93 51.8374 288.502 52.0991 289.314 52.375 cv
290.574 52.7295 291.533 53.1836 292.189 53.7383 cv
292.846 54.293 293.174 55.0342 293.174 55.9609 cv
293.174 56.9404 292.791 57.7188 292.025 58.2969 cv
291.26 58.875 290.254 59.1641 289.01 59.1641 cv
287.791 59.1641 286.742 58.8594 285.865 58.25 cv
284.987 57.6406 284.561 56.7319 284.588 55.5234 cv
284.603 55.4766 li
286.814 55.4766 li
286.814 56.1484 287.011 56.6436 287.404 56.9609 cv
287.797 57.2788 288.332 57.4375 289.01 57.4375 cv
289.619 57.4375 290.084 57.3022 290.404 57.0313 cv
290.725 56.7607 290.885 56.4092 290.885 55.9766 cv
cp
.0588235 .168627 .188235 rgb
f
297.26 59 mo
294.978 59 li
294.978 47.625 li
297.26 47.625 li
297.26 59 li
cp
f
308.228 57.4453 mo
307.874 57.9092 307.346 58.3115 306.643 58.6523 cv
305.939 58.9937 305.033 59.1641 303.924 59.1641 cv
302.549 59.1641 301.424 58.7319 300.549 57.8672 cv
299.674 57.0029 299.236 55.8804 299.236 54.5 cv
299.236 52.125 li
299.236 50.75 299.66 49.6289 300.51 48.7617 cv
301.358 47.8945 302.449 47.4609 303.783 47.4609 cv
305.174 47.4609 306.238 47.7905 306.978 48.4492 cv
307.718 49.1084 308.074 49.9873 308.049 51.0859 cv
308.033 51.1328 li
305.885 51.1328 li
305.885 50.5288 305.71 50.0586 305.361 49.7227 cv
305.012 49.3867 304.504 49.2188 303.838 49.2188 cv
303.14 49.2188 302.577 49.4883 302.15 50.0273 cv
301.723 50.5664 301.51 51.2607 301.51 52.1094 cv
301.51 54.5 li
301.51 55.3594 301.728 56.0601 302.166 56.6016 cv
302.603 57.1436 303.189 57.4141 303.924 57.4141 cv
304.465 57.4141 304.894 57.3594 305.209 57.25 cv
305.523 57.1406 305.768 57.0029 305.939 56.8359 cv
305.939 54.6328 li
303.752 54.6328 li
303.752 53.0547 li
308.228 53.0547 li
308.228 57.4453 li
cp
f
319.353 59 mo
317.08 59 li
317.08 54.2734 li
312.447 54.2734 li
312.447 59 li
310.158 59 li
310.158 47.625 li
312.447 47.625 li
312.447 52.5156 li
317.08 52.5156 li
317.08 47.625 li
319.353 47.625 li
319.353 59 li
cp
f
329.377 49.3828 mo
326.127 49.3828 li
326.127 59 li
323.846 59 li
323.846 49.3828 li
320.643 49.3828 li
320.643 47.625 li
329.377 47.625 li
329.377 49.3828 li
cp
f
90.3416 217.003 mo
87.6261 217.003 85.5407 216.164 84.1069 214.501 cv
85.4886 215.69 87.3333 216.289 89.6272 216.289 cv
90.4659 216.289 91.2426 216.214 91.8918 216.14 cv
97.2652 215.533 101.572 209.141 106.132 202.374 cv
107.88 199.779 109.689 197.096 111.522 194.835 cv
114.386 191.303 115.415 185.908 114.347 180.035 cv
113.428 174.989 111.077 170.278 107.995 167.029 cv
111.426 170.279 114.073 175.32 115.061 180.75 cv
116.13 186.623 115.1 192.017 112.236 195.55 cv
110.403 197.811 108.594 200.494 106.846 203.089 cv
102.286 209.855 97.9795 216.247 92.606 216.854 cv
91.9569 216.928 91.1802 217.003 90.3416 217.003 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
89.6272 216.289 mo
87.3333 216.289 85.4886 215.69 84.1069 214.501 cv
83.8532 214.283 83.6151 214.045 83.3927 213.787 cv
84.7744 214.976 86.619 215.575 88.9129 215.575 cv
89.7516 215.575 90.5284 215.5 91.1775 215.426 cv
96.551 214.818 100.858 208.427 105.417 201.66 cv
107.166 199.065 108.974 196.382 110.808 194.121 cv
113.671 190.588 114.701 185.194 113.632 179.321 cv
112.714 174.274 110.362 169.563 107.28 166.314 cv
107.522 166.543 107.761 166.782 107.995 167.029 cv
111.077 170.278 113.428 174.989 114.347 180.035 cv
115.415 185.908 114.386 191.303 111.522 194.835 cv
109.689 197.096 107.88 199.779 106.132 202.374 cv
101.572 209.141 97.2652 215.533 91.8918 216.14 cv
91.2426 216.214 90.4659 216.289 89.6272 216.289 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
88.9129 215.575 mo
86.619 215.575 84.7744 214.976 83.3927 213.787 cv
83.1388 213.569 82.9009 213.331 82.6783 213.073 cv
84.0601 214.261 85.9048 214.86 88.1987 214.86 cv
89.0373 214.86 89.814 214.785 90.4631 214.712 cv
95.8367 214.104 100.143 207.712 104.703 200.946 cv
106.452 198.351 108.26 195.668 110.093 193.407 cv
112.957 189.874 113.987 184.48 112.918 178.607 cv
112 173.561 109.649 168.85 106.566 165.6 cv
106.808 165.829 107.046 166.067 107.28 166.314 cv
110.362 169.563 112.714 174.274 113.632 179.321 cv
114.701 185.194 113.671 190.588 110.808 194.121 cv
108.974 196.382 107.166 199.065 105.417 201.66 cv
100.858 208.427 96.551 214.818 91.1775 215.426 cv
90.5284 215.5 89.7516 215.575 88.9129 215.575 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
88.1987 214.86 mo
85.9048 214.86 84.0601 214.261 82.6783 213.073 cv
82.4245 212.855 82.1865 212.617 81.9639 212.358 cv
83.3457 213.547 85.1902 214.146 87.4844 214.146 cv
88.3231 214.146 89.0997 214.071 89.7489 213.997 cv
95.1223 213.39 99.4292 206.998 103.989 200.232 cv
105.737 197.637 107.546 194.953 109.379 192.692 cv
112.243 189.16 113.272 183.766 112.204 177.892 cv
111.285 172.846 108.934 168.135 105.852 164.886 cv
106.094 165.115 106.332 165.353 106.566 165.6 cv
109.649 168.85 112 173.561 112.918 178.607 cv
113.987 184.48 112.957 189.874 110.093 193.407 cv
108.26 195.668 106.452 198.351 104.703 200.946 cv
100.143 207.712 95.8367 214.104 90.4631 214.712 cv
89.814 214.785 89.0373 214.86 88.1987 214.86 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
87.4844 214.146 mo
85.1902 214.146 83.3457 213.547 81.9639 212.358 cv
81.7104 212.14 81.4721 211.902 81.2498 211.644 cv
82.6315 212.833 84.4762 213.432 86.7701 213.432 cv
87.6087 213.432 88.3855 213.357 89.0346 213.283 cv
94.4081 212.675 98.7148 206.284 103.275 199.517 cv
105.023 196.922 106.831 194.239 108.665 191.978 cv
111.529 188.446 112.558 183.051 111.49 177.178 cv
110.571 172.132 108.22 167.421 105.137 164.171 cv
105.379 164.4 105.618 164.639 105.852 164.886 cv
108.934 168.135 111.285 172.846 112.204 177.892 cv
113.272 183.766 112.243 189.16 109.379 192.692 cv
107.546 194.953 105.737 197.637 103.989 200.232 cv
99.4292 206.998 95.1223 213.39 89.7489 213.997 cv
89.0997 214.071 88.3231 214.146 87.4844 214.146 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
86.7701 213.432 mo
84.4762 213.432 82.6315 212.833 81.2498 211.644 cv
80.9961 211.426 80.758 211.188 80.5356 210.93 cv
81.9173 212.118 83.7619 212.717 86.0558 212.717 cv
86.8945 212.717 87.6711 212.642 88.3204 212.569 cv
93.6938 211.961 98.0005 205.57 102.56 198.803 cv
104.309 196.208 106.117 193.525 107.95 191.264 cv
110.814 187.731 111.844 182.337 110.775 176.464 cv
109.857 171.418 107.506 166.707 104.424 163.457 cv
104.665 163.687 104.903 163.924 105.137 164.171 cv
108.22 167.421 110.571 172.132 111.49 177.178 cv
112.558 183.051 111.529 188.446 108.665 191.978 cv
106.831 194.239 105.023 196.922 103.275 199.517 cv
98.7148 206.284 94.4081 212.675 89.0346 213.283 cv
88.3855 213.357 87.6087 213.432 86.7701 213.432 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
86.0558 212.717 mo
83.7619 212.717 81.9173 212.118 80.5356 210.93 cv
80.2818 210.712 80.0437 210.474 79.8212 210.216 cv
81.2029 211.404 83.0475 212.003 85.3415 212.003 cv
86.1802 212.003 86.9569 211.928 87.606 211.855 cv
92.9796 211.247 97.2863 204.855 101.846 198.089 cv
103.594 195.494 105.403 192.811 107.236 190.55 cv
110.1 187.017 111.13 181.623 110.061 175.75 cv
109.143 170.703 106.791 165.992 103.708 162.742 cv
103.951 162.972 104.189 163.21 104.424 163.457 cv
107.506 166.707 109.857 171.418 110.775 176.464 cv
111.844 182.337 110.814 187.731 107.95 191.264 cv
106.117 193.525 104.309 196.208 102.56 198.803 cv
98.0005 205.57 93.6938 211.961 88.3204 212.569 cv
87.6711 212.642 86.8945 212.717 86.0558 212.717 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
85.3415 212.003 mo
83.0475 212.003 81.2029 211.404 79.8212 210.216 cv
79.5674 209.997 79.3294 209.76 79.1069 209.501 cv
80.4886 210.69 82.3333 211.289 84.6273 211.289 cv
85.4658 211.289 86.2426 211.214 86.8917 211.14 cv
92.2652 210.533 96.5719 204.141 101.132 197.374 cv
102.88 194.78 104.689 192.096 106.522 189.835 cv
109.386 186.303 110.415 180.908 109.347 175.035 cv
108.428 169.989 106.077 165.278 102.995 162.029 cv
103.237 162.258 103.475 162.496 103.708 162.742 cv
106.791 165.992 109.143 170.703 110.061 175.75 cv
111.13 181.623 110.1 187.017 107.236 190.55 cv
105.403 192.811 103.594 195.494 101.846 198.089 cv
97.2863 204.855 92.9796 211.247 87.606 211.855 cv
86.9569 211.928 86.1802 212.003 85.3415 212.003 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
84.6273 211.289 mo
82.3333 211.289 80.4886 210.69 79.1069 209.501 cv
78.853 209.283 78.615 209.045 78.3925 208.787 cv
79.7743 209.976 81.6187 210.575 83.9129 210.575 cv
84.7516 210.575 85.5283 210.5 86.1775 210.426 cv
91.551 209.818 95.8577 203.427 100.417 196.66 cv
102.166 194.065 103.974 191.382 105.808 189.121 cv
108.671 185.589 109.701 180.194 108.632 174.321 cv
107.714 169.274 105.363 164.564 102.28 161.314 cv
102.523 161.544 102.761 161.782 102.995 162.029 cv
106.077 165.278 108.428 169.989 109.347 175.035 cv
110.415 180.908 109.386 186.303 106.522 189.835 cv
104.689 192.096 102.88 194.78 101.132 197.374 cv
96.5719 204.141 92.2652 210.533 86.8917 211.14 cv
86.2426 211.214 85.4658 211.289 84.6273 211.289 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
83.9129 210.575 mo
81.6187 210.575 79.7743 209.976 78.3925 208.787 cv
78.139 208.569 77.9008 208.331 77.6785 208.073 cv
79.0602 209.261 80.9047 209.86 83.1987 209.86 cv
84.0373 209.86 84.814 209.785 85.4631 209.712 cv
90.8367 209.104 95.1434 202.713 99.7031 195.946 cv
101.452 193.351 103.26 190.668 105.093 188.407 cv
107.957 184.874 108.987 179.48 107.918 173.607 cv
107 168.56 104.648 163.849 101.566 160.6 cv
101.808 160.829 102.046 161.067 102.28 161.314 cv
105.363 164.564 107.714 169.274 108.632 174.321 cv
109.701 180.194 108.671 185.589 105.808 189.121 cv
103.974 191.382 102.166 194.065 100.417 196.66 cv
95.8577 203.427 91.551 209.818 86.1775 210.426 cv
85.5283 210.5 84.7516 210.575 83.9129 210.575 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
83.1987 209.86 mo
80.9047 209.86 79.0602 209.261 77.6785 208.073 cv
77.4247 207.855 77.1865 207.617 76.9639 207.358 cv
78.3457 208.547 80.1902 209.146 82.4844 209.146 cv
83.3231 209.146 84.0997 209.071 84.7489 208.997 cv
90.1224 208.39 94.4292 201.998 98.9889 195.231 cv
100.737 192.637 102.546 189.953 104.379 187.692 cv
107.243 184.16 108.273 178.765 107.204 172.892 cv
106.286 167.846 103.934 163.135 100.852 159.886 cv
101.094 160.115 101.332 160.353 101.566 160.6 cv
104.648 163.849 107 168.56 107.918 173.607 cv
108.987 179.48 107.957 184.874 105.093 188.407 cv
103.26 190.668 101.452 193.351 99.7031 195.946 cv
95.1434 202.713 90.8367 209.104 85.4631 209.712 cv
84.814 209.785 84.0373 209.86 83.1987 209.86 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
82.4844 209.146 mo
80.1902 209.146 78.3457 208.547 76.9639 207.358 cv
76.7102 207.14 76.4721 206.902 76.2496 206.644 cv
77.6314 207.833 79.4759 208.432 81.7701 208.432 cv
82.6087 208.432 83.3855 208.357 84.0346 208.283 cv
89.4081 207.675 93.7149 201.284 98.2746 194.517 cv
100.023 191.922 101.831 189.239 103.665 186.978 cv
106.529 183.446 107.558 178.051 106.49 172.178 cv
105.571 167.132 103.219 162.42 100.137 159.171 cv
100.379 159.4 100.618 159.639 100.852 159.886 cv
103.934 163.135 106.286 167.846 107.204 172.892 cv
108.273 178.765 107.243 184.16 104.379 187.692 cv
102.546 189.953 100.737 192.637 98.9889 195.231 cv
94.4292 201.998 90.1224 208.39 84.7489 208.997 cv
84.0997 209.071 83.3231 209.146 82.4844 209.146 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
81.7701 208.432 mo
79.4759 208.432 77.6314 207.833 76.2496 206.644 cv
75.9961 206.426 75.7579 206.188 75.5356 205.93 cv
76.9173 207.118 78.7619 207.717 81.0558 207.717 cv
81.8944 207.717 82.6712 207.642 83.3203 207.569 cv
88.6938 206.961 93.0005 200.57 97.5604 193.803 cv
99.3087 191.208 101.117 188.525 102.95 186.264 cv
105.814 182.731 106.844 177.337 105.775 171.464 cv
104.857 166.418 102.506 161.707 99.4236 158.457 cv
99.6655 158.687 99.9031 158.924 100.137 159.171 cv
103.219 162.42 105.571 167.132 106.49 172.178 cv
107.558 178.051 106.529 183.446 103.665 186.978 cv
101.831 189.239 100.023 191.922 98.2746 194.517 cv
93.7149 201.284 89.4081 207.675 84.0346 208.283 cv
83.3855 208.357 82.6087 208.432 81.7701 208.432 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
81.0558 207.717 mo
78.7619 207.717 76.9173 207.118 75.5356 205.93 cv
75.2817 205.712 75.0436 205.474 74.8211 205.216 cv
76.2029 206.404 78.0473 207.003 80.3415 207.003 cv
81.1802 207.003 81.9568 206.928 82.606 206.855 cv
87.9796 206.247 92.2863 199.855 96.846 193.089 cv
98.5944 190.494 100.403 187.811 102.236 185.55 cv
105.1 182.017 106.13 176.623 105.061 170.75 cv
104.143 165.703 101.791 160.992 98.7085 157.742 cv
98.9509 157.972 99.1892 158.21 99.4236 158.457 cv
102.506 161.707 104.857 166.418 105.775 171.464 cv
106.844 177.337 105.814 182.731 102.95 186.264 cv
101.117 188.525 99.3087 191.208 97.5604 193.803 cv
93.0005 200.57 88.6938 206.961 83.3203 207.569 cv
82.6712 207.642 81.8944 207.717 81.0558 207.717 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
80.3415 207.003 mo
78.0473 207.003 76.2029 206.404 74.8211 205.216 cv
74.5675 204.998 74.3293 204.759 74.107 204.502 cv
75.4888 205.69 77.3333 206.289 79.6273 206.289 cv
80.4659 206.289 81.2426 206.214 81.8917 206.14 cv
87.2653 205.533 91.572 199.141 96.1317 192.374 cv
97.8802 189.78 99.6885 187.096 101.522 184.835 cv
104.386 181.303 105.415 175.908 104.347 170.035 cv
103.428 164.989 101.077 160.278 97.9947 157.029 cv
98.2366 157.258 98.4746 157.496 98.7085 157.742 cv
101.791 160.992 104.143 165.703 105.061 170.75 cv
106.13 176.623 105.1 182.017 102.236 185.55 cv
100.403 187.811 98.5944 190.494 96.846 193.089 cv
92.2863 199.855 87.9796 206.247 82.606 206.855 cv
81.9568 206.928 81.1802 207.003 80.3415 207.003 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
79.6273 206.289 mo
77.3333 206.289 75.4888 205.69 74.107 204.502 cv
73.8531 204.283 73.6151 204.045 73.3926 203.787 cv
74.7743 204.975 76.619 205.575 78.9129 205.575 cv
79.7516 205.575 80.5283 205.5 81.1775 205.426 cv
86.5509 204.818 90.8577 198.427 95.4175 191.66 cv
97.1659 189.065 98.9743 186.382 100.808 184.121 cv
103.671 180.589 104.701 175.194 103.632 169.321 cv
102.714 164.275 100.363 159.564 97.2806 156.314 cv
97.5226 156.544 97.7609 156.782 97.9947 157.029 cv
101.077 160.278 103.428 164.989 104.347 170.035 cv
105.415 175.908 104.386 181.303 101.522 184.835 cv
99.6885 187.096 97.8802 189.78 96.1317 192.374 cv
91.572 199.141 87.2653 205.533 81.8917 206.14 cv
81.2426 206.214 80.4659 206.289 79.6273 206.289 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
78.9129 205.575 mo
76.619 205.575 74.7743 204.975 73.3926 203.787 cv
73.1389 203.569 72.9008 203.331 72.6784 203.073 cv
74.0601 204.261 75.9047 204.86 78.1986 204.86 cv
79.0373 204.86 79.8141 204.785 80.4632 204.712 cv
85.8367 204.104 90.1434 197.713 94.7031 190.946 cv
96.4515 188.351 98.2599 185.668 100.093 183.407 cv
102.957 179.874 103.987 174.48 102.918 168.607 cv
102 163.56 99.648 158.849 96.5655 155.599 cv
96.808 155.829 97.0463 156.067 97.2806 156.314 cv
100.363 159.564 102.714 164.275 103.632 169.321 cv
104.701 175.194 103.671 180.589 100.808 184.121 cv
98.9743 186.382 97.1659 189.065 95.4175 191.66 cv
90.8577 198.427 86.5509 204.818 81.1775 205.426 cv
80.5283 205.5 79.7516 205.575 78.9129 205.575 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
78.1986 204.86 mo
75.9047 204.86 74.0601 204.261 72.6784 203.073 cv
72.4245 202.855 72.1866 202.617 71.964 202.359 cv
73.3458 203.547 75.1905 204.146 77.4844 204.146 cv
78.323 204.146 79.0997 204.071 79.7488 203.997 cv
85.1224 203.39 89.4291 196.998 93.9889 190.231 cv
95.7373 187.637 97.5457 184.953 99.379 182.692 cv
102.243 179.16 103.273 173.765 102.204 167.892 cv
101.286 162.846 98.9342 158.136 95.8521 154.886 cv
96.0941 155.115 96.3317 155.353 96.5655 155.599 cv
99.648 158.849 102 163.56 102.918 168.607 cv
103.987 174.48 102.957 179.874 100.093 183.407 cv
98.2599 185.668 96.4515 188.351 94.7031 190.946 cv
90.1434 197.713 85.8367 204.104 80.4632 204.712 cv
79.8141 204.785 79.0373 204.86 78.1986 204.86 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
77.4844 204.146 mo
75.1905 204.146 73.3458 203.547 71.964 202.359 cv
71.7102 202.14 71.4722 201.902 71.2497 201.644 cv
72.6314 202.833 74.4759 203.432 76.7701 203.432 cv
77.6088 203.432 78.3854 203.357 79.0346 203.283 cv
84.4081 202.675 88.7149 196.284 93.2746 189.517 cv
95.023 186.922 96.8314 184.239 98.6647 181.978 cv
101.529 178.446 102.558 173.051 101.49 167.178 cv
100.571 162.132 98.2195 157.42 95.137 154.171 cv
95.3795 154.401 95.6178 154.639 95.8521 154.886 cv
98.9342 158.136 101.286 162.846 102.204 167.892 cv
103.273 173.765 102.243 179.16 99.379 182.692 cv
97.5457 184.953 95.7373 187.637 93.9889 190.231 cv
89.4291 196.998 85.1224 203.39 79.7488 203.997 cv
79.0997 204.071 78.323 204.146 77.4844 204.146 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
76.7701 203.432 mo
74.4759 203.432 72.6314 202.833 71.2497 201.644 cv
70.9961 201.426 70.7579 201.188 70.5356 200.93 cv
71.9173 202.118 73.7619 202.717 76.0558 202.717 cv
76.8944 202.717 77.6712 202.642 78.3203 202.569 cv
83.6938 201.961 88.0005 195.57 92.5604 188.803 cv
94.3088 186.208 96.1171 183.525 97.9505 181.264 cv
100.814 177.731 101.844 172.337 100.775 166.464 cv
99.8569 161.417 97.5057 156.707 94.4233 153.457 cv
94.6652 153.686 94.9032 153.924 95.137 154.171 cv
98.2195 157.42 100.571 162.132 101.49 167.178 cv
102.558 173.051 101.529 178.446 98.6647 181.978 cv
96.8314 184.239 95.023 186.922 93.2746 189.517 cv
88.7149 196.284 84.4081 202.675 79.0346 203.283 cv
78.3854 203.357 77.6088 203.432 76.7701 203.432 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
76.0558 202.717 mo
73.7619 202.717 71.9173 202.118 70.5356 200.93 cv
70.2817 200.712 70.0437 200.474 69.8211 200.216 cv
71.2029 201.404 73.0476 202.003 75.3415 202.003 cv
76.1802 202.003 76.9568 201.928 77.6061 201.855 cv
82.9795 201.247 87.2863 194.855 91.8461 188.089 cv
93.5944 185.494 95.4028 182.811 97.2362 180.55 cv
100.1 177.017 101.13 171.623 100.061 165.75 cv
99.1427 160.703 96.7913 155.993 93.7092 152.743 cv
93.9511 152.972 94.1895 153.211 94.4233 153.457 cv
97.5057 156.707 99.8569 161.417 100.775 166.464 cv
101.844 172.337 100.814 177.731 97.9505 181.264 cv
96.1171 183.525 94.3088 186.208 92.5604 188.803 cv
88.0005 195.57 83.6938 201.961 78.3203 202.569 cv
77.6712 202.642 76.8944 202.717 76.0558 202.717 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
75.3415 202.003 mo
73.0476 202.003 71.2029 201.404 69.8211 200.216 cv
68.7634 199.306 67.977 198.051 67.4675 196.455 cv
66.3283 192.885 67.1748 190.315 68.0709 187.593 cv
68.7137 185.64 69.3783 183.621 69.5177 180.88 cv
69.6044 179.162 69.0406 177.101 68.3273 174.492 cv
67.7274 172.3 67.047 169.814 66.5944 166.913 cv
65.0345 159.047 66.6592 152.991 71.1765 149.901 cv
73.5005 148.312 76.3858 146.687 80.1653 146.687 cv
83.229 146.687 86.4935 147.726 90.1459 149.864 cv
91.4061 150.601 92.6045 151.578 93.7092 152.743 cv
96.7913 155.993 99.1427 160.703 100.061 165.75 cv
101.13 171.623 100.1 177.017 97.2362 180.55 cv
95.4028 182.811 93.5944 185.494 91.8461 188.089 cv
87.2863 194.855 82.9795 201.247 77.6061 201.855 cv
76.9568 201.928 76.1802 202.003 75.3415 202.003 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
47.665 174.29 mo
47.709 155.642 62.8643 140.561 81.5117 140.606 cv
100.159 140.655 115.237 155.807 115.195 174.456 cv
115.146 193.103 99.9922 208.187 81.3457 208.141 cv
62.6973 208.093 47.6162 192.939 47.665 174.29 cv
cp
35.3193 189.619 mo
36.0469 191.816 36.9268 193.946 37.9453 195.99 cv
28.876 206.819 li
48.7236 226.768 li
59.6094 217.757 li
61.6543 218.785 63.7734 219.676 65.9697 220.41 cv
67.21 234.477 li
95.3486 234.548 li
96.6758 220.483 li
98.8691 219.758 100.991 218.879 103.034 217.862 cv
113.875 226.926 li
133.82 207.079 li
124.817 196.181 li
125.841 194.145 126.729 192.03 127.46 189.848 cv
141.532 188.591 li
141.604 160.454 li
127.533 159.113 li
126.808 156.925 125.935 154.806 124.918 152.767 cv
133.982 141.927 li
114.134 121.981 li
103.233 130.984 li
101.199 129.961 99.0859 129.075 96.9043 128.341 cv
95.6465 114.269 li
67.5078 114.2 li
66.1699 128.27 li
63.9756 128.995 61.8486 129.874 59.8086 130.891 cv
48.9805 121.821 li
29.0342 141.669 li
38.0479 152.553 li
37.0186 154.595 36.1289 156.72 35.3936 158.915 cv
21.3232 160.157 li
21.2549 188.295 li
35.3193 189.619 li
cp
.415686 .709804 .768627 rgb
f
40.9082 179.817 mo
43.9102 202.159 64.5313 217.894 86.8721 214.893 cv
109.216 211.891 124.95 191.271 121.948 168.929 cv
118.947 146.586 98.3271 130.852 75.9834 133.854 cv
53.6436 136.855 37.9063 157.474 40.9082 179.817 cv
cp
39.8672 179.957 mo
36.7881 157.042 52.9297 135.894 75.8447 132.815 cv
98.7627 129.736 119.908 145.874 122.986 168.79 cv
126.066 191.708 109.93 212.851 87.0107 215.931 cv
64.0967 219.009 42.9463 202.876 39.8672 179.957 cv
cp
1 1 1 rgb
f
35.9604 258 mo
33.687 258 li
33.687 253.273 li
29.0542 253.273 li
29.0542 258 li
26.7651 258 li
26.7651 246.625 li
29.0542 246.625 li
29.0542 251.516 li
33.687 251.516 li
33.687 246.625 li
35.9604 246.625 li
35.9604 258 li
cp
.0588235 .168627 .188235 rgb
f
44.5464 253 mo
40.3198 253 li
40.3198 256.25 li
45.3433 256.25 li
45.3433 258 li
38.0386 258 li
38.0386 246.625 li
45.3198 246.625 li
45.3198 248.383 li
40.3198 248.383 li
40.3198 251.242 li
44.5464 251.242 li
44.5464 253 li
cp
f
49.7417 253.758 mo
52.312 253.758 li
51.0542 249.75 li
51.0073 249.75 li
49.7417 253.758 li
cp
52.8667 255.547 mo
49.1792 255.547 li
48.4136 258 li
46.0308 258 li
49.8667 246.625 li
52.2026 246.625 li
56.0229 258 li
53.6401 258 li
52.8667 255.547 li
cp
f
59.3901 251.695 mo
61.0386 251.695 li
61.6792 251.695 62.1567 251.561 62.4722 251.289 cv
62.7871 251.019 62.9448 250.617 62.9448 250.086 cv
62.9448 249.565 62.7871 249.151 62.4722 248.844 cv
62.1567 248.537 61.6919 248.383 61.0776 248.383 cv
59.3901 248.383 li
59.3901 251.695 li
cp
59.3901 253.453 mo
59.3901 258 li
57.1011 258 li
57.1011 246.625 li
61.0776 246.625 li
62.3745 246.625 63.3901 246.921 64.1245 247.512 cv
64.8589 248.104 65.2261 248.928 65.2261 249.984 cv
65.2261 250.568 65.0708 251.072 64.7612 251.496 cv
64.4512 251.921 63.9995 252.264 63.4058 252.523 cv
64.0776 252.722 64.5605 253.053 64.855 253.516 cv
65.1489 253.98 65.2964 254.553 65.2964 255.234 cv
65.2964 256.07 li
65.2964 256.389 65.3394 256.721 65.4253 257.066 cv
65.5112 257.413 65.6582 257.67 65.8667 257.836 cv
65.8667 258 li
63.5151 258 li
63.3066 257.834 63.1724 257.558 63.1128 257.172 cv
63.0527 256.787 63.0229 256.414 63.0229 256.055 cv
63.0229 255.25 li
63.0229 254.683 62.8677 254.241 62.5581 253.926 cv
62.248 253.611 61.8091 253.453 61.2417 253.453 cv
59.3901 253.453 li
cp
f
69.7339 258 mo
67.4526 258 li
67.4526 246.625 li
69.7339 246.625 li
69.7339 258 li
cp
f
81.1714 258 mo
78.8979 258 li
74.312 250.328 li
74.2651 250.336 li
74.2651 258 li
71.9761 258 li
71.9761 246.625 li
74.2651 246.625 li
78.8511 254.289 li
78.8979 254.281 li
78.8979 246.625 li
81.1714 246.625 li
81.1714 258 li
cp
f
91.9839 256.445 mo
91.6294 256.909 91.1011 257.311 90.3979 257.652 cv
89.6948 257.994 88.7886 258.164 87.6792 258.164 cv
86.3042 258.164 85.1792 257.732 84.3042 256.867 cv
83.4292 256.003 82.9917 254.881 82.9917 253.5 cv
82.9917 251.125 li
82.9917 249.75 83.416 248.629 84.2651 247.762 cv
85.1138 246.895 86.2051 246.461 87.5386 246.461 cv
88.9292 246.461 89.9941 246.791 90.7339 247.449 cv
91.4731 248.108 91.8301 248.987 91.8042 250.086 cv
91.7886 250.133 li
89.6401 250.133 li
89.6401 249.529 89.4653 249.059 89.1167 248.723 cv
88.7676 248.387 88.2598 248.219 87.5933 248.219 cv
86.895 248.219 86.3325 248.488 85.9058 249.027 cv
85.4785 249.566 85.2651 250.261 85.2651 251.109 cv
85.2651 253.5 li
85.2651 254.359 85.4839 255.061 85.9214 255.602 cv
86.3589 256.144 86.9448 256.414 87.6792 256.414 cv
88.2207 256.414 88.6489 256.359 88.9644 256.25 cv
89.2793 256.141 89.5229 256.003 89.6948 255.836 cv
89.6948 253.633 li
87.5073 253.633 li
87.5073 252.055 li
91.9839 252.055 li
91.9839 256.445 li
cp
f
71.7168 150.678 mo
75.8701 147.837 80.8989 145.553 89.6543 150.678 cv
98.4092 155.802 102.893 172.031 96.4873 179.932 cv
90.0811 187.833 84.4302 200.13 77.4824 200.916 cv
74.6992 201.231 70.0811 201.498 68.3887 196.195 cv
66.5913 190.563 70.1406 187.808 70.4888 180.943 cv
70.6621 177.52 68.5371 173.076 67.5493 166.744 cv
66.0542 159.202 67.564 153.519 71.7168 150.678 cv
cp
.992157 .752941 .0588235 rgb
f
80.1592 148.631 mo
76.9253 148.631 74.4619 150.012 72.2813 151.503 cv
68.4575 154.119 67.1255 159.462 68.5303 166.549 cv
68.9736 169.385 69.6392 171.818 70.2266 173.965 cv
70.9585 176.641 71.5908 178.953 71.4873 180.994 cv
71.3345 184.01 70.5938 186.26 69.9399 188.245 cv
69.0781 190.864 68.397 192.932 69.3413 195.891 cv
70.2485 198.734 72.1504 200.059 75.3257 200.059 cv
76.0664 200.059 76.7749 199.99 77.3701 199.922 cv
81.8364 199.417 86.0908 193.104 90.2046 186.999 cv
91.981 184.362 93.8179 181.637 95.7104 179.302 cv
98.2124 176.216 99.0933 171.401 98.127 166.09 cv
96.9771 159.771 93.4531 154.06 89.1489 151.54 cv
85.8047 149.583 82.8643 148.631 80.1592 148.631 cv
cp
75.3257 202.059 mo
71.2676 202.059 68.6133 200.188 67.436 196.499 cv
66.2944 192.922 67.1426 190.347 68.0405 187.62 cv
68.6846 185.663 69.3506 183.64 69.4902 180.893 cv
69.5771 179.171 69.0122 177.106 68.2974 174.493 cv
67.6963 172.295 67.0146 169.805 66.561 166.898 cv
64.998 159.017 66.626 152.949 71.1523 149.852 cv
73.481 148.26 76.3721 146.631 80.1592 146.631 cv
83.229 146.631 86.5 147.673 90.1597 149.815 cv
94.9453 152.616 98.8447 158.864 100.095 165.732 cv
101.165 171.617 100.134 177.023 97.2642 180.562 cv
95.4272 182.828 93.6152 185.516 91.8633 188.116 cv
87.2944 194.896 82.979 201.301 77.5947 201.91 cv
76.9443 201.983 76.166 202.059 75.3257 202.059 cv
cp
.239216 .27451 .333333 rgb
f
79.4165 154.077 mo
79.4165 154.077 99.1387 158.901 90.8335 177 cv
83.2905 193.438 77.1665 194.667 75.1631 193.457 cv
72.541 191.874 73.3535 188.947 74.0996 186.115 cv
76.0835 178.583 86.0479 172.07 78.4717 168.615 cv
70.144 165.412 71.7158 151.95 79.4165 154.077 cv
cp
.992157 .870588 .517647 rgb
f
79.4038 154.126 mo
79.4004 154.148 79.0137 153.992 78.2588 153.94 cv
77.5244 153.882 76.3286 153.954 75.2158 154.832 cv
74.104 155.684 73.2715 157.32 73.1289 159.264 cv
72.9814 161.189 73.438 163.48 74.8452 165.384 cv
75.5313 166.335 76.4785 167.165 77.5757 167.734 cv
78.6616 168.273 80.1797 168.749 81.1147 170.066 cv
81.5884 170.715 81.7993 171.584 81.7173 172.381 cv
81.6484 173.185 81.3809 173.925 81.0635 174.621 cv
80.4126 176.009 79.5625 177.273 78.71 178.543 cv
77.0137 181.071 75.1768 183.654 74.4595 186.704 cv
74.2568 187.476 74.0635 188.243 73.9526 189.007 cv
73.8467 189.766 73.7788 190.535 73.9663 191.227 cv
74.1353 191.931 74.5366 192.511 75.1504 192.946 cv
75.7021 193.405 76.4351 193.466 77.1758 193.345 cv
78.6646 193.079 80.0298 192.147 81.2163 191.115 cv
82.4063 190.06 83.457 188.847 84.416 187.581 cv
86.335 185.044 87.8926 182.295 89.2803 179.588 cv
90.6548 176.868 91.9155 174.195 92.395 171.454 cv
92.9546 168.738 92.6782 166.033 91.7729 163.79 cv
90.8418 161.549 89.3618 159.798 87.8594 158.522 cv
86.3652 157.218 84.8428 156.36 83.5737 155.725 cv
82.2949 155.099 81.2451 154.705 80.522 154.463 cv
79.7983 154.221 79.4038 154.126 79.4038 154.126 cv
cp
79.4292 154.029 mo
79.4292 154.029 79.8281 154.126 80.5537 154.369 cv
81.2803 154.61 82.334 155.007 83.6182 155.635 cv
84.8931 156.274 86.4146 157.139 87.9492 158.416 cv
89.4854 159.677 91.0127 161.421 92.0156 163.689 cv
92.9897 165.958 93.3325 168.737 92.8179 171.528 cv
92.3979 174.349 91.126 177.104 89.7832 179.839 cv
88.4165 182.583 86.8804 185.374 84.9546 187.984 cv
83.9912 189.286 82.9307 190.544 81.7017 191.661 cv
80.4668 192.749 79.0557 193.778 77.3096 194.121 cv
76.4688 194.288 75.4243 194.201 74.6792 193.625 cv
74.3423 193.421 73.9526 193.042 73.6841 192.701 cv
73.4253 192.323 73.1934 191.91 73.083 191.468 cv
72.603 189.679 73.1206 187.997 73.4966 186.452 cv
74.2686 183.193 76.1997 180.498 77.8818 177.983 cv
78.7319 176.719 79.5908 175.493 80.2021 174.219 cv
80.8184 172.965 81.1113 171.568 80.3809 170.576 cv
80.0396 170.077 79.5259 169.68 78.9741 169.358 cv
78.4233 169.02 77.8149 168.835 77.1948 168.465 cv
75.9697 167.777 75.0073 166.824 74.3037 165.764 cv
72.8838 163.641 72.5259 161.223 72.7637 159.227 cv
73.0146 157.217 73.9121 155.545 75.0933 154.673 cv
76.2808 153.78 77.521 153.738 78.269 153.814 cv
79.0396 153.885 79.4253 154.052 79.4292 154.029 cv
cp
.239216 .27451 .333333 rgb
f
317.642 406.153 mo
317.559 406.153 317.477 406.15 317.396 406.143 cv
317.316 406.15 317.234 406.153 317.15 406.153 cv
314.955 406.153 311.941 403.983 311.941 403.983 cv
310.058 402.912 307.332 402.21 306.359 402.21 cv
305.24 402.21 301.456 402.21 299.455 399.776 cv
301.537 401.495 304.648 401.495 305.645 401.495 cv
306.617 401.495 309.343 402.197 311.226 403.268 cv
311.226 403.268 314.241 405.439 316.436 405.439 cv
316.52 405.439 316.601 405.436 316.682 405.429 cv
316.763 405.436 316.845 405.439 316.928 405.439 cv
319.123 405.439 322.137 403.268 322.137 403.268 cv
322.721 402.936 323.387 402.645 324.056 402.394 cv
325.543 401.835 327.048 401.495 327.72 401.495 cv
329.264 401.495 335.887 401.495 335.887 395.094 cv
335.887 392.271 334.556 390.048 333.067 388.446 cv
334.815 390.074 336.601 392.538 336.601 395.809 cv
336.601 402.21 329.979 402.21 328.434 402.21 cv
327.762 402.21 326.258 402.549 324.77 403.108 cv
324.101 403.359 323.435 403.65 322.851 403.983 cv
322.851 403.983 319.838 406.153 317.642 406.153 cv
331.627 387.005 mo
331.395 386.756 331.158 386.521 330.923 386.302 cv
330.92 386.299 330.917 386.295 330.913 386.292 cv
329.752 384.95 328.688 383.23 328.4 381.721 cv
327.208 375.479 324.396 363.003 320.231 358.31 cv
324.79 362.296 327.856 375.843 329.114 382.435 cv
329.402 383.944 330.466 385.663 331.627 387.005 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
299.455 399.776 mo
299.2 399.565 298.96 399.328 298.741 399.062 cv
298.876 399.173 299.015 399.277 299.157 399.374 cv
299.251 399.515 299.351 399.649 299.455 399.776 cv
333.067 388.446 mo
332.98 388.365 332.893 388.286 332.807 388.21 cv
332.761 388.169 332.715 388.128 332.669 388.085 cv
332.565 387.964 332.459 387.846 332.352 387.731 cv
332.591 387.954 332.831 388.192 333.067 388.446 cv
320.231 358.31 mo
320.112 358.206 319.992 358.108 319.871 358.018 cv
319.754 357.871 319.636 357.73 319.516 357.595 cv
319.759 357.807 319.997 358.046 320.231 358.31 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
316.928 405.439 mo
316.845 405.439 316.763 405.436 316.682 405.429 cv
316.601 405.436 316.52 405.439 316.436 405.439 cv
314.241 405.439 311.226 403.268 311.226 403.268 cv
309.343 402.197 306.617 401.495 305.645 401.495 cv
304.648 401.495 301.537 401.495 299.455 399.776 cv
299.351 399.649 299.251 399.515 299.157 399.374 cv
301.217 400.781 303.998 400.781 304.93 400.781 cv
305.903 400.781 308.629 401.483 310.512 402.554 cv
310.512 402.554 313.527 404.724 315.722 404.724 cv
315.805 404.724 315.887 404.721 315.968 404.715 cv
316.048 404.721 316.131 404.724 316.214 404.724 cv
318.409 404.725 321.423 402.554 321.423 402.554 cv
322.007 402.222 322.672 401.93 323.342 401.68 cv
324.829 401.12 326.334 400.781 327.005 400.781 cv
328.55 400.781 335.172 400.781 335.172 394.38 cv
335.172 391.759 334.025 389.655 332.669 388.085 cv
332.715 388.128 332.761 388.169 332.807 388.21 cv
332.893 388.286 332.98 388.365 333.067 388.446 cv
334.556 390.048 335.887 392.271 335.887 395.094 cv
335.887 401.495 329.264 401.495 327.72 401.495 cv
327.048 401.495 325.543 401.835 324.056 402.394 cv
323.387 402.645 322.721 402.936 322.137 403.268 cv
322.137 403.268 319.123 405.439 316.928 405.439 cv
330.913 386.292 mo
330.681 386.042 330.445 385.808 330.21 385.589 cv
330.206 385.585 330.202 385.58 330.198 385.576 cv
329.037 384.234 327.973 382.515 327.686 381.006 cv
326.528 374.944 323.842 362.999 319.871 358.018 cv
319.992 358.108 320.112 358.206 320.231 358.31 cv
324.396 363.003 327.208 375.479 328.4 381.721 cv
328.688 383.23 329.752 384.95 330.913 386.292 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
298.741 399.062 mo
298.486 398.85 298.245 398.613 298.026 398.347 cv
298.161 398.458 298.3 398.562 298.443 398.66 cv
298.537 398.801 298.637 398.934 298.741 399.062 cv
332.352 387.731 mo
332.265 387.65 332.179 387.572 332.093 387.495 cv
332.047 387.455 332.001 387.413 331.955 387.371 cv
331.85 387.25 331.745 387.132 331.638 387.017 cv
331.877 387.239 332.116 387.477 332.352 387.731 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
299.157 399.374 mo
299.015 399.277 298.876 399.173 298.741 399.062 cv
298.637 398.934 298.537 398.801 298.443 398.66 cv
298.591 398.761 298.743 398.855 298.898 398.943 cv
298.979 399.093 299.066 399.237 299.157 399.374 cv
332.669 388.085 mo
332.437 387.871 332.2 387.635 331.964 387.381 cv
331.961 387.378 331.958 387.374 331.955 387.371 cv
332.001 387.413 332.047 387.455 332.093 387.495 cv
332.179 387.572 332.265 387.65 332.352 387.731 cv
332.459 387.846 332.565 387.964 332.669 388.085 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
316.214 404.724 mo
316.131 404.724 316.048 404.721 315.968 404.715 cv
315.887 404.721 315.805 404.724 315.722 404.724 cv
313.527 404.724 310.512 402.554 310.512 402.554 cv
308.629 401.483 305.903 400.781 304.93 400.781 cv
303.998 400.781 301.217 400.781 299.157 399.374 cv
299.066 399.237 298.979 399.093 298.898 398.943 cv
300.893 400.067 303.351 400.067 304.216 400.067 cv
305.189 400.067 307.915 400.769 309.798 401.84 cv
309.798 401.84 312.812 404.01 315.008 404.01 cv
315.091 404.01 315.173 404.007 315.254 404 cv
315.334 404.007 315.417 404.01 315.5 404.01 cv
317.695 404.01 320.709 401.84 320.709 401.84 cv
321.292 401.507 321.958 401.216 322.628 400.966 cv
324.115 400.406 325.62 400.067 326.291 400.067 cv
327.836 400.067 334.458 400.067 334.458 393.666 cv
334.458 391.05 333.316 388.95 331.964 387.381 cv
332.2 387.635 332.437 387.871 332.669 388.085 cv
334.025 389.655 335.172 391.759 335.172 394.38 cv
335.172 400.781 328.55 400.781 327.005 400.781 cv
326.334 400.781 324.829 401.12 323.342 401.68 cv
322.672 401.93 322.007 402.222 321.423 402.554 cv
321.423 402.554 318.409 404.725 316.214 404.724 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
319.516 357.595 mo
319.397 357.491 319.277 357.394 319.156 357.303 cv
319.039 357.156 318.92 357.015 318.801 356.88 cv
319.044 357.092 319.282 357.332 319.516 357.595 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
319.871 358.018 mo
319.751 357.928 319.631 357.845 319.51 357.769 cv
319.393 357.608 319.276 357.452 319.156 357.303 cv
319.277 357.394 319.397 357.491 319.516 357.595 cv
319.636 357.73 319.754 357.871 319.871 358.018 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
330.198 385.576 mo
329.966 385.327 329.73 385.093 329.495 384.874 cv
329.491 384.87 329.488 384.866 329.484 384.862 cv
328.323 383.52 327.259 381.801 326.971 380.292 cv
325.849 374.411 323.287 362.994 319.51 357.769 cv
319.631 357.845 319.751 357.928 319.871 358.018 cv
323.842 362.999 326.528 374.944 327.686 381.006 cv
327.973 382.515 329.037 384.234 330.198 385.576 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
298.026 398.347 mo
297.771 398.136 297.531 397.899 297.312 397.633 cv
297.447 397.744 297.586 397.848 297.728 397.945 cv
297.823 398.086 297.922 398.22 298.026 398.347 cv
331.638 387.017 mo
331.637 387.016 331.635 387.014 331.634 387.013 cv
331.632 387.01 331.629 387.008 331.627 387.005 cv
331.631 387.009 331.634 387.013 331.638 387.017 cv
318.801 356.88 mo
318.683 356.777 318.563 356.679 318.442 356.589 cv
318.325 356.442 318.207 356.302 318.088 356.167 cv
318.33 356.379 318.568 356.617 318.801 356.88 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
331.634 387.013 mo
331.549 386.934 331.463 386.856 331.378 386.781 cv
331.333 386.74 331.287 386.699 331.241 386.657 cv
331.136 386.535 331.03 386.417 330.923 386.302 cv
331.158 386.521 331.395 386.756 331.627 387.005 cv
331.629 387.008 331.632 387.01 331.634 387.013 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
298.443 398.66 mo
298.3 398.562 298.161 398.458 298.026 398.347 cv
297.922 398.22 297.823 398.086 297.728 397.945 cv
297.877 398.047 298.029 398.141 298.184 398.228 cv
298.265 398.379 298.351 398.523 298.443 398.66 cv
331.955 387.371 mo
331.954 387.37 331.952 387.368 331.951 387.367 cv
331.845 387.252 331.739 387.134 331.634 387.013 cv
331.635 387.014 331.637 387.016 331.638 387.017 cv
331.745 387.132 331.85 387.25 331.955 387.371 cv
319.156 357.303 mo
319.037 357.214 318.917 357.131 318.796 357.055 cv
318.679 356.894 318.561 356.738 318.442 356.589 cv
318.563 356.679 318.683 356.777 318.801 356.88 cv
318.92 357.015 319.039 357.156 319.156 357.303 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
331.951 387.367 mo
331.719 387.154 331.483 386.919 331.249 386.666 cv
331.246 386.663 331.243 386.66 331.241 386.657 cv
331.287 386.699 331.333 386.74 331.378 386.781 cv
331.463 386.856 331.549 386.934 331.634 387.013 cv
331.739 387.134 331.845 387.252 331.951 387.367 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
298.898 398.943 mo
298.743 398.855 298.591 398.761 298.443 398.66 cv
298.351 398.523 298.265 398.379 298.184 398.228 cv
298.346 398.32 298.512 398.404 298.679 398.481 cv
298.747 398.642 298.82 398.795 298.898 398.943 cv
331.964 387.381 mo
331.96 387.376 331.955 387.372 331.951 387.367 cv
331.952 387.368 331.954 387.37 331.955 387.371 cv
331.958 387.374 331.961 387.378 331.964 387.381 cv
319.51 357.769 mo
319.39 357.694 319.269 357.626 319.147 357.564 cv
319.031 357.389 318.914 357.219 318.796 357.055 cv
318.917 357.131 319.037 357.214 319.156 357.303 cv
319.276 357.452 319.393 357.608 319.51 357.769 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
315.5 404.01 mo
315.417 404.01 315.334 404.007 315.254 404 cv
315.173 404.007 315.091 404.01 315.008 404.01 cv
312.812 404.01 309.798 401.84 309.798 401.84 cv
307.915 400.769 305.189 400.067 304.216 400.067 cv
303.351 400.067 300.893 400.067 298.898 398.943 cv
298.82 398.795 298.747 398.642 298.679 398.481 cv
300.569 399.353 302.707 399.353 303.502 399.353 cv
304.474 399.353 307.201 400.054 309.083 401.125 cv
309.083 401.125 312.098 403.296 314.293 403.296 cv
314.377 403.296 314.459 403.293 314.539 403.286 cv
314.62 403.293 314.702 403.296 314.785 403.296 cv
316.981 403.296 319.994 401.125 319.994 401.125 cv
320.578 400.793 321.244 400.502 321.913 400.251 cv
323.4 399.692 324.905 399.353 325.577 399.353 cv
327.122 399.353 333.744 399.353 333.744 392.951 cv
333.744 390.335 332.601 388.235 331.249 386.666 cv
331.483 386.919 331.719 387.154 331.951 387.367 cv
331.955 387.372 331.96 387.376 331.964 387.381 cv
333.316 388.95 334.458 391.05 334.458 393.666 cv
334.458 400.067 327.836 400.067 326.291 400.067 cv
325.62 400.067 324.115 400.406 322.628 400.966 cv
321.958 401.216 321.292 401.507 320.709 401.84 cv
320.709 401.84 317.695 404.01 315.5 404.01 cv
329.484 384.862 mo
329.252 384.613 329.016 384.378 328.781 384.16 cv
328.777 384.155 328.773 384.151 328.769 384.147 cv
327.608 382.805 326.545 381.086 326.257 379.578 cv
325.17 373.881 322.732 362.991 319.147 357.564 cv
319.269 357.626 319.39 357.694 319.51 357.769 cv
323.287 362.994 325.849 374.411 326.971 380.292 cv
327.259 381.801 328.323 383.52 329.484 384.862 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
297.312 397.633 mo
297.057 397.422 296.817 397.185 296.598 396.918 cv
296.733 397.03 296.872 397.134 297.014 397.231 cv
297.108 397.372 297.208 397.506 297.312 397.633 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
330.923 386.302 mo
330.922 386.301 330.921 386.3 330.92 386.299 cv
330.918 386.297 330.915 386.294 330.913 386.292 cv
330.917 386.295 330.92 386.299 330.923 386.302 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
330.92 386.299 mo
330.834 386.219 330.749 386.142 330.664 386.067 cv
330.618 386.026 330.573 385.985 330.526 385.942 cv
330.422 385.821 330.316 385.704 330.21 385.589 cv
330.445 385.808 330.681 386.042 330.913 386.292 cv
330.915 386.294 330.918 386.297 330.92 386.299 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
297.728 397.945 mo
297.586 397.848 297.447 397.744 297.312 397.633 cv
297.208 397.506 297.108 397.372 297.014 397.231 cv
297.163 397.333 297.315 397.427 297.47 397.514 cv
297.55 397.665 297.637 397.808 297.728 397.945 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
331.241 386.657 mo
331.239 386.655 331.238 386.654 331.236 386.653 cv
331.13 386.538 331.025 386.42 330.92 386.299 cv
330.921 386.3 330.922 386.301 330.923 386.302 cv
331.03 386.417 331.136 386.535 331.241 386.657 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
331.236 386.653 mo
331.005 386.44 330.77 386.205 330.536 385.953 cv
330.533 385.949 330.53 385.946 330.526 385.942 cv
330.573 385.985 330.618 386.026 330.664 386.067 cv
330.749 386.142 330.834 386.219 330.92 386.299 cv
331.025 386.42 331.13 386.538 331.236 386.653 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
298.184 398.228 mo
298.029 398.141 297.877 398.047 297.728 397.945 cv
297.637 397.808 297.55 397.665 297.47 397.514 cv
297.632 397.606 297.798 397.69 297.965 397.767 cv
298.032 397.927 298.105 398.081 298.184 398.228 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
331.249 386.666 mo
331.245 386.662 331.241 386.657 331.236 386.653 cv
331.238 386.654 331.239 386.655 331.241 386.657 cv
331.243 386.66 331.246 386.663 331.249 386.666 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
298.679 398.481 mo
298.512 398.404 298.346 398.32 298.184 398.228 cv
298.105 398.081 298.032 397.927 297.965 397.767 cv
298.142 397.848 298.32 397.922 298.5 397.989 cv
298.554 398.16 298.614 398.324 298.679 398.481 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
314.785 403.296 mo
314.702 403.296 314.62 403.293 314.539 403.286 cv
314.459 403.293 314.377 403.296 314.293 403.296 cv
312.098 403.296 309.083 401.125 309.083 401.125 cv
307.201 400.054 304.474 399.353 303.502 399.353 cv
302.707 399.353 300.569 399.353 298.679 398.481 cv
298.614 398.324 298.554 398.16 298.5 397.989 cv
300.243 398.638 302.067 398.638 302.788 398.638 cv
303.76 398.638 306.486 399.34 308.369 400.411 cv
308.369 400.411 311.384 402.581 313.579 402.581 cv
313.662 402.581 313.744 402.578 313.825 402.572 cv
313.906 402.578 313.988 402.581 314.071 402.581 cv
316.266 402.582 319.28 400.411 319.28 400.411 cv
319.864 400.079 320.529 399.787 321.199 399.537 cv
322.686 398.977 324.191 398.638 324.863 398.638 cv
326.407 398.638 333.03 398.638 333.03 392.237 cv
333.03 389.622 331.887 387.522 330.536 385.953 cv
330.77 386.205 331.005 386.44 331.236 386.653 cv
331.241 386.657 331.245 386.662 331.249 386.666 cv
332.601 388.235 333.744 390.335 333.744 392.951 cv
333.744 399.353 327.122 399.353 325.577 399.353 cv
324.905 399.353 323.4 399.692 321.913 400.251 cv
321.244 400.502 320.578 400.793 319.994 401.125 cv
319.994 401.125 316.981 403.296 314.785 403.296 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
318.088 356.167 mo
317.969 356.063 317.849 355.965 317.728 355.875 cv
317.611 355.728 317.492 355.587 317.373 355.452 cv
317.615 355.664 317.854 355.903 318.088 356.167 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
318.442 356.589 mo
318.323 356.499 318.203 356.417 318.081 356.34 cv
317.965 356.179 317.847 356.024 317.728 355.875 cv
317.849 355.965 317.969 356.063 318.088 356.167 cv
318.207 356.302 318.325 356.442 318.442 356.589 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
318.796 357.055 mo
318.676 356.98 318.555 356.911 318.433 356.85 cv
318.317 356.674 318.2 356.504 318.081 356.34 cv
318.203 356.417 318.323 356.499 318.442 356.589 cv
318.561 356.738 318.679 356.894 318.796 357.055 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
319.147 357.564 mo
319.027 357.504 318.905 357.45 318.783 357.403 cv
318.668 357.213 318.551 357.029 318.433 356.85 cv
318.555 356.911 318.676 356.98 318.796 357.055 cv
318.914 357.219 319.031 357.389 319.147 357.564 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
328.769 384.147 mo
328.537 383.898 328.301 383.664 328.066 383.445 cv
328.063 383.441 328.059 383.438 328.055 383.434 cv
326.895 382.092 325.831 380.373 325.543 378.864 cv
324.491 373.354 322.177 362.987 318.783 357.403 cv
318.905 357.45 319.027 357.504 319.147 357.564 cv
322.732 362.991 325.17 373.881 326.257 379.578 cv
326.545 381.086 327.608 382.805 328.769 384.147 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
296.598 396.918 mo
296.342 396.707 296.103 396.47 295.884 396.204 cv
296.019 396.316 296.157 396.42 296.3 396.517 cv
296.394 396.658 296.494 396.791 296.598 396.918 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
330.21 385.589 mo
330.208 385.588 330.207 385.586 330.206 385.585 cv
330.203 385.582 330.2 385.579 330.198 385.576 cv
330.202 385.58 330.206 385.585 330.21 385.589 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
330.206 385.585 mo
330.12 385.505 330.035 385.428 329.95 385.352 cv
329.904 385.312 329.859 385.271 329.813 385.229 cv
329.708 385.107 329.602 384.989 329.495 384.874 cv
329.73 385.093 329.966 385.327 330.198 385.576 cv
330.2 385.579 330.203 385.582 330.206 385.585 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
317.373 355.452 mo
317.254 355.348 317.134 355.251 317.014 355.16 cv
316.896 355.013 316.779 354.873 316.659 354.738 cv
316.901 354.95 317.139 355.189 317.373 355.452 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
297.014 397.231 mo
296.872 397.134 296.733 397.03 296.598 396.918 cv
296.494 396.791 296.394 396.658 296.3 396.517 cv
296.448 396.618 296.601 396.712 296.756 396.8 cv
296.836 396.95 296.923 397.094 297.014 397.231 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
330.526 385.942 mo
330.525 385.941 330.523 385.939 330.522 385.938 cv
330.416 385.824 330.31 385.706 330.206 385.585 cv
330.207 385.586 330.208 385.588 330.21 385.589 cv
330.316 385.704 330.422 385.821 330.526 385.942 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
330.522 385.938 mo
330.291 385.725 330.056 385.491 329.822 385.239 cv
329.819 385.236 329.816 385.232 329.813 385.229 cv
329.859 385.271 329.904 385.312 329.95 385.352 cv
330.035 385.428 330.12 385.505 330.206 385.585 cv
330.31 385.706 330.416 385.824 330.522 385.938 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
297.47 397.514 mo
297.315 397.427 297.163 397.333 297.014 397.231 cv
296.923 397.094 296.836 396.95 296.756 396.8 cv
296.918 396.891 297.083 396.975 297.251 397.052 cv
297.318 397.213 297.391 397.367 297.47 397.514 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
330.536 385.953 mo
330.531 385.948 330.526 385.943 330.522 385.938 cv
330.523 385.939 330.525 385.941 330.526 385.942 cv
330.53 385.946 330.533 385.949 330.536 385.953 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
297.965 397.767 mo
297.798 397.69 297.632 397.606 297.47 397.514 cv
297.391 397.367 297.318 397.213 297.251 397.052 cv
297.427 397.134 297.606 397.208 297.786 397.275 cv
297.839 397.446 297.899 397.61 297.965 397.767 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
298.5 397.989 mo
298.32 397.922 298.142 397.848 297.965 397.767 cv
297.899 397.61 297.839 397.446 297.786 397.275 cv
297.977 397.346 298.17 397.41 298.361 397.466 cv
298.401 397.647 298.448 397.822 298.5 397.989 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
314.071 402.581 mo
313.988 402.581 313.906 402.578 313.825 402.572 cv
313.744 402.578 313.662 402.581 313.579 402.581 cv
311.384 402.581 308.369 400.411 308.369 400.411 cv
306.486 399.34 303.76 398.638 302.788 398.638 cv
302.067 398.638 300.243 398.638 298.5 397.989 cv
298.448 397.822 298.401 397.647 298.361 397.466 cv
299.916 397.924 301.432 397.924 302.073 397.924 cv
303.046 397.924 305.772 398.626 307.655 399.697 cv
307.655 399.697 310.669 401.867 312.865 401.867 cv
312.948 401.867 313.03 401.864 313.111 401.858 cv
313.191 401.864 313.274 401.867 313.357 401.867 cv
315.552 401.867 318.566 399.697 318.566 399.697 cv
319.149 399.365 319.815 399.073 320.485 398.823 cv
321.972 398.263 323.477 397.924 324.148 397.924 cv
325.693 397.924 332.315 397.924 332.315 391.523 cv
332.315 388.908 331.173 386.808 329.822 385.239 cv
330.056 385.491 330.291 385.725 330.522 385.938 cv
330.526 385.943 330.531 385.948 330.536 385.953 cv
331.887 387.522 333.03 389.622 333.03 392.237 cv
333.03 398.638 326.407 398.638 324.863 398.638 cv
324.191 398.638 322.686 398.977 321.199 399.537 cv
320.529 399.787 319.864 400.079 319.28 400.411 cv
319.28 400.411 316.266 402.582 314.071 402.581 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
317.728 355.875 mo
317.608 355.785 317.489 355.703 317.367 355.626 cv
317.251 355.465 317.133 355.309 317.014 355.16 cv
317.134 355.251 317.254 355.348 317.373 355.452 cv
317.492 355.587 317.611 355.728 317.728 355.875 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
318.081 356.34 mo
317.961 356.265 317.841 356.197 317.719 356.136 cv
317.603 355.96 317.486 355.79 317.367 355.626 cv
317.489 355.703 317.608 355.785 317.728 355.875 cv
317.847 356.024 317.965 356.179 318.081 356.34 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
318.433 356.85 mo
318.313 356.789 318.191 356.735 318.069 356.689 cv
317.953 356.499 317.837 356.314 317.719 356.136 cv
317.841 356.197 317.961 356.265 318.081 356.34 cv
318.2 356.504 318.317 356.674 318.433 356.85 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
318.783 357.403 mo
318.662 357.357 318.54 357.318 318.418 357.286 cv
318.303 357.081 318.187 356.882 318.069 356.689 cv
318.191 356.735 318.313 356.789 318.433 356.85 cv
318.551 357.029 318.668 357.213 318.783 357.403 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
328.055 383.434 mo
327.823 383.184 327.588 382.95 327.352 382.731 cv
327.348 382.727 327.344 382.723 327.34 382.718 cv
326.18 381.377 325.116 379.658 324.828 378.149 cv
323.813 372.831 321.621 362.985 318.418 357.286 cv
318.54 357.318 318.662 357.357 318.783 357.403 cv
322.177 362.987 324.491 373.354 325.543 378.864 cv
325.831 380.373 326.895 382.092 328.055 383.434 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
295.884 396.204 mo
295.628 395.993 295.388 395.756 295.17 395.49 cv
295.304 395.601 295.443 395.705 295.586 395.803 cv
295.68 395.944 295.779 396.077 295.884 396.204 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
329.495 384.874 mo
329.494 384.873 329.492 384.872 329.491 384.87 cv
329.489 384.868 329.486 384.865 329.484 384.862 cv
329.488 384.866 329.491 384.87 329.495 384.874 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
329.491 384.87 mo
329.406 384.791 329.321 384.714 329.236 384.638 cv
329.19 384.598 329.144 384.556 329.098 384.514 cv
328.993 384.392 328.887 384.275 328.781 384.16 cv
329.016 384.378 329.252 384.613 329.484 384.862 cv
329.486 384.865 329.489 384.868 329.491 384.87 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
296.3 396.517 mo
296.157 396.42 296.019 396.316 295.884 396.204 cv
295.779 396.077 295.68 395.944 295.586 395.803 cv
295.734 395.904 295.886 395.998 296.041 396.086 cv
296.122 396.236 296.208 396.38 296.3 396.517 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
329.813 385.229 mo
329.812 385.227 329.81 385.226 329.809 385.225 cv
329.702 385.11 329.596 384.992 329.491 384.87 cv
329.492 384.872 329.494 384.873 329.495 384.874 cv
329.602 384.989 329.708 385.107 329.813 385.229 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
329.809 385.225 mo
329.577 385.012 329.342 384.777 329.108 384.525 cv
329.105 384.521 329.101 384.518 329.098 384.514 cv
329.144 384.556 329.19 384.598 329.236 384.638 cv
329.321 384.714 329.406 384.791 329.491 384.87 cv
329.596 384.992 329.702 385.11 329.809 385.225 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
296.756 396.8 mo
296.601 396.712 296.448 396.618 296.3 396.517 cv
296.208 396.38 296.122 396.236 296.041 396.086 cv
296.203 396.177 296.369 396.261 296.536 396.338 cv
296.604 396.499 296.677 396.653 296.756 396.8 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
329.822 385.239 mo
329.817 385.234 329.813 385.229 329.809 385.225 cv
329.81 385.226 329.812 385.227 329.813 385.229 cv
329.816 385.232 329.819 385.236 329.822 385.239 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
297.251 397.052 mo
297.083 396.975 296.918 396.891 296.756 396.8 cv
296.677 396.653 296.604 396.499 296.536 396.338 cv
296.713 396.42 296.892 396.494 297.072 396.561 cv
297.125 396.731 297.185 396.895 297.251 397.052 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
297.786 397.275 mo
297.606 397.208 297.427 397.134 297.251 397.052 cv
297.185 396.895 297.125 396.731 297.072 396.561 cv
297.263 396.632 297.455 396.695 297.647 396.752 cv
297.687 396.933 297.733 397.107 297.786 397.275 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
298.361 397.466 mo
298.17 397.41 297.977 397.346 297.786 397.275 cv
297.733 397.107 297.687 396.933 297.647 396.752 cv
297.854 396.813 298.06 396.866 298.263 396.911 cv
298.289 397.103 298.322 397.288 298.361 397.466 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
313.357 401.867 mo
313.274 401.867 313.191 401.864 313.111 401.858 cv
313.03 401.864 312.948 401.867 312.865 401.867 cv
310.669 401.867 307.655 399.697 307.655 399.697 cv
305.772 398.626 303.046 397.924 302.073 397.924 cv
301.432 397.924 299.916 397.924 298.361 397.466 cv
298.322 397.288 298.289 397.103 298.263 396.911 cv
299.589 397.21 300.803 397.21 301.359 397.21 cv
302.332 397.21 305.058 397.912 306.941 398.983 cv
306.941 398.983 309.955 401.153 312.15 401.153 cv
312.234 401.153 312.316 401.15 312.396 401.143 cv
312.477 401.15 312.559 401.153 312.642 401.153 cv
314.838 401.153 317.851 398.983 317.851 398.983 cv
318.435 398.65 319.101 398.359 319.77 398.108 cv
321.258 397.549 322.762 397.21 323.434 397.21 cv
324.979 397.21 331.601 397.21 331.601 390.809 cv
331.601 388.194 330.459 386.094 329.108 384.525 cv
329.342 384.777 329.577 385.012 329.809 385.225 cv
329.813 385.229 329.817 385.234 329.822 385.239 cv
331.173 386.808 332.315 388.908 332.315 391.523 cv
332.315 397.924 325.693 397.924 324.148 397.924 cv
323.477 397.924 321.972 398.263 320.485 398.823 cv
319.815 399.073 319.149 399.365 318.566 399.697 cv
318.566 399.697 315.552 401.867 313.357 401.867 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
316.659 354.738 mo
316.54 354.634 316.421 354.537 316.3 354.446 cv
316.182 354.299 316.064 354.158 315.945 354.024 cv
316.187 354.236 316.425 354.475 316.659 354.738 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
317.014 355.16 mo
316.894 355.071 316.774 354.988 316.653 354.912 cv
316.536 354.751 316.418 354.595 316.3 354.446 cv
316.421 354.537 316.54 354.634 316.659 354.738 cv
316.779 354.873 316.896 355.013 317.014 355.16 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
317.367 355.626 mo
317.247 355.551 317.126 355.483 317.005 355.422 cv
316.889 355.246 316.771 355.076 316.653 354.912 cv
316.774 354.988 316.894 355.071 317.014 355.16 cv
317.133 355.309 317.251 355.465 317.367 355.626 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
317.719 356.136 mo
317.598 356.075 317.477 356.021 317.355 355.974 cv
317.239 355.784 317.123 355.6 317.005 355.422 cv
317.126 355.483 317.247 355.551 317.367 355.626 cv
317.486 355.79 317.603 355.96 317.719 356.136 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
318.069 356.689 mo
317.948 356.643 317.826 356.603 317.703 356.571 cv
317.588 356.367 317.472 356.168 317.355 355.974 cv
317.477 356.021 317.598 356.075 317.719 356.136 cv
317.837 356.314 317.953 356.499 318.069 356.689 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
318.418 357.286 mo
318.296 357.254 318.174 357.229 318.05 357.212 cv
317.936 356.993 317.82 356.78 317.703 356.571 cv
317.826 356.603 317.948 356.643 318.069 356.689 cv
318.187 356.882 318.303 357.081 318.418 357.286 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
327.34 382.718 mo
327.108 382.469 326.873 382.235 326.638 382.017 cv
326.634 382.013 326.631 382.009 326.627 382.005 cv
325.466 380.664 324.402 378.944 324.114 377.435 cv
323.136 372.311 321.065 362.984 318.05 357.212 cv
318.174 357.229 318.296 357.254 318.418 357.286 cv
321.621 362.985 323.813 372.831 324.828 378.149 cv
325.116 379.658 326.18 381.377 327.34 382.718 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
295.17 395.49 mo
294.914 395.279 294.674 395.042 294.455 394.775 cv
294.59 394.887 294.729 394.991 294.871 395.088 cv
294.965 395.229 295.065 395.363 295.17 395.49 cv
315.945 354.024 mo
315.826 353.92 315.706 353.822 315.585 353.732 cv
315.468 353.585 315.35 353.444 315.23 353.309 cv
315.473 353.521 315.711 353.76 315.945 354.024 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
328.781 384.16 mo
328.779 384.158 328.778 384.157 328.776 384.156 cv
328.774 384.153 328.771 384.15 328.769 384.147 cv
328.773 384.151 328.777 384.155 328.781 384.16 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
328.776 384.156 mo
328.691 384.076 328.606 383.999 328.521 383.924 cv
328.476 383.883 328.43 383.842 328.384 383.8 cv
328.279 383.678 328.173 383.56 328.066 383.445 cv
328.301 383.664 328.537 383.898 328.769 384.147 cv
328.771 384.15 328.774 384.153 328.776 384.156 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
295.586 395.803 mo
295.443 395.705 295.304 395.601 295.17 395.49 cv
295.065 395.363 294.965 395.229 294.871 395.088 cv
295.02 395.19 295.172 395.284 295.327 395.371 cv
295.408 395.522 295.494 395.666 295.586 395.803 cv
316.3 354.446 mo
316.18 354.357 316.06 354.274 315.939 354.198 cv
315.822 354.037 315.704 353.881 315.585 353.732 cv
315.706 353.822 315.826 353.92 315.945 354.024 cv
316.064 354.158 316.182 354.299 316.3 354.446 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
329.098 384.514 mo
329.096 384.512 329.095 384.511 329.093 384.509 cv
328.987 384.395 328.881 384.277 328.776 384.156 cv
328.778 384.157 328.779 384.158 328.781 384.16 cv
328.887 384.275 328.993 384.392 329.098 384.514 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
329.093 384.509 mo
328.862 384.296 328.627 384.062 328.392 383.81 cv
328.39 383.806 328.387 383.803 328.384 383.8 cv
328.43 383.842 328.476 383.883 328.521 383.924 cv
328.606 383.999 328.691 384.076 328.776 384.156 cv
328.881 384.277 328.987 384.395 329.093 384.509 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
296.041 396.086 mo
295.886 395.998 295.734 395.904 295.586 395.803 cv
295.494 395.666 295.408 395.522 295.327 395.371 cv
295.489 395.463 295.655 395.547 295.822 395.624 cv
295.889 395.785 295.962 395.938 296.041 396.086 cv
316.653 354.912 mo
316.533 354.837 316.412 354.768 316.29 354.707 cv
316.174 354.532 316.057 354.361 315.939 354.198 cv
316.06 354.274 316.18 354.357 316.3 354.446 cv
316.418 354.595 316.536 354.751 316.653 354.912 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
329.108 384.525 mo
329.103 384.52 329.098 384.514 329.093 384.509 cv
329.095 384.511 329.096 384.512 329.098 384.514 cv
329.101 384.518 329.105 384.521 329.108 384.525 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
296.536 396.338 mo
296.369 396.261 296.203 396.177 296.041 396.086 cv
295.962 395.938 295.889 395.785 295.822 395.624 cv
295.999 395.705 296.178 395.779 296.357 395.846 cv
296.411 396.017 296.471 396.181 296.536 396.338 cv
317.005 355.422 mo
316.884 355.361 316.763 355.307 316.64 355.26 cv
316.525 355.07 316.408 354.886 316.29 354.707 cv
316.412 354.768 316.533 354.837 316.653 354.912 cv
316.771 355.076 316.889 355.246 317.005 355.422 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
297.072 396.561 mo
296.892 396.494 296.713 396.42 296.536 396.338 cv
296.471 396.181 296.411 396.017 296.357 395.846 cv
296.549 395.918 296.741 395.981 296.933 396.038 cv
296.973 396.219 297.019 396.393 297.072 396.561 cv
317.355 355.974 mo
317.234 355.928 317.112 355.889 316.989 355.857 cv
316.874 355.652 316.758 355.454 316.64 355.26 cv
316.763 355.307 316.884 355.361 317.005 355.422 cv
317.123 355.6 317.239 355.784 317.355 355.974 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
297.647 396.752 mo
297.455 396.695 297.263 396.632 297.072 396.561 cv
297.019 396.393 296.973 396.219 296.933 396.038 cv
297.139 396.098 297.345 396.151 297.549 396.197 cv
297.575 396.389 297.608 396.574 297.647 396.752 cv
317.703 356.571 mo
317.582 356.54 317.459 356.515 317.336 356.498 cv
317.222 356.279 317.106 356.065 316.989 355.857 cv
317.112 355.889 317.234 355.928 317.355 355.974 cv
317.472 356.168 317.588 356.367 317.703 356.571 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
298.263 396.911 mo
298.06 396.866 297.854 396.813 297.647 396.752 cv
297.608 396.574 297.575 396.389 297.549 396.197 cv
297.772 396.247 297.992 396.289 298.207 396.324 cv
298.219 396.527 298.238 396.722 298.263 396.911 cv
318.05 357.212 mo
317.928 357.195 317.805 357.185 317.681 357.183 cv
317.568 356.949 317.452 356.721 317.336 356.498 cv
317.459 356.515 317.582 356.54 317.703 356.571 cv
317.82 356.78 317.936 356.993 318.05 357.212 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
312.642 401.153 mo
312.559 401.153 312.477 401.15 312.396 401.143 cv
312.316 401.15 312.234 401.153 312.15 401.153 cv
309.955 401.153 306.941 398.983 306.941 398.983 cv
305.058 397.912 302.332 397.21 301.359 397.21 cv
300.803 397.21 299.589 397.21 298.263 396.911 cv
298.238 396.722 298.219 396.527 298.207 396.324 cv
299.265 396.495 300.182 396.495 300.645 396.495 cv
301.617 396.495 304.343 397.197 306.226 398.268 cv
306.226 398.268 309.241 400.439 311.436 400.439 cv
311.519 400.439 311.601 400.435 311.682 400.429 cv
311.763 400.435 311.845 400.439 311.928 400.439 cv
314.124 400.439 317.137 398.268 317.137 398.268 cv
317.721 397.936 318.387 397.645 319.056 397.394 cv
320.543 396.835 322.048 396.495 322.72 396.495 cv
324.264 396.495 330.887 396.495 330.887 390.094 cv
330.887 387.479 329.744 385.379 328.392 383.81 cv
328.627 384.062 328.862 384.296 329.093 384.509 cv
329.098 384.514 329.103 384.52 329.108 384.525 cv
330.459 386.094 331.601 388.194 331.601 390.809 cv
331.601 397.21 324.979 397.21 323.434 397.21 cv
322.762 397.21 321.258 397.549 319.77 398.108 cv
319.101 398.359 318.435 398.65 317.851 398.983 cv
317.851 398.983 314.838 401.153 312.642 401.153 cv
326.627 382.005 mo
326.395 381.756 326.159 381.522 325.923 381.302 cv
325.92 381.299 325.916 381.295 325.913 381.291 cv
324.752 379.95 323.688 378.23 323.4 376.721 cv
322.46 371.795 320.509 362.984 317.681 357.183 cv
317.805 357.185 317.928 357.195 318.05 357.212 cv
321.065 362.984 323.136 372.311 324.114 377.435 cv
324.402 378.944 325.466 380.664 326.627 382.005 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
294.455 394.775 mo
294.199 394.564 293.96 394.328 293.741 394.062 cv
293.876 394.173 294.015 394.277 294.157 394.374 cv
294.251 394.515 294.351 394.648 294.455 394.775 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
328.066 383.445 mo
328.065 383.444 328.064 383.443 328.062 383.442 cv
328.06 383.439 328.058 383.436 328.055 383.434 cv
328.059 383.438 328.063 383.441 328.066 383.445 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
328.062 383.442 mo
327.977 383.362 327.892 383.285 327.807 383.21 cv
327.761 383.169 327.716 383.128 327.67 383.085 cv
327.565 382.964 327.459 382.846 327.352 382.731 cv
327.588 382.95 327.823 383.184 328.055 383.434 cv
328.058 383.436 328.06 383.439 328.062 383.442 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
294.871 395.088 mo
294.729 394.991 294.59 394.887 294.455 394.775 cv
294.351 394.648 294.251 394.515 294.157 394.374 cv
294.306 394.476 294.458 394.57 294.613 394.657 cv
294.693 394.807 294.78 394.951 294.871 395.088 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
328.384 383.8 mo
328.382 383.798 328.381 383.797 328.379 383.795 cv
328.273 383.681 328.167 383.563 328.062 383.442 cv
328.064 383.443 328.065 383.444 328.066 383.445 cv
328.173 383.56 328.279 383.678 328.384 383.8 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
328.379 383.795 mo
328.148 383.583 327.913 383.348 327.679 383.097 cv
327.676 383.093 327.673 383.089 327.67 383.085 cv
327.716 383.128 327.761 383.169 327.807 383.21 cv
327.892 383.285 327.977 383.362 328.062 383.442 cv
328.167 383.563 328.273 383.681 328.379 383.795 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
295.327 395.371 mo
295.172 395.284 295.02 395.19 294.871 395.088 cv
294.78 394.951 294.693 394.807 294.613 394.657 cv
294.775 394.749 294.94 394.833 295.108 394.91 cv
295.175 395.071 295.248 395.224 295.327 395.371 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
328.392 383.81 mo
328.388 383.805 328.384 383.8 328.379 383.795 cv
328.381 383.797 328.382 383.798 328.384 383.8 cv
328.387 383.803 328.39 383.806 328.392 383.81 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
295.822 395.624 mo
295.655 395.547 295.489 395.463 295.327 395.371 cv
295.248 395.224 295.175 395.071 295.108 394.91 cv
295.284 394.991 295.464 395.065 295.643 395.132 cv
295.697 395.303 295.756 395.467 295.822 395.624 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
296.357 395.846 mo
296.178 395.779 295.999 395.705 295.822 395.624 cv
295.756 395.467 295.697 395.303 295.643 395.132 cv
295.835 395.203 296.027 395.267 296.218 395.323 cv
296.258 395.504 296.305 395.679 296.357 395.846 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
296.933 396.038 mo
296.741 395.981 296.549 395.918 296.357 395.846 cv
296.305 395.679 296.258 395.504 296.218 395.323 cv
296.425 395.384 296.631 395.437 296.835 395.483 cv
296.861 395.675 296.893 395.859 296.933 396.038 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
297.549 396.197 mo
297.345 396.151 297.139 396.098 296.933 396.038 cv
296.893 395.859 296.861 395.675 296.835 395.483 cv
297.058 395.533 297.278 395.575 297.492 395.61 cv
297.504 395.812 297.523 396.008 297.549 396.197 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
298.207 396.324 mo
297.992 396.289 297.772 396.247 297.549 396.197 cv
297.523 396.008 297.504 395.812 297.492 395.61 cv
297.734 395.649 297.969 395.679 298.192 395.702 cv
298.192 395.738 298.192 395.773 298.192 395.809 cv
298.192 395.985 298.197 396.157 298.207 396.324 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
311.928 400.439 mo
311.845 400.439 311.763 400.435 311.682 400.429 cv
311.601 400.435 311.519 400.439 311.436 400.439 cv
309.241 400.439 306.226 398.268 306.226 398.268 cv
304.343 397.197 301.617 396.495 300.645 396.495 cv
300.182 396.495 299.265 396.495 298.207 396.324 cv
298.197 396.157 298.192 395.985 298.192 395.809 cv
298.192 395.773 298.192 395.738 298.192 395.702 cv
298.947 395.781 299.574 395.781 299.93 395.781 cv
300.903 395.781 303.629 396.483 305.512 397.554 cv
305.512 397.554 308.527 399.724 310.722 399.724 cv
310.805 399.724 310.887 399.721 310.968 399.715 cv
311.049 399.721 311.131 399.724 311.214 399.724 cv
313.409 399.725 316.423 397.554 316.423 397.554 cv
317.007 397.222 317.672 396.93 318.342 396.68 cv
319.829 396.12 321.334 395.781 322.005 395.781 cv
323.55 395.781 330.173 395.781 330.173 389.38 cv
330.173 386.765 329.031 384.665 327.679 383.097 cv
327.913 383.348 328.148 383.583 328.379 383.795 cv
328.384 383.8 328.388 383.805 328.392 383.81 cv
329.744 385.379 330.887 387.479 330.887 390.094 cv
330.887 396.495 324.264 396.495 322.72 396.495 cv
322.048 396.495 320.543 396.835 319.056 397.394 cv
318.387 397.645 317.721 397.936 317.137 398.268 cv
317.137 398.268 314.124 400.439 311.928 400.439 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
315.23 353.309 mo
315.112 353.206 314.991 353.108 314.871 353.017 cv
314.754 352.87 314.636 352.73 314.516 352.595 cv
314.759 352.807 314.996 353.046 315.23 353.309 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
315.585 353.732 mo
315.466 353.642 315.345 353.559 315.224 353.483 cv
315.108 353.322 314.99 353.167 314.871 353.017 cv
314.991 353.108 315.112 353.206 315.23 353.309 cv
315.35 353.444 315.468 353.585 315.585 353.732 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
315.939 354.198 mo
315.819 354.123 315.698 354.054 315.576 353.993 cv
315.46 353.817 315.343 353.647 315.224 353.483 cv
315.345 353.559 315.466 353.642 315.585 353.732 cv
315.704 353.881 315.822 354.037 315.939 354.198 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
316.29 354.707 mo
316.17 354.646 316.048 354.593 315.926 354.546 cv
315.811 354.356 315.694 354.172 315.576 353.993 cv
315.698 354.054 315.819 354.123 315.939 354.198 cv
316.057 354.361 316.174 354.532 316.29 354.707 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
316.64 355.26 mo
316.52 355.214 316.397 355.175 316.275 355.143 cv
316.16 354.938 316.044 354.739 315.926 354.546 cv
316.048 354.593 316.17 354.646 316.29 354.707 cv
316.408 354.886 316.525 355.07 316.64 355.26 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
316.989 355.857 mo
316.867 355.825 316.745 355.801 316.622 355.783 cv
316.507 355.565 316.392 355.351 316.275 355.143 cv
316.397 355.175 316.52 355.214 316.64 355.26 cv
316.758 355.454 316.874 355.652 316.989 355.857 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
317.336 356.498 mo
317.214 356.481 317.091 356.471 316.967 356.468 cv
316.853 356.235 316.738 356.007 316.622 355.783 cv
316.745 355.801 316.867 355.825 316.989 355.857 cv
317.106 356.065 317.222 356.279 317.336 356.498 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
317.396 357.196 mo
317.308 357.19 li
317.196 356.945 317.082 356.704 316.967 356.468 cv
317.091 356.471 317.214 356.481 317.336 356.498 cv
317.452 356.721 317.568 356.949 317.681 357.183 cv
317.66 357.182 317.639 357.182 317.619 357.182 cv
317.426 357.194 li
317.396 357.196 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
325.913 381.291 mo
325.681 381.042 325.445 380.808 325.21 380.589 cv
325.206 380.585 325.202 380.58 325.198 380.576 cv
324.037 379.235 322.974 377.515 322.686 376.006 cv
321.784 371.28 319.952 362.98 317.308 357.19 cv
317.396 357.196 li
317.426 357.194 li
317.619 357.182 li
317.639 357.182 317.66 357.182 317.681 357.183 cv
320.509 362.984 322.46 371.795 323.4 376.721 cv
323.688 378.23 324.752 379.95 325.913 381.291 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
293.741 394.062 mo
293.486 393.85 293.245 393.613 293.026 393.347 cv
293.161 393.458 293.3 393.562 293.443 393.66 cv
293.537 393.801 293.637 393.934 293.741 394.062 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
327.352 382.731 mo
327.351 382.73 327.349 382.729 327.348 382.727 cv
327.345 382.724 327.343 382.721 327.34 382.718 cv
327.344 382.723 327.348 382.727 327.352 382.731 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
327.348 382.727 mo
327.263 382.648 327.178 382.571 327.093 382.495 cv
327.047 382.455 327.001 382.413 326.955 382.371 cv
326.85 382.25 326.745 382.132 326.638 382.017 cv
326.873 382.235 327.108 382.469 327.34 382.718 cv
327.343 382.721 327.345 382.724 327.348 382.727 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
314.516 352.595 mo
314.397 352.491 314.277 352.394 314.156 352.303 cv
314.039 352.156 313.921 352.015 313.801 351.88 cv
314.044 352.092 314.282 352.332 314.516 352.595 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
294.157 394.374 mo
294.015 394.277 293.876 394.173 293.741 394.062 cv
293.637 393.934 293.537 393.801 293.443 393.66 cv
293.591 393.761 293.743 393.855 293.898 393.943 cv
293.979 394.093 294.065 394.237 294.157 394.374 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
327.67 383.085 mo
327.668 383.084 327.666 383.082 327.665 383.081 cv
327.559 382.966 327.453 382.848 327.348 382.727 cv
327.349 382.729 327.351 382.73 327.352 382.731 cv
327.459 382.846 327.565 382.964 327.67 383.085 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
327.665 383.081 mo
327.433 382.868 327.198 382.633 326.964 382.381 cv
326.961 382.378 326.958 382.374 326.955 382.371 cv
327.001 382.413 327.047 382.455 327.093 382.495 cv
327.178 382.571 327.263 382.648 327.348 382.727 cv
327.453 382.848 327.559 382.966 327.665 383.081 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
294.613 394.657 mo
294.458 394.57 294.306 394.476 294.157 394.374 cv
294.065 394.237 293.979 394.093 293.898 393.943 cv
294.061 394.034 294.226 394.118 294.394 394.195 cv
294.461 394.356 294.534 394.51 294.613 394.657 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
327.679 383.097 mo
327.674 383.091 327.67 383.086 327.665 383.081 cv
327.666 383.082 327.668 383.084 327.67 383.085 cv
327.673 383.089 327.676 383.093 327.679 383.097 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
295.108 394.91 mo
294.94 394.833 294.775 394.749 294.613 394.657 cv
294.534 394.51 294.461 394.356 294.394 394.195 cv
294.57 394.277 294.749 394.351 294.929 394.418 cv
294.982 394.589 295.042 394.753 295.108 394.91 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
295.643 395.132 mo
295.464 395.065 295.284 394.991 295.108 394.91 cv
295.042 394.753 294.982 394.589 294.929 394.418 cv
295.12 394.489 295.312 394.552 295.504 394.609 cv
295.544 394.79 295.59 394.965 295.643 395.132 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
296.218 395.323 mo
296.027 395.267 295.835 395.203 295.643 395.132 cv
295.59 394.965 295.544 394.79 295.504 394.609 cv
295.711 394.67 295.917 394.723 296.12 394.768 cv
296.146 394.96 296.179 395.145 296.218 395.323 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
296.835 395.483 mo
296.631 395.437 296.425 395.384 296.218 395.323 cv
296.179 395.145 296.146 394.96 296.12 394.768 cv
296.344 394.819 296.564 394.861 296.778 394.895 cv
296.79 395.098 296.809 395.294 296.835 395.483 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
297.492 395.61 mo
297.278 395.575 297.058 395.533 296.835 395.483 cv
296.809 395.294 296.79 395.098 296.778 394.895 cv
297.02 394.935 297.255 394.965 297.478 394.988 cv
297.478 395.023 297.478 395.059 297.478 395.094 cv
297.478 395.271 297.483 395.443 297.492 395.61 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
298.192 395.702 mo
297.969 395.679 297.734 395.649 297.492 395.61 cv
297.483 395.443 297.478 395.271 297.478 395.094 cv
297.478 395.059 297.478 395.023 297.478 394.988 cv
297.745 395.016 297.996 395.034 298.225 395.046 cv
298.206 395.261 298.195 395.48 298.192 395.702 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
311.214 399.724 mo
311.131 399.724 311.049 399.721 310.968 399.715 cv
310.887 399.721 310.805 399.724 310.722 399.724 cv
308.527 399.724 305.512 397.554 305.512 397.554 cv
303.629 396.483 300.903 395.781 299.93 395.781 cv
299.574 395.781 298.947 395.781 298.192 395.702 cv
298.195 395.48 298.206 395.261 298.225 395.046 cv
298.642 395.067 298.986 395.067 299.216 395.067 cv
300.189 395.067 302.915 395.769 304.798 396.84 cv
304.798 396.84 307.812 399.01 310.008 399.01 cv
310.091 399.01 310.173 399.007 310.254 399 cv
310.334 399.007 310.416 399.01 310.5 399.01 cv
312.695 399.01 315.709 396.84 315.709 396.84 cv
316.292 396.507 316.958 396.216 317.628 395.966 cv
319.115 395.406 320.62 395.067 321.291 395.067 cv
322.836 395.067 329.458 395.067 329.458 388.666 cv
329.458 386.05 328.316 383.95 326.964 382.381 cv
327.198 382.633 327.433 382.868 327.665 383.081 cv
327.67 383.086 327.674 383.091 327.679 383.097 cv
329.031 384.665 330.173 386.765 330.173 389.38 cv
330.173 395.781 323.55 395.781 322.005 395.781 cv
321.334 395.781 319.829 396.12 318.342 396.68 cv
317.672 396.93 317.007 397.222 316.423 397.554 cv
316.423 397.554 313.409 399.725 311.214 399.724 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
314.871 353.017 mo
314.751 352.928 314.631 352.845 314.51 352.769 cv
314.393 352.608 314.275 352.452 314.156 352.303 cv
314.277 352.394 314.397 352.491 314.516 352.595 cv
314.636 352.73 314.754 352.87 314.871 353.017 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
315.224 353.483 mo
315.104 353.408 314.983 353.34 314.862 353.278 cv
314.746 353.103 314.628 352.933 314.51 352.769 cv
314.631 352.845 314.751 352.928 314.871 353.017 cv
314.99 353.167 315.108 353.322 315.224 353.483 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
315.576 353.993 mo
315.456 353.932 315.334 353.878 315.212 353.832 cv
315.096 353.642 314.98 353.457 314.862 353.278 cv
314.983 353.34 315.104 353.408 315.224 353.483 cv
315.343 353.647 315.46 353.817 315.576 353.993 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
315.926 354.546 mo
315.805 354.5 315.683 354.46 315.56 354.428 cv
315.445 354.224 315.329 354.025 315.212 353.832 cv
315.334 353.878 315.456 353.932 315.576 353.993 cv
315.694 354.172 315.811 354.356 315.926 354.546 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
316.275 355.143 mo
316.153 355.111 316.031 355.087 315.907 355.069 cv
315.793 354.85 315.677 354.637 315.56 354.428 cv
315.683 354.46 315.805 354.5 315.926 354.546 cv
316.044 354.739 316.16 354.938 316.275 355.143 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
316.622 355.783 mo
316.499 355.766 316.377 355.756 316.253 355.754 cv
316.139 355.521 316.024 355.292 315.907 355.069 cv
316.031 355.087 316.153 355.111 316.275 355.143 cv
316.392 355.351 316.507 355.565 316.622 355.783 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
316.682 356.481 mo
316.593 356.476 li
316.481 356.231 316.367 355.989 316.253 355.754 cv
316.377 355.756 316.499 355.766 316.622 355.783 cv
316.738 356.007 316.853 356.235 316.967 356.468 cv
316.946 356.468 316.925 356.468 316.904 356.468 cv
316.711 356.479 li
316.682 356.481 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
316.911 357.193 mo
316.807 356.95 316.701 356.711 316.593 356.476 cv
316.682 356.481 li
316.711 356.479 li
316.904 356.468 li
316.925 356.468 316.946 356.468 316.967 356.468 cv
317.082 356.704 317.196 356.945 317.308 357.19 cv
317.174 357.182 li
317.086 357.182 316.998 357.186 316.911 357.193 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
325.198 380.576 mo
324.966 380.327 324.73 380.093 324.495 379.874 cv
324.491 379.87 324.487 379.866 324.483 379.861 cv
323.323 378.52 322.259 376.801 321.971 375.292 cv
321.106 370.758 319.385 362.934 316.911 357.193 cv
316.998 357.186 317.086 357.182 317.174 357.182 cv
317.308 357.19 li
319.952 362.98 321.784 371.28 322.686 376.006 cv
322.974 377.515 324.037 379.235 325.198 380.576 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
293.026 393.347 mo
292.771 393.136 292.531 392.899 292.313 392.633 cv
292.447 392.744 292.586 392.848 292.728 392.945 cv
292.823 393.086 292.922 393.22 293.026 393.347 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
326.638 382.017 mo
326.637 382.016 326.635 382.014 326.634 382.013 cv
326.632 382.011 326.629 382.008 326.627 382.005 cv
326.631 382.009 326.634 382.013 326.638 382.017 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
326.634 382.013 mo
326.549 381.934 326.463 381.856 326.378 381.781 cv
326.333 381.74 326.287 381.699 326.241 381.657 cv
326.136 381.535 326.03 381.417 325.923 381.302 cv
326.159 381.522 326.395 381.756 326.627 382.005 cv
326.629 382.008 326.632 382.011 326.634 382.013 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
293.443 393.66 mo
293.3 393.562 293.161 393.458 293.026 393.347 cv
292.922 393.22 292.823 393.086 292.728 392.945 cv
292.877 393.047 293.029 393.141 293.184 393.228 cv
293.265 393.379 293.351 393.523 293.443 393.66 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
326.955 382.371 mo
326.954 382.37 326.952 382.368 326.951 382.367 cv
326.845 382.252 326.739 382.134 326.634 382.013 cv
326.635 382.014 326.637 382.016 326.638 382.017 cv
326.745 382.132 326.85 382.25 326.955 382.371 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
326.951 382.367 mo
326.719 382.154 326.484 381.919 326.25 381.667 cv
326.247 381.663 326.244 381.66 326.241 381.657 cv
326.287 381.699 326.333 381.74 326.378 381.781 cv
326.463 381.856 326.549 381.934 326.634 382.013 cv
326.739 382.134 326.845 382.252 326.951 382.367 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
293.898 393.943 mo
293.743 393.855 293.591 393.761 293.443 393.66 cv
293.351 393.523 293.265 393.379 293.184 393.228 cv
293.346 393.32 293.512 393.404 293.679 393.481 cv
293.746 393.642 293.82 393.796 293.898 393.943 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
326.964 382.381 mo
326.959 382.376 326.955 382.372 326.951 382.367 cv
326.952 382.368 326.954 382.37 326.955 382.371 cv
326.958 382.374 326.961 382.378 326.964 382.381 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
294.394 394.195 mo
294.226 394.118 294.061 394.034 293.898 393.943 cv
293.82 393.796 293.746 393.642 293.679 393.481 cv
293.856 393.563 294.035 393.636 294.214 393.703 cv
294.268 393.874 294.328 394.038 294.394 394.195 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
294.929 394.418 mo
294.749 394.351 294.57 394.277 294.394 394.195 cv
294.328 394.038 294.268 393.874 294.214 393.703 cv
294.406 393.775 294.598 393.838 294.79 393.895 cv
294.83 394.076 294.876 394.25 294.929 394.418 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
295.504 394.609 mo
295.312 394.552 295.12 394.489 294.929 394.418 cv
294.876 394.25 294.83 394.076 294.79 393.895 cv
294.996 393.956 295.203 394.008 295.406 394.054 cv
295.432 394.246 295.465 394.431 295.504 394.609 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
296.12 394.768 mo
295.917 394.723 295.711 394.67 295.504 394.609 cv
295.465 394.431 295.432 394.246 295.406 394.054 cv
295.629 394.104 295.85 394.146 296.064 394.181 cv
296.076 394.384 296.095 394.579 296.12 394.768 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
296.778 394.895 mo
296.564 394.861 296.344 394.819 296.12 394.768 cv
296.095 394.579 296.076 394.384 296.064 394.181 cv
296.306 394.22 296.54 394.25 296.764 394.274 cv
296.763 394.309 296.763 394.345 296.763 394.38 cv
296.763 394.557 296.768 394.728 296.778 394.895 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
297.478 394.988 mo
297.255 394.965 297.02 394.935 296.778 394.895 cv
296.768 394.728 296.763 394.557 296.763 394.38 cv
296.763 394.345 296.763 394.309 296.764 394.274 cv
297.031 394.302 297.282 394.32 297.51 394.331 cv
297.492 394.547 297.481 394.765 297.478 394.988 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
298.225 395.046 mo
297.996 395.034 297.745 395.016 297.478 394.988 cv
297.481 394.765 297.492 394.547 297.51 394.331 cv
297.826 394.347 298.099 394.351 298.313 394.352 cv
298.275 394.579 298.245 394.81 298.225 395.046 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
310.5 399.01 mo
310.416 399.01 310.334 399.007 310.254 399 cv
310.173 399.007 310.091 399.01 310.008 399.01 cv
307.812 399.01 304.798 396.84 304.798 396.84 cv
302.915 395.769 300.189 395.067 299.216 395.067 cv
298.986 395.067 298.642 395.067 298.225 395.046 cv
298.245 394.81 298.275 394.579 298.313 394.352 cv
298.382 394.353 298.445 394.353 298.502 394.353 cv
299.475 394.353 302.201 395.054 304.083 396.125 cv
304.083 396.125 307.098 398.296 309.293 398.296 cv
309.377 398.296 309.459 398.293 309.539 398.286 cv
309.62 398.293 309.702 398.296 309.785 398.296 cv
311.981 398.296 314.994 396.125 314.994 396.125 cv
315.578 395.793 316.244 395.502 316.913 395.251 cv
318.401 394.692 319.905 394.353 320.577 394.353 cv
322.122 394.353 328.744 394.353 328.744 387.951 cv
328.744 385.336 327.602 383.236 326.25 381.667 cv
326.484 381.919 326.719 382.154 326.951 382.367 cv
326.955 382.372 326.959 382.376 326.964 382.381 cv
328.316 383.95 329.458 386.05 329.458 388.666 cv
329.458 395.067 322.836 395.067 321.291 395.067 cv
320.62 395.067 319.115 395.406 317.628 395.966 cv
316.958 396.216 316.292 396.507 315.709 396.84 cv
315.709 396.84 312.695 399.01 310.5 399.01 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
313.801 351.88 mo
313.682 351.776 313.563 351.679 313.442 351.589 cv
313.325 351.442 313.207 351.301 313.088 351.167 cv
313.33 351.379 313.567 351.617 313.801 351.88 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
314.156 352.303 mo
314.037 352.214 313.917 352.131 313.796 352.055 cv
313.679 351.893 313.561 351.738 313.442 351.589 cv
313.563 351.679 313.682 351.776 313.801 351.88 cv
313.921 352.015 314.039 352.156 314.156 352.303 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
314.51 352.769 mo
314.39 352.694 314.269 352.626 314.147 352.564 cv
314.031 352.389 313.914 352.219 313.796 352.055 cv
313.917 352.131 314.037 352.214 314.156 352.303 cv
314.275 352.452 314.393 352.608 314.51 352.769 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
314.862 353.278 mo
314.741 353.218 314.62 353.164 314.497 353.117 cv
314.382 352.927 314.265 352.743 314.147 352.564 cv
314.269 352.626 314.39 352.694 314.51 352.769 cv
314.628 352.933 314.746 353.103 314.862 353.278 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
315.212 353.832 mo
315.091 353.786 314.969 353.746 314.846 353.714 cv
314.731 353.51 314.615 353.311 314.497 353.117 cv
314.62 353.164 314.741 353.218 314.862 353.278 cv
314.98 353.457 315.096 353.642 315.212 353.832 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
315.56 354.428 mo
315.439 354.397 315.316 354.372 315.193 354.355 cv
315.079 354.136 314.963 353.922 314.846 353.714 cv
314.969 353.746 315.091 353.786 315.212 353.832 cv
315.329 354.025 315.445 354.224 315.56 354.428 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
315.907 355.069 mo
315.785 355.052 315.662 355.042 315.538 355.04 cv
315.425 354.806 315.31 354.578 315.193 354.355 cv
315.316 354.372 315.439 354.397 315.56 354.428 cv
315.677 354.637 315.793 354.85 315.907 355.069 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
315.968 355.767 mo
315.879 355.762 li
315.767 355.517 315.653 355.275 315.538 355.04 cv
315.662 355.042 315.785 355.052 315.907 355.069 cv
316.024 355.292 316.139 355.521 316.253 355.754 cv
316.232 355.753 316.211 355.753 316.19 355.753 cv
315.997 355.765 li
315.968 355.767 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
316.197 356.479 mo
316.092 356.236 315.986 355.997 315.879 355.762 cv
315.968 355.767 li
315.997 355.765 li
316.19 355.753 li
316.211 355.753 316.232 355.753 316.253 355.754 cv
316.367 355.989 316.481 356.231 316.593 356.476 cv
316.46 356.468 li
316.372 356.468 316.284 356.471 316.197 356.479 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
316.52 357.251 mo
316.414 356.99 316.306 356.733 316.197 356.479 cv
316.284 356.471 316.372 356.468 316.46 356.468 cv
316.593 356.476 li
316.701 356.711 316.807 356.95 316.911 357.193 cv
316.78 357.204 316.65 357.224 316.52 357.251 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
324.483 379.861 mo
324.251 379.612 324.016 379.378 323.781 379.16 cv
323.777 379.155 323.773 379.151 323.769 379.147 cv
322.609 377.806 321.545 376.087 321.257 374.578 cv
320.43 370.244 318.821 362.904 316.52 357.251 cv
316.65 357.224 316.78 357.204 316.911 357.193 cv
319.385 362.934 321.106 370.758 321.971 375.292 cv
322.259 376.801 323.323 378.52 324.483 379.861 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
292.313 392.633 mo
292.057 392.422 291.817 392.185 291.598 391.918 cv
291.733 392.03 291.872 392.134 292.014 392.231 cv
292.108 392.372 292.208 392.506 292.313 392.633 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
325.923 381.302 mo
325.922 381.301 325.921 381.3 325.92 381.299 cv
325.917 381.296 325.915 381.294 325.913 381.291 cv
325.916 381.295 325.92 381.299 325.923 381.302 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
313.088 351.167 mo
312.969 351.063 312.849 350.965 312.728 350.875 cv
312.611 350.728 312.493 350.587 312.373 350.452 cv
312.616 350.664 312.854 350.903 313.088 351.167 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
325.92 381.299 mo
325.834 381.22 325.749 381.142 325.664 381.067 cv
325.618 381.026 325.573 380.985 325.527 380.942 cv
325.422 380.821 325.316 380.704 325.21 380.589 cv
325.445 380.808 325.681 381.042 325.913 381.291 cv
325.915 381.294 325.917 381.296 325.92 381.299 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
292.728 392.945 mo
292.586 392.848 292.447 392.744 292.313 392.633 cv
292.208 392.506 292.108 392.372 292.014 392.231 cv
292.163 392.333 292.315 392.427 292.47 392.514 cv
292.55 392.665 292.637 392.808 292.728 392.945 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
326.241 381.657 mo
326.239 381.655 326.238 381.654 326.236 381.653 cv
326.13 381.538 326.025 381.42 325.92 381.299 cv
325.921 381.3 325.922 381.301 325.923 381.302 cv
326.03 381.417 326.136 381.535 326.241 381.657 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
313.442 351.589 mo
313.323 351.499 313.203 351.416 313.081 351.34 cv
312.965 351.179 312.847 351.024 312.728 350.875 cv
312.849 350.965 312.969 351.063 313.088 351.167 cv
313.207 351.301 313.325 351.442 313.442 351.589 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
326.236 381.653 mo
326.005 381.44 325.77 381.205 325.536 380.953 cv
325.533 380.949 325.53 380.946 325.527 380.942 cv
325.573 380.985 325.618 381.026 325.664 381.067 cv
325.749 381.142 325.834 381.22 325.92 381.299 cv
326.025 381.42 326.13 381.538 326.236 381.653 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
293.184 393.228 mo
293.029 393.141 292.877 393.047 292.728 392.945 cv
292.637 392.808 292.55 392.665 292.47 392.514 cv
292.632 392.605 292.798 392.69 292.965 392.767 cv
293.032 392.928 293.105 393.081 293.184 393.228 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
326.25 381.667 mo
326.245 381.662 326.241 381.657 326.236 381.653 cv
326.238 381.654 326.239 381.655 326.241 381.657 cv
326.244 381.66 326.247 381.663 326.25 381.667 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
313.796 352.055 mo
313.676 351.98 313.555 351.911 313.433 351.85 cv
313.317 351.674 313.2 351.504 313.081 351.34 cv
313.203 351.416 313.323 351.499 313.442 351.589 cv
313.561 351.738 313.679 351.893 313.796 352.055 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
293.679 393.481 mo
293.512 393.404 293.346 393.32 293.184 393.228 cv
293.105 393.081 293.032 392.928 292.965 392.767 cv
293.142 392.848 293.32 392.922 293.5 392.989 cv
293.554 393.16 293.614 393.324 293.679 393.481 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
294.214 393.703 mo
294.035 393.636 293.856 393.563 293.679 393.481 cv
293.614 393.324 293.554 393.16 293.5 392.989 cv
293.691 393.06 293.884 393.124 294.076 393.18 cv
294.115 393.362 294.162 393.536 294.214 393.703 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
294.79 393.895 mo
294.598 393.838 294.406 393.775 294.214 393.703 cv
294.162 393.536 294.115 393.362 294.076 393.18 cv
294.282 393.241 294.488 393.294 294.692 393.34 cv
294.718 393.532 294.751 393.716 294.79 393.895 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
295.406 394.054 mo
295.203 394.008 294.996 393.956 294.79 393.895 cv
294.751 393.716 294.718 393.532 294.692 393.34 cv
294.915 393.39 295.135 393.432 295.35 393.467 cv
295.361 393.67 295.38 393.865 295.406 394.054 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
296.064 394.181 mo
295.85 394.146 295.629 394.104 295.406 394.054 cv
295.38 393.865 295.361 393.67 295.35 393.467 cv
295.591 393.506 295.826 393.536 296.05 393.56 cv
296.049 393.595 296.049 393.63 296.049 393.666 cv
296.049 393.842 296.054 394.014 296.064 394.181 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
296.764 394.274 mo
296.54 394.25 296.306 394.22 296.064 394.181 cv
296.054 394.014 296.049 393.842 296.049 393.666 cv
296.049 393.63 296.049 393.595 296.05 393.56 cv
296.316 393.587 296.567 393.605 296.796 393.617 cv
296.777 393.832 296.766 394.051 296.764 394.274 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
297.51 394.331 mo
297.282 394.32 297.031 394.302 296.764 394.274 cv
296.766 394.051 296.777 393.832 296.796 393.617 cv
297.111 393.633 297.384 393.637 297.598 393.638 cv
297.56 393.865 297.531 394.096 297.51 394.331 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
298.313 394.352 mo
298.099 394.351 297.826 394.347 297.51 394.331 cv
297.531 394.096 297.56 393.865 297.598 393.638 cv
297.668 393.638 297.731 393.638 297.788 393.638 cv
297.958 393.638 298.183 393.66 298.448 393.701 cv
298.395 393.914 298.35 394.131 298.313 394.352 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
309.785 398.296 mo
309.702 398.296 309.62 398.293 309.539 398.286 cv
309.459 398.293 309.377 398.296 309.293 398.296 cv
307.098 398.296 304.083 396.125 304.083 396.125 cv
302.201 395.054 299.475 394.353 298.502 394.353 cv
298.445 394.353 298.382 394.353 298.313 394.352 cv
298.35 394.131 298.395 393.914 298.448 393.701 cv
299.691 393.896 301.817 394.528 303.369 395.411 cv
303.369 395.411 306.384 397.581 308.579 397.581 cv
308.662 397.581 308.744 397.578 308.825 397.572 cv
308.906 397.578 308.988 397.581 309.071 397.581 cv
311.266 397.582 314.28 395.411 314.28 395.411 cv
314.864 395.079 315.529 394.787 316.199 394.537 cv
317.686 393.977 319.191 393.638 319.863 393.638 cv
321.407 393.638 328.03 393.638 328.03 387.237 cv
328.03 384.622 326.887 382.522 325.536 380.953 cv
325.77 381.205 326.005 381.44 326.236 381.653 cv
326.241 381.657 326.245 381.662 326.25 381.667 cv
327.602 383.236 328.744 385.336 328.744 387.951 cv
328.744 394.353 322.122 394.353 320.577 394.353 cv
319.905 394.353 318.401 394.692 316.913 395.251 cv
316.244 395.502 315.578 395.793 314.994 396.125 cv
314.994 396.125 311.981 398.296 309.785 398.296 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
314.147 352.564 mo
314.027 352.504 313.905 352.45 313.783 352.403 cv
313.668 352.213 313.551 352.029 313.433 351.85 cv
313.555 351.911 313.676 351.98 313.796 352.055 cv
313.914 352.219 314.031 352.389 314.147 352.564 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
314.497 353.117 mo
314.377 353.071 314.254 353.032 314.132 353 cv
314.017 352.795 313.901 352.597 313.783 352.403 cv
313.905 352.45 314.027 352.504 314.147 352.564 cv
314.265 352.743 314.382 352.927 314.497 353.117 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
314.846 353.714 mo
314.725 353.683 314.602 353.658 314.479 353.641 cv
314.365 353.422 314.249 353.208 314.132 353 cv
314.254 353.032 314.377 353.071 314.497 353.117 cv
314.615 353.311 314.731 353.51 314.846 353.714 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
315.193 354.355 mo
315.071 354.338 314.948 354.328 314.824 354.325 cv
314.71 354.092 314.595 353.864 314.479 353.641 cv
314.602 353.658 314.725 353.683 314.846 353.714 cv
314.963 353.922 315.079 354.136 315.193 354.355 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
315.254 355.053 mo
315.165 355.047 li
315.053 354.802 314.939 354.561 314.824 354.325 cv
314.948 354.328 315.071 354.338 315.193 354.355 cv
315.31 354.578 315.425 354.806 315.538 355.04 cv
315.518 355.039 315.497 355.039 315.476 355.039 cv
315.283 355.051 li
315.254 355.053 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
315.483 355.764 mo
315.378 355.522 315.272 355.282 315.165 355.047 cv
315.254 355.053 li
315.283 355.051 li
315.476 355.039 li
315.497 355.039 315.518 355.039 315.538 355.04 cv
315.653 355.275 315.767 355.517 315.879 355.762 cv
315.746 355.753 li
315.658 355.753 315.57 355.757 315.483 355.764 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
315.806 356.537 mo
315.7 356.276 315.592 356.018 315.483 355.764 cv
315.57 355.757 315.658 355.753 315.746 355.753 cv
315.879 355.762 li
315.986 355.997 316.092 356.236 316.197 356.479 cv
316.066 356.49 315.936 356.509 315.806 356.537 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
316.131 357.359 mo
316.025 357.082 315.916 356.807 315.806 356.537 cv
315.936 356.509 316.066 356.49 316.197 356.479 cv
316.306 356.733 316.414 356.99 316.52 357.251 cv
316.39 357.279 316.26 357.315 316.131 357.359 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
323.769 379.147 mo
323.537 378.898 323.301 378.664 323.066 378.445 cv
323.063 378.441 323.059 378.437 323.055 378.433 cv
321.894 377.092 320.831 375.372 320.543 373.863 cv
319.755 369.737 318.259 362.885 316.131 357.359 cv
316.26 357.315 316.39 357.279 316.52 357.251 cv
318.821 362.904 320.43 370.244 321.257 374.578 cv
321.545 376.087 322.609 377.806 323.769 379.147 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
291.598 391.918 mo
291.342 391.707 291.103 391.47 290.884 391.204 cv
291.019 391.316 291.157 391.42 291.3 391.517 cv
291.394 391.658 291.494 391.791 291.598 391.918 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
325.21 380.589 mo
325.208 380.588 325.207 380.586 325.206 380.585 cv
325.203 380.582 325.2 380.579 325.198 380.576 cv
325.202 380.58 325.206 380.585 325.21 380.589 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
325.206 380.585 mo
325.12 380.505 325.035 380.428 324.95 380.352 cv
324.904 380.312 324.859 380.271 324.813 380.229 cv
324.708 380.107 324.602 379.989 324.495 379.874 cv
324.73 380.093 324.966 380.327 325.198 380.576 cv
325.2 380.579 325.203 380.582 325.206 380.585 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
292.014 392.231 mo
291.872 392.134 291.733 392.03 291.598 391.918 cv
291.494 391.791 291.394 391.658 291.3 391.517 cv
291.448 391.618 291.601 391.712 291.756 391.8 cv
291.836 391.95 291.923 392.094 292.014 392.231 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
325.527 380.942 mo
325.525 380.941 325.523 380.94 325.522 380.938 cv
325.416 380.824 325.31 380.706 325.206 380.585 cv
325.207 380.586 325.208 380.588 325.21 380.589 cv
325.316 380.704 325.422 380.821 325.527 380.942 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
325.522 380.938 mo
325.291 380.725 325.056 380.491 324.822 380.239 cv
324.819 380.236 324.816 380.232 324.813 380.229 cv
324.859 380.271 324.904 380.312 324.95 380.352 cv
325.035 380.428 325.12 380.505 325.206 380.585 cv
325.31 380.706 325.416 380.824 325.522 380.938 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
292.47 392.514 mo
292.315 392.427 292.163 392.333 292.014 392.231 cv
291.923 392.094 291.836 391.95 291.756 391.8 cv
291.918 391.891 292.083 391.975 292.251 392.053 cv
292.318 392.213 292.391 392.367 292.47 392.514 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
325.536 380.953 mo
325.531 380.948 325.526 380.943 325.522 380.938 cv
325.523 380.94 325.525 380.941 325.527 380.942 cv
325.53 380.946 325.533 380.949 325.536 380.953 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
292.965 392.767 mo
292.798 392.69 292.632 392.605 292.47 392.514 cv
292.391 392.367 292.318 392.213 292.251 392.053 cv
292.427 392.134 292.606 392.208 292.786 392.275 cv
292.839 392.446 292.899 392.61 292.965 392.767 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
293.5 392.989 mo
293.32 392.922 293.142 392.848 292.965 392.767 cv
292.899 392.61 292.839 392.446 292.786 392.275 cv
292.977 392.346 293.169 392.41 293.361 392.466 cv
293.401 392.647 293.448 392.822 293.5 392.989 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
294.076 393.18 mo
293.884 393.124 293.691 393.06 293.5 392.989 cv
293.448 392.822 293.401 392.647 293.361 392.466 cv
293.568 392.527 293.774 392.58 293.978 392.626 cv
294.004 392.817 294.036 393.002 294.076 393.18 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
294.692 393.34 mo
294.488 393.294 294.282 393.241 294.076 393.18 cv
294.036 393.002 294.004 392.817 293.978 392.626 cv
294.201 392.676 294.421 392.718 294.635 392.752 cv
294.647 392.955 294.666 393.151 294.692 393.34 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
295.35 393.467 mo
295.135 393.432 294.915 393.39 294.692 393.34 cv
294.666 393.151 294.647 392.955 294.635 392.752 cv
294.877 392.792 295.112 392.822 295.335 392.845 cv
295.335 392.88 295.335 392.916 295.335 392.951 cv
295.335 393.128 295.34 393.3 295.35 393.467 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
296.05 393.56 mo
295.826 393.536 295.591 393.506 295.35 393.467 cv
295.34 393.3 295.335 393.128 295.335 392.951 cv
295.335 392.916 295.335 392.88 295.335 392.845 cv
295.602 392.873 295.853 392.891 296.082 392.903 cv
296.063 393.118 296.052 393.337 296.05 393.56 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
296.796 393.617 mo
296.567 393.605 296.316 393.587 296.05 393.56 cv
296.052 393.337 296.063 393.118 296.082 392.903 cv
296.397 392.919 296.67 392.923 296.884 392.924 cv
296.846 393.15 296.816 393.381 296.796 393.617 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
297.598 393.638 mo
297.384 393.637 297.111 393.633 296.796 393.617 cv
296.816 393.381 296.846 393.15 296.884 392.924 cv
296.954 392.924 297.017 392.924 297.073 392.924 cv
297.244 392.924 297.469 392.946 297.734 392.987 cv
297.681 393.2 297.636 393.417 297.598 393.638 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
298.448 393.701 mo
298.183 393.66 297.958 393.638 297.788 393.638 cv
297.731 393.638 297.668 393.638 297.598 393.638 cv
297.636 393.417 297.681 393.2 297.734 392.987 cv
297.989 393.027 298.282 393.086 298.6 393.161 cv
298.544 393.338 298.493 393.518 298.448 393.701 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
309.071 397.581 mo
308.988 397.581 308.906 397.578 308.825 397.572 cv
308.744 397.578 308.662 397.581 308.579 397.581 cv
306.384 397.581 303.369 395.411 303.369 395.411 cv
301.817 394.528 299.691 393.896 298.448 393.701 cv
298.493 393.518 298.544 393.338 298.6 393.161 cv
299.827 393.452 301.422 393.995 302.655 394.697 cv
302.655 394.697 305.669 396.867 307.865 396.867 cv
307.948 396.867 308.03 396.864 308.111 396.858 cv
308.191 396.864 308.274 396.867 308.357 396.867 cv
310.552 396.867 313.566 394.697 313.566 394.697 cv
314.149 394.364 314.815 394.073 315.485 393.823 cv
316.972 393.263 318.477 392.924 319.148 392.924 cv
320.693 392.924 327.315 392.924 327.315 386.523 cv
327.315 383.908 326.173 381.808 324.822 380.239 cv
325.056 380.491 325.291 380.725 325.522 380.938 cv
325.526 380.943 325.531 380.948 325.536 380.953 cv
326.887 382.522 328.03 384.622 328.03 387.237 cv
328.03 393.638 321.407 393.638 319.863 393.638 cv
319.191 393.638 317.686 393.977 316.199 394.537 cv
315.529 394.787 314.864 395.079 314.28 395.411 cv
314.28 395.411 311.266 397.582 309.071 397.581 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
312.373 350.452 mo
312.255 350.349 312.134 350.251 312.014 350.16 cv
311.896 350.013 311.778 349.872 311.659 349.738 cv
311.901 349.95 312.139 350.189 312.373 350.452 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
312.728 350.875 mo
312.609 350.785 312.489 350.702 312.367 350.626 cv
312.251 350.465 312.133 350.309 312.014 350.16 cv
312.134 350.251 312.255 350.349 312.373 350.452 cv
312.493 350.587 312.611 350.728 312.728 350.875 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
313.081 351.34 mo
312.961 351.265 312.84 351.197 312.719 351.136 cv
312.603 350.96 312.485 350.79 312.367 350.626 cv
312.489 350.702 312.609 350.785 312.728 350.875 cv
312.847 351.024 312.965 351.179 313.081 351.34 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
313.433 351.85 mo
313.313 351.789 313.191 351.735 313.069 351.689 cv
312.953 351.499 312.837 351.314 312.719 351.136 cv
312.84 351.197 312.961 351.265 313.081 351.34 cv
313.2 351.504 313.317 351.674 313.433 351.85 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
313.783 352.403 mo
313.662 352.357 313.54 352.318 313.417 352.286 cv
313.302 352.081 313.187 351.882 313.069 351.689 cv
313.191 351.735 313.313 351.789 313.433 351.85 cv
313.551 352.029 313.668 352.213 313.783 352.403 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
314.132 353 mo
314.01 352.968 313.888 352.944 313.764 352.926 cv
313.65 352.708 313.534 352.494 313.417 352.286 cv
313.54 352.318 313.662 352.357 313.783 352.403 cv
313.901 352.597 314.017 352.795 314.132 353 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
314.479 353.641 mo
314.357 353.624 314.234 353.614 314.11 353.611 cv
313.996 353.378 313.881 353.149 313.764 352.926 cv
313.888 352.944 314.01 352.968 314.132 353 cv
314.249 353.208 314.365 353.422 314.479 353.641 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
314.539 354.338 mo
314.45 354.333 li
314.338 354.088 314.225 353.847 314.11 353.611 cv
314.234 353.614 314.357 353.624 314.479 353.641 cv
314.595 353.864 314.71 354.092 314.824 354.325 cv
314.803 354.325 314.782 354.325 314.761 354.325 cv
314.569 354.336 li
314.539 354.338 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
314.768 355.05 mo
314.664 354.807 314.558 354.568 314.45 354.333 cv
314.539 354.338 li
314.569 354.336 li
314.761 354.325 li
314.782 354.325 314.803 354.325 314.824 354.325 cv
314.939 354.561 315.053 354.802 315.165 355.047 cv
315.031 355.039 li
314.943 355.039 314.856 355.043 314.768 355.05 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
315.092 355.823 mo
314.985 355.561 314.878 355.304 314.768 355.05 cv
314.856 355.043 314.943 355.039 315.031 355.039 cv
315.165 355.047 li
315.272 355.282 315.378 355.522 315.483 355.764 cv
315.351 355.776 315.221 355.795 315.092 355.823 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
315.417 356.645 mo
315.31 356.367 315.202 356.093 315.092 355.823 cv
315.221 355.795 315.351 355.776 315.483 355.764 cv
315.592 356.018 315.7 356.276 315.806 356.537 cv
315.676 356.565 315.546 356.601 315.417 356.645 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
315.744 357.516 mo
315.636 357.222 315.528 356.932 315.417 356.645 cv
315.546 356.601 315.676 356.565 315.806 356.537 cv
315.916 356.807 316.025 357.082 316.131 357.359 cv
316.001 357.403 315.872 357.456 315.744 357.516 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
323.055 378.433 mo
322.823 378.184 322.588 377.95 322.353 377.732 cv
322.349 377.727 322.344 377.723 322.34 377.718 cv
321.18 376.377 320.116 374.658 319.828 373.149 cv
319.082 369.237 317.698 362.875 315.744 357.516 cv
315.872 357.456 316.001 357.403 316.131 357.359 cv
318.259 362.885 319.755 369.737 320.543 373.863 cv
320.831 375.372 321.894 377.092 323.055 378.433 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
290.884 391.204 mo
290.628 390.993 290.388 390.756 290.17 390.49 cv
290.304 390.602 290.443 390.705 290.586 390.803 cv
290.68 390.943 290.78 391.077 290.884 391.204 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
324.495 379.874 mo
324.494 379.873 324.492 379.872 324.491 379.87 cv
324.488 379.867 324.486 379.864 324.483 379.861 cv
324.487 379.866 324.491 379.87 324.495 379.874 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
324.491 379.87 mo
324.406 379.791 324.321 379.714 324.236 379.638 cv
324.19 379.598 324.144 379.556 324.098 379.514 cv
323.993 379.392 323.887 379.275 323.781 379.16 cv
324.016 379.378 324.251 379.612 324.483 379.861 cv
324.486 379.864 324.488 379.867 324.491 379.87 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
311.659 349.738 mo
311.54 349.634 311.42 349.536 311.299 349.446 cv
311.182 349.299 311.064 349.158 310.945 349.024 cv
311.187 349.236 311.425 349.474 311.659 349.738 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
291.3 391.517 mo
291.157 391.42 291.019 391.316 290.884 391.204 cv
290.78 391.077 290.68 390.943 290.586 390.803 cv
290.734 390.904 290.886 390.998 291.041 391.086 cv
291.122 391.236 291.208 391.38 291.3 391.517 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
324.813 380.229 mo
324.811 380.227 324.81 380.226 324.808 380.225 cv
324.702 380.11 324.596 379.992 324.491 379.87 cv
324.492 379.872 324.494 379.873 324.495 379.874 cv
324.602 379.989 324.708 380.107 324.813 380.229 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
324.808 380.225 mo
324.577 380.012 324.342 379.777 324.107 379.525 cv
324.104 379.521 324.101 379.517 324.098 379.514 cv
324.144 379.556 324.19 379.598 324.236 379.638 cv
324.321 379.714 324.406 379.791 324.491 379.87 cv
324.596 379.992 324.702 380.11 324.808 380.225 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
291.756 391.8 mo
291.601 391.712 291.448 391.618 291.3 391.517 cv
291.208 391.38 291.122 391.236 291.041 391.086 cv
291.204 391.177 291.369 391.261 291.537 391.338 cv
291.604 391.499 291.677 391.653 291.756 391.8 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
324.822 380.239 mo
324.817 380.234 324.813 380.229 324.808 380.225 cv
324.81 380.226 324.811 380.227 324.813 380.229 cv
324.816 380.232 324.819 380.236 324.822 380.239 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
292.251 392.053 mo
292.083 391.975 291.918 391.891 291.756 391.8 cv
291.677 391.653 291.604 391.499 291.537 391.338 cv
291.713 391.42 291.892 391.494 292.072 391.561 cv
292.125 391.731 292.185 391.895 292.251 392.053 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
292.786 392.275 mo
292.606 392.208 292.427 392.134 292.251 392.053 cv
292.185 391.895 292.125 391.731 292.072 391.561 cv
292.263 391.632 292.455 391.695 292.647 391.752 cv
292.687 391.933 292.733 392.107 292.786 392.275 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
293.361 392.466 mo
293.169 392.41 292.977 392.346 292.786 392.275 cv
292.733 392.107 292.687 391.933 292.647 391.752 cv
292.854 391.813 293.06 391.866 293.263 391.911 cv
293.289 392.103 293.322 392.288 293.361 392.466 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
293.978 392.626 mo
293.774 392.58 293.568 392.527 293.361 392.466 cv
293.322 392.288 293.289 392.103 293.263 391.911 cv
293.487 391.962 293.707 392.003 293.921 392.038 cv
293.933 392.241 293.952 392.437 293.978 392.626 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
294.635 392.752 mo
294.421 392.718 294.201 392.676 293.978 392.626 cv
293.952 392.437 293.933 392.241 293.921 392.038 cv
294.163 392.077 294.398 392.108 294.621 392.131 cv
294.621 392.166 294.62 392.202 294.62 392.237 cv
294.62 392.414 294.625 392.585 294.635 392.752 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
295.335 392.845 mo
295.112 392.822 294.877 392.792 294.635 392.752 cv
294.625 392.585 294.62 392.414 294.62 392.237 cv
294.62 392.202 294.621 392.166 294.621 392.131 cv
294.888 392.159 295.139 392.177 295.367 392.189 cv
295.349 392.404 295.338 392.622 295.335 392.845 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
296.082 392.903 mo
295.853 392.891 295.602 392.873 295.335 392.845 cv
295.338 392.622 295.349 392.404 295.367 392.189 cv
295.683 392.205 295.956 392.209 296.17 392.21 cv
296.132 392.436 296.102 392.667 296.082 392.903 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
296.884 392.924 mo
296.67 392.923 296.397 392.919 296.082 392.903 cv
296.102 392.667 296.132 392.436 296.17 392.21 cv
296.239 392.21 296.302 392.21 296.359 392.21 cv
296.53 392.21 296.754 392.231 297.019 392.273 cv
296.967 392.485 296.921 392.703 296.884 392.924 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
297.734 392.987 mo
297.469 392.946 297.244 392.924 297.073 392.924 cv
297.017 392.924 296.954 392.924 296.884 392.924 cv
296.921 392.703 296.967 392.485 297.019 392.273 cv
297.275 392.313 297.568 392.371 297.886 392.447 cv
297.83 392.624 297.779 392.804 297.734 392.987 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
298.6 393.161 mo
298.282 393.086 297.989 393.027 297.734 392.987 cv
297.779 392.804 297.83 392.624 297.886 392.447 cv
298.163 392.513 298.46 392.592 298.766 392.682 cv
298.707 392.839 298.651 392.999 298.6 393.161 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
308.357 396.867 mo
308.274 396.867 308.191 396.864 308.111 396.858 cv
308.03 396.864 307.948 396.867 307.865 396.867 cv
305.669 396.867 302.655 394.697 302.655 394.697 cv
301.422 393.995 299.827 393.452 298.6 393.161 cv
298.651 392.999 298.707 392.839 298.766 392.682 cv
299.816 392.992 300.986 393.44 301.941 393.983 cv
301.941 393.983 304.955 396.153 307.15 396.153 cv
307.234 396.153 307.316 396.15 307.396 396.143 cv
307.477 396.15 307.559 396.153 307.642 396.153 cv
309.838 396.153 312.851 393.983 312.851 393.983 cv
313.435 393.65 314.101 393.359 314.77 393.108 cv
316.258 392.549 317.762 392.21 318.434 392.21 cv
319.979 392.21 326.601 392.21 326.601 385.809 cv
326.601 383.193 325.459 381.094 324.107 379.525 cv
324.342 379.777 324.577 380.012 324.808 380.225 cv
324.813 380.229 324.817 380.234 324.822 380.239 cv
326.173 381.808 327.315 383.908 327.315 386.523 cv
327.315 392.924 320.693 392.924 319.148 392.924 cv
318.477 392.924 316.972 393.263 315.485 393.823 cv
314.815 394.073 314.149 394.364 313.566 394.697 cv
313.566 394.697 310.552 396.867 308.357 396.867 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
312.014 350.16 mo
311.894 350.071 311.774 349.988 311.653 349.912 cv
311.536 349.751 311.418 349.595 311.299 349.446 cv
311.42 349.536 311.54 349.634 311.659 349.738 cv
311.778 349.872 311.896 350.013 312.014 350.16 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
312.367 350.626 mo
312.247 350.551 312.126 350.483 312.005 350.422 cv
311.889 350.246 311.771 350.076 311.653 349.912 cv
311.774 349.988 311.894 350.071 312.014 350.16 cv
312.133 350.309 312.251 350.465 312.367 350.626 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
312.719 351.136 mo
312.598 351.075 312.477 351.021 312.355 350.974 cv
312.239 350.784 312.123 350.6 312.005 350.422 cv
312.126 350.483 312.247 350.551 312.367 350.626 cv
312.485 350.79 312.603 350.96 312.719 351.136 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
313.069 351.689 mo
312.948 351.643 312.826 351.603 312.703 351.571 cv
312.588 351.367 312.472 351.168 312.355 350.974 cv
312.477 351.021 312.598 351.075 312.719 351.136 cv
312.837 351.314 312.953 351.499 313.069 351.689 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
313.417 352.286 mo
313.296 352.254 313.174 352.229 313.05 352.212 cv
312.936 351.993 312.82 351.78 312.703 351.571 cv
312.826 351.603 312.948 351.643 313.069 351.689 cv
313.187 351.882 313.302 352.081 313.417 352.286 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
313.764 352.926 mo
313.642 352.909 313.52 352.899 313.396 352.897 cv
313.282 352.664 313.167 352.435 313.05 352.212 cv
313.174 352.229 313.296 352.254 313.417 352.286 cv
313.534 352.494 313.65 352.708 313.764 352.926 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
313.825 353.624 mo
313.736 353.619 li
313.624 353.374 313.51 353.132 313.396 352.897 cv
313.52 352.899 313.642 352.909 313.764 352.926 cv
313.881 353.149 313.996 353.378 314.11 353.611 cv
314.089 353.611 314.068 353.61 314.047 353.61 cv
313.854 353.622 li
313.825 353.624 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
314.054 354.336 mo
313.949 354.093 313.843 353.854 313.736 353.619 cv
313.825 353.624 li
313.854 353.622 li
314.047 353.61 li
314.068 353.61 314.089 353.611 314.11 353.611 cv
314.225 353.847 314.338 354.088 314.45 354.333 cv
314.317 354.325 li
314.229 354.325 314.141 354.328 314.054 354.336 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
314.378 355.108 mo
314.271 354.847 314.164 354.59 314.054 354.336 cv
314.141 354.328 314.229 354.325 314.317 354.325 cv
314.45 354.333 li
314.558 354.568 314.664 354.807 314.768 355.05 cv
314.637 355.061 314.507 355.081 314.378 355.108 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
314.703 355.93 mo
314.596 355.653 314.488 355.379 314.378 355.108 cv
314.507 355.081 314.637 355.061 314.768 355.05 cv
314.878 355.304 314.985 355.561 315.092 355.823 cv
314.961 355.85 314.831 355.887 314.703 355.93 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
315.029 356.802 mo
314.922 356.508 314.814 356.218 314.703 355.93 cv
314.831 355.887 314.961 355.85 315.092 355.823 cv
315.202 356.093 315.31 356.367 315.417 356.645 cv
315.287 356.689 315.158 356.742 315.029 356.802 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
315.357 357.724 mo
315.25 357.414 315.14 357.106 315.029 356.802 cv
315.158 356.742 315.287 356.689 315.417 356.645 cv
315.528 356.932 315.636 357.222 315.744 357.516 cv
315.613 357.578 315.485 357.647 315.357 357.724 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
322.34 377.718 mo
322.108 377.469 321.872 377.235 321.637 377.016 cv
321.634 377.012 321.63 377.008 321.626 377.005 cv
320.466 375.663 319.402 373.944 319.114 372.435 cv
318.41 368.745 317.139 362.876 315.357 357.724 cv
315.485 357.647 315.613 357.578 315.744 357.516 cv
317.698 362.875 319.082 369.237 319.828 373.149 cv
320.116 374.658 321.18 376.377 322.34 377.718 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
290.17 390.49 mo
289.914 390.279 289.674 390.042 289.455 389.775 cv
289.59 389.887 289.729 389.991 289.871 390.088 cv
289.966 390.229 290.065 390.363 290.17 390.49 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
323.781 379.16 mo
323.779 379.158 323.778 379.157 323.777 379.156 cv
323.774 379.153 323.772 379.15 323.769 379.147 cv
323.773 379.151 323.777 379.155 323.781 379.16 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
323.777 379.156 mo
323.691 379.076 323.606 378.999 323.521 378.924 cv
323.476 378.883 323.43 378.842 323.384 378.799 cv
323.279 378.678 323.173 378.56 323.066 378.445 cv
323.301 378.664 323.537 378.898 323.769 379.147 cv
323.772 379.15 323.774 379.153 323.777 379.156 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
290.586 390.803 mo
290.443 390.705 290.304 390.602 290.17 390.49 cv
290.065 390.363 289.966 390.229 289.871 390.088 cv
290.02 390.19 290.172 390.284 290.327 390.371 cv
290.408 390.522 290.494 390.666 290.586 390.803 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
324.098 379.514 mo
324.096 379.512 324.095 379.511 324.093 379.509 cv
323.987 379.395 323.882 379.277 323.777 379.156 cv
323.778 379.157 323.779 379.158 323.781 379.16 cv
323.887 379.275 323.993 379.392 324.098 379.514 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
324.093 379.509 mo
323.862 379.297 323.627 379.062 323.393 378.81 cv
323.39 378.807 323.387 378.803 323.384 378.799 cv
323.43 378.842 323.476 378.883 323.521 378.924 cv
323.606 378.999 323.691 379.076 323.777 379.156 cv
323.882 379.277 323.987 379.395 324.093 379.509 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
291.041 391.086 mo
290.886 390.998 290.734 390.904 290.586 390.803 cv
290.494 390.666 290.408 390.522 290.327 390.371 cv
290.489 390.463 290.655 390.547 290.822 390.624 cv
290.889 390.785 290.962 390.938 291.041 391.086 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
324.107 379.525 mo
324.103 379.52 324.098 379.514 324.093 379.509 cv
324.095 379.511 324.096 379.512 324.098 379.514 cv
324.101 379.517 324.104 379.521 324.107 379.525 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
291.537 391.338 mo
291.369 391.261 291.204 391.177 291.041 391.086 cv
290.962 390.938 290.889 390.785 290.822 390.624 cv
290.999 390.705 291.178 390.779 291.357 390.846 cv
291.411 391.017 291.471 391.181 291.537 391.338 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
292.072 391.561 mo
291.892 391.494 291.713 391.42 291.537 391.338 cv
291.471 391.181 291.411 391.017 291.357 390.846 cv
291.549 390.918 291.741 390.981 291.933 391.038 cv
291.973 391.219 292.019 391.393 292.072 391.561 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
292.647 391.752 mo
292.455 391.695 292.263 391.632 292.072 391.561 cv
292.019 391.393 291.973 391.219 291.933 391.038 cv
292.139 391.098 292.345 391.151 292.549 391.197 cv
292.575 391.389 292.608 391.574 292.647 391.752 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
293.263 391.911 mo
293.06 391.866 292.854 391.813 292.647 391.752 cv
292.608 391.574 292.575 391.389 292.549 391.197 cv
292.772 391.247 292.992 391.289 293.207 391.324 cv
293.219 391.527 293.238 391.722 293.263 391.911 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
293.921 392.038 mo
293.707 392.003 293.487 391.962 293.263 391.911 cv
293.238 391.722 293.219 391.527 293.207 391.324 cv
293.449 391.363 293.683 391.393 293.907 391.417 cv
293.906 391.452 293.906 391.487 293.906 391.523 cv
293.906 391.699 293.911 391.871 293.921 392.038 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
294.621 392.131 mo
294.398 392.108 294.163 392.077 293.921 392.038 cv
293.911 391.871 293.906 391.699 293.906 391.523 cv
293.906 391.487 293.906 391.452 293.907 391.417 cv
294.174 391.445 294.424 391.463 294.653 391.474 cv
294.635 391.689 294.624 391.908 294.621 392.131 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
295.367 392.189 mo
295.139 392.177 294.888 392.159 294.621 392.131 cv
294.624 391.908 294.635 391.689 294.653 391.474 cv
294.968 391.49 295.242 391.494 295.456 391.495 cv
295.417 391.722 295.388 391.953 295.367 392.189 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
296.17 392.21 mo
295.956 392.209 295.683 392.205 295.367 392.189 cv
295.388 391.953 295.417 391.722 295.456 391.495 cv
295.525 391.496 295.588 391.496 295.645 391.496 cv
295.815 391.496 296.04 391.517 296.305 391.559 cv
296.252 391.771 296.207 391.988 296.17 392.21 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
297.019 392.273 mo
296.754 392.231 296.53 392.21 296.359 392.21 cv
296.302 392.21 296.239 392.21 296.17 392.21 cv
296.207 391.988 296.252 391.771 296.305 391.559 cv
296.561 391.599 296.854 391.657 297.171 391.733 cv
297.115 391.91 297.065 392.089 297.019 392.273 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
297.886 392.447 mo
297.568 392.371 297.275 392.313 297.019 392.273 cv
297.065 392.089 297.115 391.91 297.171 391.733 cv
297.449 391.798 297.745 391.877 298.052 391.968 cv
297.993 392.125 297.937 392.284 297.886 392.447 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
298.766 392.682 mo
298.46 392.592 298.163 392.513 297.886 392.447 cv
297.937 392.284 297.993 392.125 298.052 391.968 cv
298.341 392.053 298.64 392.149 298.94 392.255 cv
298.879 392.395 298.821 392.537 298.766 392.682 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
307.642 396.153 mo
307.559 396.153 307.477 396.15 307.396 396.143 cv
307.316 396.15 307.234 396.153 307.15 396.153 cv
304.955 396.153 301.941 393.983 301.941 393.983 cv
300.986 393.44 299.816 392.992 298.766 392.682 cv
298.821 392.537 298.879 392.395 298.94 392.255 cv
299.73 392.532 300.535 392.875 301.226 393.268 cv
301.226 393.268 304.241 395.439 306.436 395.439 cv
306.519 395.439 306.601 395.435 306.682 395.429 cv
306.763 395.435 306.845 395.439 306.928 395.439 cv
309.123 395.439 312.137 393.268 312.137 393.268 cv
312.721 392.936 313.387 392.645 314.056 392.394 cv
315.543 391.835 317.048 391.496 317.72 391.496 cv
319.264 391.496 325.887 391.496 325.887 385.094 cv
325.887 382.479 324.745 380.379 323.393 378.81 cv
323.627 379.062 323.862 379.297 324.093 379.509 cv
324.098 379.514 324.103 379.52 324.107 379.525 cv
325.459 381.094 326.601 383.193 326.601 385.809 cv
326.601 392.21 319.979 392.21 318.434 392.21 cv
317.762 392.21 316.258 392.549 314.77 393.108 cv
314.101 393.359 313.435 393.65 312.851 393.983 cv
312.851 393.983 309.838 396.153 307.642 396.153 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
310.945 349.024 mo
310.826 348.92 310.706 348.822 310.585 348.732 cv
310.468 348.585 310.349 348.443 310.23 348.309 cv
310.472 348.521 310.711 348.76 310.945 349.024 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
311.299 349.446 mo
311.18 349.356 311.06 349.274 310.938 349.198 cv
310.821 349.036 310.704 348.881 310.585 348.732 cv
310.706 348.822 310.826 348.92 310.945 349.024 cv
311.064 349.158 311.182 349.299 311.299 349.446 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
311.653 349.912 mo
311.533 349.837 311.412 349.768 311.29 349.707 cv
311.174 349.532 311.057 349.361 310.938 349.198 cv
311.06 349.274 311.18 349.356 311.299 349.446 cv
311.418 349.595 311.536 349.751 311.653 349.912 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
312.005 350.422 mo
311.884 350.361 311.763 350.307 311.64 350.26 cv
311.525 350.07 311.408 349.886 311.29 349.707 cv
311.412 349.768 311.533 349.837 311.653 349.912 cv
311.771 350.076 311.889 350.246 312.005 350.422 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
312.355 350.974 mo
312.234 350.928 312.112 350.889 311.989 350.857 cv
311.874 350.652 311.758 350.454 311.64 350.26 cv
311.763 350.307 311.884 350.361 312.005 350.422 cv
312.123 350.6 312.239 350.784 312.355 350.974 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
312.703 351.571 mo
312.582 351.54 312.459 351.515 312.336 351.498 cv
312.222 351.279 312.106 351.065 311.989 350.857 cv
312.112 350.889 312.234 350.928 312.355 350.974 cv
312.472 351.168 312.588 351.367 312.703 351.571 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
313.05 352.212 mo
312.928 352.195 312.805 352.185 312.681 352.182 cv
312.568 351.949 312.452 351.721 312.336 351.498 cv
312.459 351.515 312.582 351.54 312.703 351.571 cv
312.82 351.78 312.936 351.993 313.05 352.212 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
313.111 352.91 mo
313.022 352.904 li
312.91 352.659 312.796 352.418 312.681 352.182 cv
312.805 352.185 312.928 352.195 313.05 352.212 cv
313.167 352.435 313.282 352.664 313.396 352.897 cv
313.375 352.896 313.354 352.896 313.333 352.896 cv
313.14 352.908 li
313.111 352.91 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
313.34 353.622 mo
313.235 353.379 313.129 353.139 313.022 352.904 cv
313.111 352.91 li
313.14 352.908 li
313.333 352.896 li
313.354 352.896 313.375 352.896 313.396 352.897 cv
313.51 353.132 313.624 353.374 313.736 353.619 cv
313.603 353.61 li
313.515 353.61 313.427 353.614 313.34 353.622 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
313.663 354.394 mo
313.557 354.133 313.449 353.875 313.34 353.622 cv
313.427 353.614 313.515 353.61 313.603 353.61 cv
313.736 353.619 li
313.843 353.854 313.949 354.093 314.054 354.336 cv
313.923 354.347 313.793 354.367 313.663 354.394 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
313.989 355.216 mo
313.882 354.939 313.773 354.664 313.663 354.394 cv
313.793 354.367 313.923 354.347 314.054 354.336 cv
314.164 354.59 314.271 354.847 314.378 355.108 cv
314.247 355.136 314.117 355.172 313.989 355.216 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
314.315 356.088 mo
314.208 355.794 314.099 355.504 313.989 355.216 cv
314.117 355.172 314.247 355.136 314.378 355.108 cv
314.488 355.379 314.596 355.653 314.703 355.93 cv
314.573 355.975 314.443 356.027 314.315 356.088 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
314.642 357.009 mo
314.535 356.7 314.426 356.392 314.315 356.088 cv
314.443 356.027 314.573 355.975 314.703 355.93 cv
314.814 356.218 314.922 356.508 315.029 356.802 cv
314.899 356.863 314.77 356.932 314.642 357.009 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
314.97 357.982 mo
314.863 357.655 314.754 357.331 314.642 357.009 cv
314.77 356.932 314.899 356.863 315.029 356.802 cv
315.14 357.106 315.25 357.414 315.357 357.724 cv
315.227 357.802 315.098 357.888 314.97 357.982 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
321.626 377.005 mo
321.394 376.755 321.159 376.521 320.924 376.303 cv
320.92 376.299 320.916 376.295 320.913 376.291 cv
319.752 374.949 318.688 373.23 318.4 371.721 cv
317.74 368.261 316.581 362.885 314.97 357.982 cv
315.098 357.888 315.227 357.802 315.357 357.724 cv
317.139 362.876 318.41 368.745 319.114 372.435 cv
319.402 373.944 320.466 375.663 321.626 377.005 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
289.455 389.775 mo
289.2 389.564 288.96 389.328 288.741 389.062 cv
288.876 389.173 289.015 389.277 289.157 389.374 cv
289.251 389.515 289.351 389.648 289.455 389.775 cv
310.23 348.309 mo
310.111 348.205 309.991 348.108 309.871 348.017 cv
309.754 347.87 309.636 347.73 309.516 347.596 cv
309.759 347.807 309.996 348.046 310.23 348.309 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
323.066 378.445 mo
323.065 378.444 323.064 378.443 323.062 378.442 cv
323.06 378.439 323.057 378.436 323.055 378.433 cv
323.059 378.437 323.063 378.441 323.066 378.445 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
323.062 378.442 mo
322.977 378.362 322.892 378.285 322.807 378.21 cv
322.762 378.169 322.716 378.128 322.67 378.086 cv
322.565 377.965 322.46 377.847 322.353 377.732 cv
322.588 377.95 322.823 378.184 323.055 378.433 cv
323.057 378.436 323.06 378.439 323.062 378.442 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
289.871 390.088 mo
289.729 389.991 289.59 389.887 289.455 389.775 cv
289.351 389.648 289.251 389.515 289.157 389.374 cv
289.306 389.476 289.458 389.57 289.613 389.657 cv
289.693 389.807 289.78 389.951 289.871 390.088 cv
310.585 348.732 mo
310.466 348.642 310.345 348.559 310.224 348.483 cv
310.108 348.322 309.99 348.167 309.871 348.017 cv
309.991 348.108 310.111 348.205 310.23 348.309 cv
310.349 348.443 310.468 348.585 310.585 348.732 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
323.384 378.799 mo
323.382 378.798 323.381 378.797 323.379 378.795 cv
323.273 378.681 323.167 378.563 323.062 378.442 cv
323.064 378.443 323.065 378.444 323.066 378.445 cv
323.173 378.56 323.279 378.678 323.384 378.799 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
323.379 378.795 mo
323.148 378.583 322.913 378.348 322.679 378.097 cv
322.676 378.093 322.673 378.089 322.67 378.086 cv
322.716 378.128 322.762 378.169 322.807 378.21 cv
322.892 378.285 322.977 378.362 323.062 378.442 cv
323.167 378.563 323.273 378.681 323.379 378.795 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
290.327 390.371 mo
290.172 390.284 290.02 390.19 289.871 390.088 cv
289.78 389.951 289.693 389.807 289.613 389.657 cv
289.775 389.749 289.941 389.833 290.108 389.91 cv
290.175 390.071 290.248 390.224 290.327 390.371 cv
310.938 349.198 mo
310.818 349.122 310.698 349.054 310.576 348.993 cv
310.46 348.817 310.343 348.647 310.224 348.483 cv
310.345 348.559 310.466 348.642 310.585 348.732 cv
310.704 348.881 310.821 349.036 310.938 349.198 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
323.393 378.81 mo
323.388 378.805 323.384 378.8 323.379 378.795 cv
323.381 378.797 323.382 378.798 323.384 378.799 cv
323.387 378.803 323.39 378.807 323.393 378.81 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
290.822 390.624 mo
290.655 390.547 290.489 390.463 290.327 390.371 cv
290.248 390.224 290.175 390.071 290.108 389.91 cv
290.284 389.991 290.464 390.065 290.643 390.132 cv
290.697 390.303 290.756 390.467 290.822 390.624 cv
311.29 349.707 mo
311.17 349.646 311.048 349.593 310.926 349.546 cv
310.811 349.356 310.694 349.171 310.576 348.993 cv
310.698 349.054 310.818 349.122 310.938 349.198 cv
311.057 349.361 311.174 349.532 311.29 349.707 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
291.357 390.846 mo
291.178 390.779 290.999 390.705 290.822 390.624 cv
290.756 390.467 290.697 390.303 290.643 390.132 cv
290.835 390.203 291.027 390.267 291.219 390.323 cv
291.258 390.504 291.305 390.679 291.357 390.846 cv
311.64 350.26 mo
311.52 350.214 311.397 350.175 311.275 350.143 cv
311.16 349.938 311.044 349.739 310.926 349.546 cv
311.048 349.593 311.17 349.646 311.29 349.707 cv
311.408 349.886 311.525 350.07 311.64 350.26 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
291.933 391.038 mo
291.741 390.981 291.549 390.918 291.357 390.846 cv
291.305 390.679 291.258 390.504 291.219 390.323 cv
291.425 390.384 291.631 390.437 291.835 390.483 cv
291.861 390.675 291.893 390.859 291.933 391.038 cv
311.989 350.857 mo
311.867 350.825 311.745 350.801 311.622 350.783 cv
311.507 350.565 311.392 350.351 311.275 350.143 cv
311.397 350.175 311.52 350.214 311.64 350.26 cv
311.758 350.454 311.874 350.652 311.989 350.857 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
292.549 391.197 mo
292.345 391.151 292.139 391.098 291.933 391.038 cv
291.893 390.859 291.861 390.675 291.835 390.483 cv
292.058 390.533 292.278 390.575 292.492 390.61 cv
292.504 390.812 292.523 391.008 292.549 391.197 cv
312.336 351.498 mo
312.214 351.481 312.091 351.471 311.967 351.468 cv
311.853 351.235 311.738 351.007 311.622 350.783 cv
311.745 350.801 311.867 350.825 311.989 350.857 cv
312.106 351.065 312.222 351.279 312.336 351.498 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
293.207 391.324 mo
292.992 391.289 292.772 391.247 292.549 391.197 cv
292.523 391.008 292.504 390.812 292.492 390.61 cv
292.734 390.649 292.969 390.679 293.192 390.702 cv
293.192 390.738 293.192 390.773 293.192 390.809 cv
293.192 390.985 293.197 391.157 293.207 391.324 cv
312.396 352.196 mo
312.307 352.19 li
312.196 351.945 312.082 351.704 311.967 351.468 cv
312.091 351.471 312.214 351.481 312.336 351.498 cv
312.452 351.721 312.568 351.949 312.681 352.182 cv
312.66 352.182 312.639 352.182 312.619 352.182 cv
312.426 352.194 li
312.396 352.196 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
293.907 391.417 mo
293.683 391.393 293.449 391.363 293.207 391.324 cv
293.197 391.157 293.192 390.985 293.192 390.809 cv
293.192 390.773 293.192 390.738 293.192 390.702 cv
293.459 390.73 293.71 390.748 293.939 390.76 cv
293.92 390.975 293.909 391.194 293.907 391.417 cv
312.626 352.907 mo
312.521 352.664 312.415 352.425 312.307 352.19 cv
312.396 352.196 li
312.426 352.194 li
312.619 352.182 li
312.639 352.182 312.66 352.182 312.681 352.182 cv
312.796 352.418 312.91 352.659 313.022 352.904 cv
312.889 352.896 li
312.801 352.896 312.713 352.9 312.626 352.907 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
294.653 391.474 mo
294.424 391.463 294.174 391.445 293.907 391.417 cv
293.909 391.194 293.92 390.975 293.939 390.76 cv
294.254 390.776 294.527 390.78 294.741 390.781 cv
294.703 391.008 294.674 391.239 294.653 391.474 cv
312.949 353.68 mo
312.843 353.418 312.735 353.161 312.626 352.907 cv
312.713 352.9 312.801 352.896 312.889 352.896 cv
313.022 352.904 li
313.129 353.139 313.235 353.379 313.34 353.622 cv
313.208 353.633 313.078 353.652 312.949 353.68 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
295.456 391.495 mo
295.242 391.494 294.968 391.49 294.653 391.474 cv
294.674 391.239 294.703 391.008 294.741 390.781 cv
294.811 390.781 294.874 390.781 294.93 390.781 cv
295.101 390.781 295.326 390.803 295.591 390.844 cv
295.538 391.057 295.493 391.274 295.456 391.495 cv
313.274 354.502 mo
313.168 354.225 313.059 353.95 312.949 353.68 cv
313.078 353.652 313.208 353.633 313.34 353.622 cv
313.449 353.875 313.557 354.133 313.663 354.394 cv
313.533 354.422 313.403 354.458 313.274 354.502 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
296.305 391.559 mo
296.04 391.517 295.815 391.496 295.645 391.496 cv
295.588 391.496 295.525 391.496 295.456 391.495 cv
295.493 391.274 295.538 391.057 295.591 390.844 cv
295.846 390.884 296.139 390.943 296.457 391.018 cv
296.401 391.195 296.35 391.375 296.305 391.559 cv
313.601 355.373 mo
313.494 355.079 313.385 354.789 313.274 354.502 cv
313.403 354.458 313.533 354.422 313.663 354.394 cv
313.773 354.664 313.882 354.939 313.989 355.216 cv
313.858 355.261 313.729 355.313 313.601 355.373 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
297.171 391.733 mo
296.854 391.657 296.561 391.599 296.305 391.559 cv
296.35 391.375 296.401 391.195 296.457 391.018 cv
296.735 391.084 297.031 391.163 297.338 391.254 cv
297.278 391.41 297.223 391.57 297.171 391.733 cv
313.928 356.295 mo
313.821 355.985 313.712 355.677 313.601 355.373 cv
313.729 355.313 313.858 355.261 313.989 355.216 cv
314.099 355.504 314.208 355.794 314.315 356.088 cv
314.185 356.149 314.056 356.218 313.928 356.295 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
298.052 391.968 mo
297.745 391.877 297.449 391.798 297.171 391.733 cv
297.223 391.57 297.278 391.41 297.338 391.254 cv
297.627 391.339 297.925 391.435 298.226 391.54 cv
298.165 391.68 298.107 391.823 298.052 391.968 cv
314.256 357.267 mo
314.149 356.941 314.039 356.617 313.928 356.295 cv
314.056 356.218 314.185 356.149 314.315 356.088 cv
314.426 356.392 314.535 356.7 314.642 357.009 cv
314.513 357.087 314.383 357.174 314.256 357.267 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
298.94 392.255 mo
298.64 392.149 298.341 392.053 298.052 391.968 cv
298.107 391.823 298.165 391.68 298.226 391.54 cv
298.522 391.644 298.821 391.757 299.114 391.879 cv
299.054 392.002 298.996 392.127 298.94 392.255 cv
314.584 358.291 mo
314.476 357.948 314.367 357.607 314.256 357.267 cv
314.383 357.174 314.513 357.087 314.642 357.009 cv
314.754 357.331 314.863 357.655 314.97 357.982 cv
314.84 358.077 314.711 358.18 314.584 358.291 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
306.928 395.439 mo
306.845 395.439 306.763 395.435 306.682 395.429 cv
306.601 395.435 306.519 395.439 306.436 395.439 cv
304.241 395.439 301.226 393.268 301.226 393.268 cv
300.535 392.875 299.73 392.532 298.94 392.255 cv
298.996 392.127 299.054 392.002 299.114 391.879 cv
299.604 392.082 300.08 392.308 300.512 392.554 cv
300.512 392.554 303.527 394.724 305.722 394.724 cv
305.805 394.724 305.887 394.721 305.968 394.715 cv
306.049 394.721 306.131 394.724 306.214 394.724 cv
308.409 394.725 311.423 392.554 311.423 392.554 cv
312.007 392.222 312.672 391.93 313.342 391.68 cv
314.829 391.12 316.334 390.781 317.005 390.781 cv
318.55 390.781 325.173 390.781 325.173 384.38 cv
325.173 381.765 324.031 379.666 322.679 378.097 cv
322.913 378.348 323.148 378.583 323.379 378.795 cv
323.384 378.8 323.388 378.805 323.393 378.81 cv
324.745 380.379 325.887 382.479 325.887 385.094 cv
325.887 391.496 319.264 391.496 317.72 391.496 cv
317.048 391.496 315.543 391.835 314.056 392.394 cv
313.387 392.645 312.721 392.936 312.137 393.268 cv
312.137 393.268 309.123 395.439 306.928 395.439 cv
320.913 376.291 mo
320.68 376.041 320.444 375.807 320.209 375.588 cv
320.206 375.584 320.202 375.581 320.199 375.577 cv
319.038 374.236 317.974 372.516 317.686 371.006 cv
317.071 367.786 316.025 362.906 314.584 358.291 cv
314.711 358.18 314.84 358.077 314.97 357.982 cv
316.581 362.885 317.74 368.261 318.4 371.721 cv
318.688 373.23 319.752 374.949 320.913 376.291 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
288.741 389.062 mo
288.486 388.851 288.245 388.613 288.027 388.347 cv
288.161 388.458 288.3 388.563 288.443 388.66 cv
288.537 388.801 288.637 388.934 288.741 389.062 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
322.353 377.732 mo
322.351 377.73 322.35 377.729 322.348 377.728 cv
322.345 377.724 322.343 377.721 322.34 377.718 cv
322.344 377.723 322.349 377.727 322.353 377.732 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
322.348 377.728 mo
322.263 377.648 322.178 377.571 322.093 377.495 cv
322.047 377.455 322.001 377.413 321.955 377.371 cv
321.85 377.249 321.744 377.131 321.637 377.016 cv
321.872 377.235 322.108 377.469 322.34 377.718 cv
322.343 377.721 322.345 377.724 322.348 377.728 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
289.157 389.374 mo
289.015 389.277 288.876 389.173 288.741 389.062 cv
288.637 388.934 288.537 388.801 288.443 388.66 cv
288.591 388.761 288.743 388.855 288.898 388.943 cv
288.979 389.093 289.066 389.237 289.157 389.374 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
322.67 378.086 mo
322.668 378.084 322.667 378.083 322.665 378.081 cv
322.559 377.967 322.453 377.849 322.348 377.728 cv
322.35 377.729 322.351 377.73 322.353 377.732 cv
322.46 377.847 322.565 377.965 322.67 378.086 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
322.665 378.081 mo
322.434 377.868 322.198 377.634 321.964 377.381 cv
321.961 377.378 321.958 377.374 321.955 377.371 cv
322.001 377.413 322.047 377.455 322.093 377.495 cv
322.178 377.571 322.263 377.648 322.348 377.728 cv
322.453 377.849 322.559 377.967 322.665 378.081 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
289.613 389.657 mo
289.458 389.57 289.306 389.476 289.157 389.374 cv
289.066 389.237 288.979 389.093 288.898 388.943 cv
289.061 389.034 289.226 389.118 289.394 389.195 cv
289.461 389.356 289.534 389.51 289.613 389.657 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
322.679 378.097 mo
322.675 378.092 322.67 378.086 322.665 378.081 cv
322.667 378.083 322.668 378.084 322.67 378.086 cv
322.673 378.089 322.676 378.093 322.679 378.097 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
290.108 389.91 mo
289.941 389.833 289.775 389.749 289.613 389.657 cv
289.534 389.51 289.461 389.356 289.394 389.195 cv
289.57 389.277 289.749 389.351 289.929 389.418 cv
289.982 389.589 290.042 389.753 290.108 389.91 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
290.643 390.132 mo
290.464 390.065 290.284 389.991 290.108 389.91 cv
290.042 389.753 289.982 389.589 289.929 389.418 cv
290.12 389.489 290.312 389.552 290.504 389.609 cv
290.544 389.79 290.59 389.965 290.643 390.132 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
291.219 390.323 mo
291.027 390.267 290.835 390.203 290.643 390.132 cv
290.59 389.965 290.544 389.79 290.504 389.609 cv
290.711 389.67 290.917 389.723 291.12 389.769 cv
291.146 389.96 291.179 390.145 291.219 390.323 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
291.835 390.483 mo
291.631 390.437 291.425 390.384 291.219 390.323 cv
291.179 390.145 291.146 389.96 291.12 389.769 cv
291.344 389.819 291.564 389.861 291.778 389.895 cv
291.79 390.098 291.809 390.294 291.835 390.483 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
292.492 390.61 mo
292.278 390.575 292.058 390.533 291.835 390.483 cv
291.809 390.294 291.79 390.098 291.778 389.895 cv
292.02 389.935 292.255 389.965 292.478 389.988 cv
292.478 390.023 292.478 390.059 292.478 390.094 cv
292.478 390.271 292.483 390.443 292.492 390.61 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
293.192 390.702 mo
292.969 390.679 292.734 390.649 292.492 390.61 cv
292.483 390.443 292.478 390.271 292.478 390.094 cv
292.478 390.059 292.478 390.023 292.478 389.988 cv
292.745 390.016 292.996 390.034 293.225 390.046 cv
293.206 390.261 293.195 390.48 293.192 390.702 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
293.939 390.76 mo
293.71 390.748 293.459 390.73 293.192 390.702 cv
293.195 390.48 293.206 390.261 293.225 390.046 cv
293.54 390.062 293.813 390.066 294.027 390.067 cv
293.989 390.293 293.959 390.524 293.939 390.76 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
294.741 390.781 mo
294.527 390.78 294.254 390.776 293.939 390.76 cv
293.959 390.524 293.989 390.293 294.027 390.067 cv
294.096 390.067 294.16 390.067 294.216 390.067 cv
294.387 390.067 294.612 390.089 294.876 390.13 cv
294.824 390.343 294.778 390.56 294.741 390.781 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
295.591 390.844 mo
295.326 390.803 295.101 390.781 294.93 390.781 cv
294.874 390.781 294.811 390.781 294.741 390.781 cv
294.778 390.56 294.824 390.343 294.876 390.13 cv
295.132 390.17 295.425 390.229 295.743 390.304 cv
295.687 390.481 295.636 390.661 295.591 390.844 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
296.457 391.018 mo
296.139 390.943 295.846 390.884 295.591 390.844 cv
295.636 390.661 295.687 390.481 295.743 390.304 cv
296.02 390.37 296.317 390.449 296.623 390.539 cv
296.564 390.696 296.508 390.856 296.457 391.018 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
297.338 391.254 mo
297.031 391.163 296.735 391.084 296.457 391.018 cv
296.508 390.856 296.564 390.696 296.623 390.539 cv
296.913 390.625 297.211 390.72 297.512 390.826 cv
297.451 390.966 297.393 391.109 297.338 391.254 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
298.226 391.54 mo
297.925 391.435 297.627 391.339 297.338 391.254 cv
297.393 391.109 297.451 390.966 297.512 390.826 cv
297.808 390.93 298.106 391.043 298.4 391.165 cv
298.34 391.288 298.282 391.413 298.226 391.54 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
299.114 391.879 mo
298.821 391.757 298.522 391.644 298.226 391.54 cv
298.282 391.413 298.34 391.288 298.4 391.165 cv
298.699 391.289 298.993 391.422 299.276 391.562 cv
299.22 391.667 299.166 391.772 299.114 391.879 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
306.214 394.724 mo
306.131 394.724 306.049 394.721 305.968 394.715 cv
305.887 394.721 305.805 394.724 305.722 394.724 cv
303.527 394.724 300.512 392.554 300.512 392.554 cv
300.08 392.308 299.604 392.082 299.114 391.879 cv
299.166 391.772 299.22 391.667 299.276 391.562 cv
299.455 391.652 299.63 391.744 299.798 391.84 cv
299.798 391.84 302.812 394.01 305.008 394.01 cv
305.091 394.01 305.173 394.007 305.254 394 cv
305.334 394.007 305.416 394.01 305.5 394.01 cv
307.695 394.01 310.708 391.84 310.708 391.84 cv
311.292 391.507 311.958 391.216 312.628 390.965 cv
314.115 390.406 315.62 390.067 316.291 390.067 cv
317.836 390.067 324.458 390.067 324.458 383.666 cv
324.458 381.05 323.316 378.95 321.964 377.381 cv
322.198 377.634 322.434 377.868 322.665 378.081 cv
322.67 378.086 322.675 378.092 322.679 378.097 cv
324.031 379.666 325.173 381.765 325.173 384.38 cv
325.173 390.781 318.55 390.781 317.005 390.781 cv
316.334 390.781 314.829 391.12 313.342 391.68 cv
312.672 391.93 312.007 392.222 311.423 392.554 cv
311.423 392.554 308.409 394.725 306.214 394.724 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
309.516 347.596 mo
309.398 347.492 309.278 347.394 309.157 347.303 cv
309.039 347.156 308.921 347.015 308.801 346.88 cv
309.044 347.092 309.283 347.332 309.516 347.596 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
309.871 348.017 mo
309.751 347.928 309.631 347.845 309.51 347.769 cv
309.393 347.608 309.275 347.452 309.157 347.303 cv
309.278 347.394 309.398 347.492 309.516 347.596 cv
309.636 347.73 309.754 347.87 309.871 348.017 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
310.224 348.483 mo
310.104 348.408 309.983 348.34 309.862 348.279 cv
309.746 348.103 309.628 347.933 309.51 347.769 cv
309.631 347.845 309.751 347.928 309.871 348.017 cv
309.99 348.167 310.108 348.322 310.224 348.483 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
310.576 348.993 mo
310.456 348.932 310.334 348.878 310.212 348.832 cv
310.096 348.641 309.98 348.457 309.862 348.279 cv
309.983 348.34 310.104 348.408 310.224 348.483 cv
310.343 348.647 310.46 348.817 310.576 348.993 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
310.926 349.546 mo
310.805 349.5 310.683 349.46 310.56 349.428 cv
310.445 349.224 310.329 349.025 310.212 348.832 cv
310.334 348.878 310.456 348.932 310.576 348.993 cv
310.694 349.171 310.811 349.356 310.926 349.546 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
311.275 350.143 mo
311.153 350.111 311.031 350.087 310.907 350.069 cv
310.793 349.85 310.677 349.637 310.56 349.428 cv
310.683 349.46 310.805 349.5 310.926 349.546 cv
311.044 349.739 311.16 349.938 311.275 350.143 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
311.622 350.783 mo
311.499 350.766 311.377 350.756 311.253 350.754 cv
311.139 350.521 311.024 350.292 310.907 350.069 cv
311.031 350.087 311.153 350.111 311.275 350.143 cv
311.392 350.351 311.507 350.565 311.622 350.783 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
311.682 351.481 mo
311.593 351.476 li
311.481 351.231 311.367 350.989 311.253 350.754 cv
311.377 350.756 311.499 350.766 311.622 350.783 cv
311.738 351.007 311.853 351.235 311.967 351.468 cv
311.946 351.468 311.925 351.468 311.904 351.468 cv
311.711 351.479 li
311.682 351.481 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
311.911 352.193 mo
311.807 351.95 311.701 351.711 311.593 351.476 cv
311.682 351.481 li
311.711 351.479 li
311.904 351.468 li
311.925 351.468 311.946 351.468 311.967 351.468 cv
312.082 351.704 312.196 351.945 312.307 352.19 cv
312.174 352.182 li
312.086 352.182 311.998 352.186 311.911 352.193 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
312.235 352.966 mo
312.128 352.704 312.021 352.447 311.911 352.193 cv
311.998 352.186 312.086 352.182 312.174 352.182 cv
312.307 352.19 li
312.415 352.425 312.521 352.664 312.626 352.907 cv
312.494 352.919 312.364 352.938 312.235 352.966 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
312.56 353.788 mo
312.453 353.51 312.345 353.236 312.235 352.966 cv
312.364 352.938 312.494 352.919 312.626 352.907 cv
312.735 353.161 312.843 353.418 312.949 353.68 cv
312.819 353.708 312.689 353.744 312.56 353.788 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
312.887 354.659 mo
312.779 354.365 312.671 354.075 312.56 353.788 cv
312.689 353.744 312.819 353.708 312.949 353.68 cv
313.059 353.95 313.168 354.225 313.274 354.502 cv
313.144 354.546 313.015 354.599 312.887 354.659 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
313.214 355.581 mo
313.107 355.271 312.997 354.963 312.887 354.659 cv
313.015 354.599 313.144 354.546 313.274 354.502 cv
313.385 354.789 313.494 355.079 313.601 355.373 cv
313.471 355.435 313.342 355.504 313.214 355.581 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
313.541 356.553 mo
313.434 356.227 313.325 355.902 313.214 355.581 cv
313.342 355.504 313.471 355.435 313.601 355.373 cv
313.712 355.677 313.821 355.985 313.928 356.295 cv
313.798 356.373 313.669 356.459 313.541 356.553 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
313.869 357.577 mo
313.762 357.234 313.653 356.892 313.541 356.553 cv
313.669 356.459 313.798 356.373 313.928 356.295 cv
314.039 356.617 314.149 356.941 314.256 357.267 cv
314.126 357.363 313.997 357.466 313.869 357.577 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
314.197 358.652 mo
314.09 358.293 313.981 357.934 313.869 357.577 cv
313.997 357.466 314.126 357.363 314.256 357.267 cv
314.367 357.607 314.476 357.948 314.584 358.291 cv
314.454 358.403 314.324 358.524 314.197 358.652 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
320.199 375.577 mo
319.967 375.328 319.731 375.094 319.496 374.875 cv
319.492 374.87 319.488 374.866 319.484 374.862 cv
318.323 373.521 317.259 371.801 316.971 370.292 cv
316.404 367.321 315.47 362.937 314.197 358.652 cv
314.324 358.524 314.454 358.403 314.584 358.291 cv
316.025 362.906 317.071 367.786 317.686 371.006 cv
317.974 372.516 319.038 374.236 320.199 375.577 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
288.027 388.347 mo
287.771 388.136 287.531 387.899 287.312 387.633 cv
287.447 387.744 287.586 387.848 287.728 387.945 cv
287.823 388.086 287.922 388.22 288.027 388.347 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
321.637 377.016 mo
321.636 377.015 321.634 377.014 321.633 377.012 cv
321.631 377.01 321.629 377.007 321.626 377.005 cv
321.63 377.008 321.634 377.012 321.637 377.016 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
321.633 377.012 mo
321.548 376.933 321.463 376.856 321.378 376.781 cv
321.333 376.74 321.287 376.699 321.24 376.656 cv
321.136 376.535 321.03 376.417 320.924 376.303 cv
321.159 376.521 321.394 376.755 321.626 377.005 cv
321.629 377.007 321.631 377.01 321.633 377.012 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
308.801 346.88 mo
308.682 346.777 308.563 346.68 308.442 346.589 cv
308.325 346.442 308.207 346.301 308.088 346.167 cv
308.33 346.379 308.567 346.617 308.801 346.88 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
288.443 388.66 mo
288.3 388.563 288.161 388.458 288.027 388.347 cv
287.922 388.22 287.823 388.086 287.728 387.945 cv
287.877 388.047 288.029 388.141 288.184 388.228 cv
288.265 388.379 288.351 388.523 288.443 388.66 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
321.955 377.371 mo
321.953 377.369 321.952 377.368 321.95 377.367 cv
321.844 377.252 321.738 377.134 321.633 377.012 cv
321.634 377.014 321.636 377.015 321.637 377.016 cv
321.744 377.131 321.85 377.249 321.955 377.371 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
321.95 377.367 mo
321.719 377.154 321.484 376.919 321.249 376.667 cv
321.247 376.663 321.243 376.66 321.24 376.656 cv
321.287 376.699 321.333 376.74 321.378 376.781 cv
321.463 376.856 321.548 376.933 321.633 377.012 cv
321.738 377.134 321.844 377.252 321.95 377.367 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
288.898 388.943 mo
288.743 388.855 288.591 388.761 288.443 388.66 cv
288.351 388.523 288.265 388.379 288.184 388.228 cv
288.346 388.32 288.512 388.404 288.679 388.481 cv
288.746 388.642 288.82 388.795 288.898 388.943 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
321.964 377.381 mo
321.96 377.376 321.955 377.372 321.95 377.367 cv
321.952 377.368 321.953 377.369 321.955 377.371 cv
321.958 377.374 321.961 377.378 321.964 377.381 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
289.394 389.195 mo
289.226 389.118 289.061 389.034 288.898 388.943 cv
288.82 388.795 288.746 388.642 288.679 388.481 cv
288.856 388.563 289.035 388.636 289.214 388.703 cv
289.268 388.874 289.328 389.038 289.394 389.195 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
289.929 389.418 mo
289.749 389.351 289.57 389.277 289.394 389.195 cv
289.328 389.038 289.268 388.874 289.214 388.703 cv
289.406 388.775 289.598 388.838 289.79 388.895 cv
289.83 389.076 289.876 389.25 289.929 389.418 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
290.504 389.609 mo
290.312 389.552 290.12 389.489 289.929 389.418 cv
289.876 389.25 289.83 389.076 289.79 388.895 cv
289.997 388.956 290.203 389.008 290.406 389.054 cv
290.432 389.246 290.465 389.431 290.504 389.609 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
291.12 389.769 mo
290.917 389.723 290.711 389.67 290.504 389.609 cv
290.465 389.431 290.432 389.246 290.406 389.054 cv
290.629 389.104 290.85 389.146 291.064 389.181 cv
291.076 389.384 291.095 389.579 291.12 389.769 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
291.778 389.895 mo
291.564 389.861 291.344 389.819 291.12 389.769 cv
291.095 389.579 291.076 389.384 291.064 389.181 cv
291.306 389.22 291.54 389.25 291.764 389.274 cv
291.763 389.309 291.763 389.345 291.763 389.38 cv
291.763 389.557 291.768 389.728 291.778 389.895 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
292.478 389.988 mo
292.255 389.965 292.02 389.935 291.778 389.895 cv
291.768 389.728 291.763 389.557 291.763 389.38 cv
291.763 389.345 291.763 389.309 291.764 389.274 cv
292.031 389.302 292.282 389.32 292.51 389.331 cv
292.492 389.547 292.481 389.765 292.478 389.988 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
293.225 390.046 mo
292.996 390.034 292.745 390.016 292.478 389.988 cv
292.481 389.765 292.492 389.547 292.51 389.331 cv
292.826 389.347 293.099 389.351 293.313 389.352 cv
293.275 389.579 293.245 389.81 293.225 390.046 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
294.027 390.067 mo
293.813 390.066 293.54 390.062 293.225 390.046 cv
293.245 389.81 293.275 389.579 293.313 389.352 cv
293.382 389.353 293.445 389.353 293.502 389.353 cv
293.673 389.353 293.897 389.374 294.162 389.416 cv
294.109 389.628 294.064 389.845 294.027 390.067 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
294.876 390.13 mo
294.612 390.089 294.387 390.067 294.216 390.067 cv
294.16 390.067 294.096 390.067 294.027 390.067 cv
294.064 389.845 294.109 389.628 294.162 389.416 cv
294.418 389.456 294.711 389.514 295.029 389.59 cv
294.973 389.767 294.922 389.947 294.876 390.13 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
295.743 390.304 mo
295.425 390.229 295.132 390.17 294.876 390.13 cv
294.922 389.947 294.973 389.767 295.029 389.59 cv
295.306 389.656 295.602 389.734 295.909 389.825 cv
295.85 389.982 295.794 390.142 295.743 390.304 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
296.623 390.539 mo
296.317 390.449 296.02 390.37 295.743 390.304 cv
295.794 390.142 295.85 389.982 295.909 389.825 cv
296.198 389.91 296.497 390.006 296.798 390.112 cv
296.736 390.252 296.678 390.394 296.623 390.539 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
297.512 390.826 mo
297.211 390.72 296.913 390.625 296.623 390.539 cv
296.678 390.394 296.736 390.252 296.798 390.112 cv
297.094 390.216 297.392 390.329 297.685 390.45 cv
297.625 390.574 297.567 390.699 297.512 390.826 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
298.4 391.165 mo
298.106 391.043 297.808 390.93 297.512 390.826 cv
297.567 390.699 297.625 390.574 297.685 390.45 cv
297.985 390.575 298.279 390.707 298.562 390.848 cv
298.506 390.952 298.452 391.058 298.4 391.165 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
299.276 391.562 mo
298.993 391.422 298.699 391.289 298.4 391.165 cv
298.452 391.058 298.506 390.952 298.562 390.848 cv
298.741 390.937 298.916 391.03 299.083 391.125 cv
299.083 391.125 299.198 391.208 299.398 391.34 cv
299.357 391.414 299.316 391.488 299.276 391.562 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
305.5 394.01 mo
305.416 394.01 305.334 394.007 305.254 394 cv
305.173 394.007 305.091 394.01 305.008 394.01 cv
302.812 394.01 299.798 391.84 299.798 391.84 cv
299.63 391.744 299.455 391.652 299.276 391.562 cv
299.316 391.488 299.357 391.414 299.398 391.34 cv
300.226 391.888 302.525 393.296 304.293 393.296 cv
304.377 393.296 304.459 393.293 304.539 393.286 cv
304.62 393.293 304.702 393.296 304.785 393.296 cv
306.981 393.296 309.994 391.125 309.994 391.125 cv
310.578 390.793 311.244 390.502 311.913 390.251 cv
313.4 389.692 314.905 389.353 315.577 389.353 cv
317.122 389.353 323.744 389.353 323.744 382.951 cv
323.744 380.336 322.602 378.236 321.249 376.667 cv
321.484 376.919 321.719 377.154 321.95 377.367 cv
321.955 377.372 321.96 377.376 321.964 377.381 cv
323.316 378.95 324.458 381.05 324.458 383.666 cv
324.458 390.067 317.836 390.067 316.291 390.067 cv
315.62 390.067 314.115 390.406 312.628 390.965 cv
311.958 391.216 311.292 391.507 310.708 391.84 cv
310.708 391.84 307.695 394.01 305.5 394.01 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
309.157 347.303 mo
309.037 347.214 308.917 347.131 308.796 347.055 cv
308.679 346.894 308.561 346.738 308.442 346.589 cv
308.563 346.68 308.682 346.777 308.801 346.88 cv
308.921 347.015 309.039 347.156 309.157 347.303 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
309.51 347.769 mo
309.39 347.694 309.269 347.626 309.147 347.564 cv
309.031 347.389 308.914 347.219 308.796 347.055 cv
308.917 347.131 309.037 347.214 309.157 347.303 cv
309.275 347.452 309.393 347.608 309.51 347.769 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
309.862 348.279 mo
309.741 348.218 309.62 348.164 309.497 348.117 cv
309.382 347.927 309.265 347.743 309.147 347.564 cv
309.269 347.626 309.39 347.694 309.51 347.769 cv
309.628 347.933 309.746 348.103 309.862 348.279 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
310.212 348.832 mo
310.091 348.785 309.969 348.746 309.846 348.714 cv
309.731 348.51 309.615 348.311 309.497 348.117 cv
309.62 348.164 309.741 348.218 309.862 348.279 cv
309.98 348.457 310.096 348.641 310.212 348.832 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
310.56 349.428 mo
310.439 349.397 310.316 349.372 310.193 349.355 cv
310.079 349.136 309.963 348.922 309.846 348.714 cv
309.969 348.746 310.091 348.785 310.212 348.832 cv
310.329 349.025 310.445 349.224 310.56 349.428 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
310.907 350.069 mo
310.785 350.052 310.662 350.042 310.538 350.04 cv
310.425 349.806 310.31 349.578 310.193 349.355 cv
310.316 349.372 310.439 349.397 310.56 349.428 cv
310.677 349.637 310.793 349.85 310.907 350.069 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
310.968 350.767 mo
310.879 350.761 li
310.767 350.516 310.653 350.275 310.538 350.04 cv
310.662 350.042 310.785 350.052 310.907 350.069 cv
311.024 350.292 311.139 350.521 311.253 350.754 cv
311.232 350.754 311.211 350.753 311.19 350.753 cv
310.997 350.765 li
310.968 350.767 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
311.197 351.479 mo
311.092 351.236 310.986 350.996 310.879 350.761 cv
310.968 350.767 li
310.997 350.765 li
311.19 350.753 li
311.211 350.753 311.232 350.754 311.253 350.754 cv
311.367 350.989 311.481 351.231 311.593 351.476 cv
311.46 351.468 li
311.372 351.468 311.284 351.471 311.197 351.479 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
311.52 352.251 mo
311.414 351.99 311.306 351.733 311.197 351.479 cv
311.284 351.471 311.372 351.468 311.46 351.468 cv
311.593 351.476 li
311.701 351.711 311.807 351.95 311.911 352.193 cv
311.78 352.204 311.65 352.224 311.52 352.251 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
311.846 353.073 mo
311.739 352.796 311.63 352.521 311.52 352.251 cv
311.65 352.224 311.78 352.204 311.911 352.193 cv
312.021 352.447 312.128 352.704 312.235 352.966 cv
312.104 352.993 311.974 353.029 311.846 353.073 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
312.172 353.945 mo
312.065 353.651 311.956 353.361 311.846 353.073 cv
311.974 353.029 312.104 352.993 312.235 352.966 cv
312.345 353.236 312.453 353.51 312.56 353.788 cv
312.43 353.832 312.3 353.885 312.172 353.945 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
312.5 354.867 mo
312.392 354.557 312.283 354.249 312.172 353.945 cv
312.3 353.885 312.43 353.832 312.56 353.788 cv
312.671 354.075 312.779 354.365 312.887 354.659 cv
312.756 354.72 312.628 354.789 312.5 354.867 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
312.827 355.839 mo
312.72 355.512 312.611 355.188 312.5 354.867 cv
312.628 354.789 312.756 354.72 312.887 354.659 cv
312.997 354.963 313.107 355.271 313.214 355.581 cv
313.084 355.659 312.955 355.745 312.827 355.839 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
313.155 356.862 mo
313.048 356.519 312.939 356.178 312.827 355.839 cv
312.955 355.745 313.084 355.659 313.214 355.581 cv
313.325 355.902 313.434 356.227 313.541 356.553 cv
313.411 356.648 313.283 356.751 313.155 356.862 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
313.483 357.938 mo
313.376 357.578 313.267 357.22 313.155 356.862 cv
313.283 356.751 313.411 356.648 313.541 356.553 cv
313.653 356.892 313.762 357.234 313.869 357.577 cv
313.739 357.689 313.61 357.81 313.483 357.938 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
313.81 359.067 mo
313.703 358.69 313.594 358.314 313.483 357.938 cv
313.61 357.81 313.739 357.689 313.869 357.577 cv
313.981 357.934 314.09 358.293 314.197 358.652 cv
314.066 358.783 313.938 358.921 313.81 359.067 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
319.484 374.862 mo
319.252 374.613 319.016 374.379 318.781 374.16 cv
318.777 374.156 318.773 374.152 318.769 374.147 cv
317.609 372.806 316.545 371.087 316.257 369.578 cv
315.74 366.867 314.917 362.981 313.81 359.067 cv
313.938 358.921 314.066 358.783 314.197 358.652 cv
315.47 362.937 316.404 367.321 316.971 370.292 cv
317.259 371.801 318.323 373.521 319.484 374.862 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
287.312 387.633 mo
287.057 387.422 286.817 387.185 286.598 386.919 cv
286.733 387.03 286.872 387.134 287.014 387.231 cv
287.108 387.372 287.208 387.506 287.312 387.633 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
320.924 376.303 mo
320.922 376.301 320.921 376.3 320.92 376.299 cv
320.917 376.296 320.915 376.293 320.913 376.291 cv
320.916 376.295 320.92 376.299 320.924 376.303 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
320.92 376.299 mo
320.834 376.22 320.749 376.142 320.664 376.067 cv
320.618 376.026 320.572 375.985 320.526 375.942 cv
320.422 375.821 320.316 375.703 320.209 375.588 cv
320.444 375.807 320.68 376.041 320.913 376.291 cv
320.915 376.293 320.917 376.296 320.92 376.299 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
287.728 387.945 mo
287.586 387.848 287.447 387.744 287.312 387.633 cv
287.208 387.506 287.108 387.372 287.014 387.231 cv
287.163 387.333 287.315 387.427 287.47 387.514 cv
287.55 387.665 287.637 387.809 287.728 387.945 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
321.24 376.656 mo
321.239 376.655 321.237 376.653 321.236 376.652 cv
321.13 376.538 321.024 376.42 320.92 376.299 cv
320.921 376.3 320.922 376.301 320.924 376.303 cv
321.03 376.417 321.136 376.535 321.24 376.656 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
321.236 376.652 mo
321.004 376.439 320.769 376.204 320.534 375.951 cv
320.532 375.948 320.529 375.945 320.526 375.942 cv
320.572 375.985 320.618 376.026 320.664 376.067 cv
320.749 376.142 320.834 376.22 320.92 376.299 cv
321.024 376.42 321.13 376.538 321.236 376.652 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
288.184 388.228 mo
288.029 388.141 287.877 388.047 287.728 387.945 cv
287.637 387.809 287.55 387.665 287.47 387.514 cv
287.632 387.606 287.798 387.69 287.965 387.767 cv
288.032 387.928 288.105 388.081 288.184 388.228 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
321.249 376.667 mo
321.245 376.662 321.24 376.657 321.236 376.652 cv
321.237 376.653 321.239 376.655 321.24 376.656 cv
321.243 376.66 321.247 376.663 321.249 376.667 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
288.679 388.481 mo
288.512 388.404 288.346 388.32 288.184 388.228 cv
288.105 388.081 288.032 387.928 287.965 387.767 cv
288.142 387.848 288.321 387.922 288.5 387.989 cv
288.554 388.16 288.614 388.324 288.679 388.481 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
289.214 388.703 mo
289.035 388.636 288.856 388.563 288.679 388.481 cv
288.614 388.324 288.554 388.16 288.5 387.989 cv
288.692 388.061 288.884 388.124 289.076 388.18 cv
289.115 388.362 289.162 388.536 289.214 388.703 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
289.79 388.895 mo
289.598 388.838 289.406 388.775 289.214 388.703 cv
289.162 388.536 289.115 388.362 289.076 388.18 cv
289.282 388.241 289.489 388.294 289.692 388.34 cv
289.718 388.532 289.751 388.716 289.79 388.895 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
290.406 389.054 mo
290.203 389.008 289.997 388.956 289.79 388.895 cv
289.751 388.716 289.718 388.532 289.692 388.34 cv
289.915 388.39 290.135 388.432 290.35 388.467 cv
290.361 388.67 290.38 388.865 290.406 389.054 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
291.064 389.181 mo
290.85 389.146 290.629 389.104 290.406 389.054 cv
290.38 388.865 290.361 388.67 290.35 388.467 cv
290.591 388.506 290.826 388.536 291.05 388.56 cv
291.049 388.595 291.049 388.63 291.049 388.666 cv
291.049 388.842 291.054 389.014 291.064 389.181 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
291.764 389.274 mo
291.54 389.25 291.306 389.22 291.064 389.181 cv
291.054 389.014 291.049 388.842 291.049 388.666 cv
291.049 388.63 291.049 388.595 291.05 388.56 cv
291.316 388.588 291.567 388.605 291.796 388.617 cv
291.777 388.832 291.766 389.051 291.764 389.274 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
292.51 389.331 mo
292.282 389.32 292.031 389.302 291.764 389.274 cv
291.766 389.051 291.777 388.832 291.796 388.617 cv
292.111 388.633 292.384 388.637 292.598 388.638 cv
292.56 388.865 292.531 389.096 292.51 389.331 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
293.313 389.352 mo
293.099 389.351 292.826 389.347 292.51 389.331 cv
292.531 389.096 292.56 388.865 292.598 388.638 cv
292.668 388.638 292.731 388.638 292.788 388.638 cv
292.958 388.638 293.183 388.66 293.448 388.701 cv
293.395 388.914 293.35 389.131 293.313 389.352 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
294.162 389.416 mo
293.897 389.374 293.673 389.353 293.502 389.353 cv
293.445 389.353 293.382 389.353 293.313 389.352 cv
293.35 389.131 293.395 388.914 293.448 388.701 cv
293.703 388.742 293.997 388.8 294.314 388.875 cv
294.258 389.052 294.207 389.232 294.162 389.416 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
295.029 389.59 mo
294.711 389.514 294.418 389.456 294.162 389.416 cv
294.207 389.232 294.258 389.052 294.314 388.875 cv
294.592 388.941 294.888 389.02 295.195 389.111 cv
295.135 389.267 295.08 389.427 295.029 389.59 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
295.909 389.825 mo
295.602 389.734 295.306 389.656 295.029 389.59 cv
295.08 389.427 295.135 389.267 295.195 389.111 cv
295.484 389.196 295.783 389.292 296.083 389.397 cv
296.022 389.538 295.964 389.68 295.909 389.825 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
296.798 390.112 mo
296.497 390.006 296.198 389.91 295.909 389.825 cv
295.964 389.68 296.022 389.538 296.083 389.397 cv
296.379 389.501 296.678 389.615 296.971 389.736 cv
296.911 389.859 296.853 389.985 296.798 390.112 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
297.685 390.45 mo
297.392 390.329 297.094 390.216 296.798 390.112 cv
296.853 389.985 296.911 389.859 296.971 389.736 cv
297.271 389.86 297.565 389.993 297.847 390.134 cv
297.792 390.238 297.738 390.344 297.685 390.45 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
298.562 390.848 mo
298.279 390.707 297.985 390.575 297.685 390.45 cv
297.738 390.344 297.792 390.238 297.847 390.134 cv
298.027 390.223 298.201 390.316 298.369 390.411 cv
298.369 390.411 298.483 390.493 298.684 390.626 cv
298.642 390.699 298.602 390.773 298.562 390.848 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
299.398 391.34 mo
299.198 391.208 299.083 391.125 299.083 391.125 cv
298.916 391.03 298.741 390.937 298.562 390.848 cv
298.602 390.773 298.642 390.699 298.684 390.626 cv
298.884 390.758 299.17 390.941 299.514 391.142 cv
299.474 391.207 299.436 391.274 299.398 391.34 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
304.785 393.296 mo
304.702 393.296 304.62 393.293 304.539 393.286 cv
304.459 393.293 304.377 393.296 304.293 393.296 cv
302.525 393.296 300.226 391.888 299.398 391.34 cv
299.436 391.274 299.474 391.207 299.514 391.142 cv
300.592 391.772 302.238 392.582 303.579 392.582 cv
303.662 392.582 303.744 392.578 303.825 392.572 cv
303.906 392.578 303.988 392.582 304.071 392.582 cv
306.266 392.582 309.28 390.411 309.28 390.411 cv
309.864 390.079 310.529 389.787 311.199 389.537 cv
312.686 388.977 314.191 388.638 314.863 388.638 cv
316.407 388.638 323.03 388.638 323.03 382.237 cv
323.03 379.621 321.887 377.521 320.534 375.951 cv
320.769 376.204 321.004 376.439 321.236 376.652 cv
321.24 376.657 321.245 376.662 321.249 376.667 cv
322.602 378.236 323.744 380.336 323.744 382.951 cv
323.744 389.353 317.122 389.353 315.577 389.353 cv
314.905 389.353 313.4 389.692 311.913 390.251 cv
311.244 390.502 310.578 390.793 309.994 391.125 cv
309.994 391.125 306.981 393.296 304.785 393.296 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
308.088 346.167 mo
307.969 346.063 307.849 345.965 307.728 345.875 cv
307.611 345.728 307.493 345.587 307.373 345.452 cv
307.616 345.664 307.854 345.903 308.088 346.167 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
308.442 346.589 mo
308.323 346.499 308.203 346.416 308.081 346.34 cv
307.965 346.179 307.847 346.024 307.728 345.875 cv
307.849 345.965 307.969 346.063 308.088 346.167 cv
308.207 346.301 308.325 346.442 308.442 346.589 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
308.796 347.055 mo
308.676 346.98 308.555 346.911 308.433 346.85 cv
308.317 346.675 308.2 346.504 308.081 346.34 cv
308.203 346.416 308.323 346.499 308.442 346.589 cv
308.561 346.738 308.679 346.894 308.796 347.055 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
309.147 347.564 mo
309.027 347.504 308.905 347.45 308.783 347.403 cv
308.668 347.213 308.551 347.029 308.433 346.85 cv
308.555 346.911 308.676 346.98 308.796 347.055 cv
308.914 347.219 309.031 347.389 309.147 347.564 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
309.497 348.117 mo
309.377 348.071 309.254 348.032 309.132 348 cv
309.017 347.795 308.901 347.597 308.783 347.403 cv
308.905 347.45 309.027 347.504 309.147 347.564 cv
309.265 347.743 309.382 347.927 309.497 348.117 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
309.846 348.714 mo
309.724 348.682 309.602 348.658 309.479 348.641 cv
309.365 348.422 309.249 348.208 309.132 348 cv
309.254 348.032 309.377 348.071 309.497 348.117 cv
309.615 348.311 309.731 348.51 309.846 348.714 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
310.193 349.355 mo
310.071 349.338 309.948 349.328 309.824 349.325 cv
309.71 349.092 309.595 348.864 309.479 348.641 cv
309.602 348.658 309.724 348.682 309.846 348.714 cv
309.963 348.922 310.079 349.136 310.193 349.355 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
310.254 350.053 mo
310.165 350.047 li
310.053 349.802 309.939 349.561 309.824 349.325 cv
309.948 349.328 310.071 349.338 310.193 349.355 cv
310.31 349.578 310.425 349.806 310.538 350.04 cv
310.518 350.039 310.497 350.039 310.476 350.039 cv
310.283 350.051 li
310.254 350.053 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
310.483 350.764 mo
310.378 350.522 310.272 350.282 310.165 350.047 cv
310.254 350.053 li
310.283 350.051 li
310.476 350.039 li
310.497 350.039 310.518 350.039 310.538 350.04 cv
310.653 350.275 310.767 350.516 310.879 350.761 cv
310.746 350.753 li
310.658 350.753 310.57 350.757 310.483 350.764 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
310.806 351.537 mo
310.7 351.276 310.592 351.018 310.483 350.764 cv
310.57 350.757 310.658 350.753 310.746 350.753 cv
310.879 350.761 li
310.986 350.996 311.092 351.236 311.197 351.479 cv
311.066 351.49 310.936 351.509 310.806 351.537 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
311.131 352.359 mo
311.025 352.082 310.916 351.807 310.806 351.537 cv
310.936 351.509 311.066 351.49 311.197 351.479 cv
311.306 351.733 311.414 351.99 311.52 352.251 cv
311.39 352.279 311.26 352.315 311.131 352.359 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
311.458 353.231 mo
311.351 352.937 311.242 352.646 311.131 352.359 cv
311.26 352.315 311.39 352.279 311.52 352.251 cv
311.63 352.521 311.739 352.796 311.846 353.073 cv
311.715 353.118 311.586 353.17 311.458 353.231 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
311.785 354.152 mo
311.678 353.843 311.569 353.534 311.458 353.231 cv
311.586 353.17 311.715 353.118 311.846 353.073 cv
311.956 353.361 312.065 353.651 312.172 353.945 cv
312.042 354.006 311.913 354.075 311.785 354.152 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
312.113 355.124 mo
312.006 354.798 311.896 354.474 311.785 354.152 cv
311.913 354.075 312.042 354.006 312.172 353.945 cv
312.283 354.249 312.392 354.557 312.5 354.867 cv
312.37 354.945 312.24 355.031 312.113 355.124 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
312.441 356.148 mo
312.334 355.805 312.224 355.464 312.113 355.124 cv
312.24 355.031 312.37 354.945 312.5 354.867 cv
312.611 355.188 312.72 355.512 312.827 355.839 cv
312.697 355.934 312.569 356.037 312.441 356.148 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
312.768 357.224 mo
312.661 356.864 312.552 356.505 312.441 356.148 cv
312.569 356.037 312.697 355.934 312.827 355.839 cv
312.939 356.178 313.048 356.519 313.155 356.862 cv
313.025 356.975 312.896 357.096 312.768 357.224 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
313.095 358.353 mo
312.989 357.976 312.88 357.6 312.768 357.224 cv
312.896 357.096 313.025 356.975 313.155 356.862 cv
313.267 357.22 313.376 357.578 313.483 357.938 cv
313.352 358.069 313.223 358.207 313.095 358.353 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
313.422 359.536 mo
313.316 359.143 313.207 358.748 313.095 358.353 cv
313.223 358.207 313.352 358.069 313.483 357.938 cv
313.594 358.314 313.703 358.69 313.81 359.067 cv
313.679 359.216 313.55 359.372 313.422 359.536 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
318.769 374.147 mo
318.536 373.897 318.299 373.661 318.062 373.441 cv
316.899 372.099 315.831 370.375 315.543 368.863 cv
315.078 366.427 314.365 363.04 313.422 359.536 cv
313.55 359.372 313.679 359.216 313.81 359.067 cv
314.917 362.981 315.74 366.867 316.257 369.578 cv
316.545 371.087 317.609 372.806 318.769 374.147 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
286.598 386.919 mo
286.343 386.708 286.102 386.47 285.884 386.204 cv
286.018 386.315 286.158 386.42 286.3 386.517 cv
286.394 386.658 286.494 386.792 286.598 386.919 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
320.209 375.588 mo
320.208 375.587 320.207 375.586 320.205 375.585 cv
320.203 375.582 320.201 375.58 320.199 375.577 cv
320.202 375.581 320.206 375.584 320.209 375.588 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
307.373 345.452 mo
307.254 345.348 307.135 345.251 307.014 345.16 cv
306.896 345.013 306.778 344.872 306.659 344.738 cv
306.901 344.95 307.139 345.189 307.373 345.452 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
320.205 375.585 mo
320.12 375.505 320.035 375.428 319.95 375.352 cv
319.904 375.312 319.858 375.27 319.812 375.228 cv
319.708 375.107 319.602 374.989 319.496 374.875 cv
319.731 375.094 319.967 375.328 320.199 375.577 cv
320.201 375.58 320.203 375.582 320.205 375.585 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
287.014 387.231 mo
286.872 387.134 286.733 387.03 286.598 386.919 cv
286.494 386.792 286.394 386.658 286.3 386.517 cv
286.448 386.618 286.601 386.712 286.755 386.8 cv
286.836 386.95 286.923 387.094 287.014 387.231 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
320.526 375.942 mo
320.525 375.941 320.524 375.94 320.522 375.938 cv
320.416 375.824 320.31 375.706 320.205 375.585 cv
320.207 375.586 320.208 375.587 320.209 375.588 cv
320.316 375.703 320.422 375.821 320.526 375.942 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
307.728 345.875 mo
307.609 345.785 307.489 345.702 307.367 345.626 cv
307.251 345.465 307.132 345.309 307.014 345.16 cv
307.135 345.251 307.254 345.348 307.373 345.452 cv
307.493 345.587 307.611 345.728 307.728 345.875 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
320.522 375.938 mo
320.291 375.725 320.055 375.491 319.821 375.238 cv
319.818 375.235 319.815 375.231 319.812 375.228 cv
319.858 375.27 319.904 375.312 319.95 375.352 cv
320.035 375.428 320.12 375.505 320.205 375.585 cv
320.31 375.706 320.416 375.824 320.522 375.938 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
287.47 387.514 mo
287.315 387.427 287.163 387.333 287.014 387.231 cv
286.923 387.094 286.836 386.95 286.755 386.8 cv
286.918 386.891 287.083 386.975 287.251 387.053 cv
287.318 387.213 287.391 387.367 287.47 387.514 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
320.534 375.951 mo
320.53 375.947 320.526 375.943 320.522 375.938 cv
320.524 375.94 320.525 375.941 320.526 375.942 cv
320.529 375.945 320.532 375.948 320.534 375.951 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
308.081 346.34 mo
307.961 346.265 307.84 346.197 307.719 346.136 cv
307.603 345.96 307.485 345.79 307.367 345.626 cv
307.489 345.702 307.609 345.785 307.728 345.875 cv
307.847 346.024 307.965 346.179 308.081 346.34 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
287.965 387.767 mo
287.798 387.69 287.632 387.606 287.47 387.514 cv
287.391 387.367 287.318 387.213 287.251 387.053 cv
287.427 387.134 287.606 387.208 287.786 387.275 cv
287.839 387.446 287.899 387.61 287.965 387.767 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
288.5 387.989 mo
288.321 387.922 288.142 387.848 287.965 387.767 cv
287.899 387.61 287.839 387.446 287.786 387.275 cv
287.977 387.346 288.17 387.41 288.361 387.466 cv
288.401 387.647 288.448 387.822 288.5 387.989 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
289.076 388.18 mo
288.884 388.124 288.692 388.061 288.5 387.989 cv
288.448 387.822 288.401 387.647 288.361 387.466 cv
288.568 387.527 288.774 387.58 288.978 387.626 cv
289.004 387.817 289.036 388.002 289.076 388.18 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
289.692 388.34 mo
289.489 388.294 289.282 388.241 289.076 388.18 cv
289.036 388.002 289.004 387.817 288.978 387.626 cv
289.201 387.676 289.421 387.718 289.635 387.752 cv
289.647 387.955 289.666 388.151 289.692 388.34 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
290.35 388.467 mo
290.135 388.432 289.915 388.39 289.692 388.34 cv
289.666 388.151 289.647 387.955 289.635 387.752 cv
289.877 387.792 290.112 387.822 290.335 387.845 cv
290.335 387.88 290.335 387.916 290.335 387.951 cv
290.335 388.128 290.34 388.3 290.35 388.467 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
291.05 388.56 mo
290.826 388.536 290.591 388.506 290.35 388.467 cv
290.34 388.3 290.335 388.128 290.335 387.951 cv
290.335 387.916 290.335 387.88 290.335 387.845 cv
290.602 387.873 290.853 387.891 291.082 387.903 cv
291.063 388.118 291.052 388.337 291.05 388.56 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
291.796 388.617 mo
291.567 388.605 291.316 388.588 291.05 388.56 cv
291.052 388.337 291.063 388.118 291.082 387.903 cv
291.397 387.919 291.67 387.923 291.884 387.924 cv
291.846 388.15 291.816 388.381 291.796 388.617 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
292.598 388.638 mo
292.384 388.637 292.111 388.633 291.796 388.617 cv
291.816 388.381 291.846 388.15 291.884 387.924 cv
291.954 387.924 292.017 387.924 292.073 387.924 cv
292.244 387.924 292.469 387.946 292.734 387.987 cv
292.681 388.2 292.636 388.417 292.598 388.638 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
293.448 388.701 mo
293.183 388.66 292.958 388.638 292.788 388.638 cv
292.731 388.638 292.668 388.638 292.598 388.638 cv
292.636 388.417 292.681 388.2 292.734 387.987 cv
292.989 388.027 293.282 388.086 293.6 388.161 cv
293.544 388.338 293.493 388.518 293.448 388.701 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
294.314 388.875 mo
293.997 388.8 293.703 388.742 293.448 388.701 cv
293.493 388.518 293.544 388.338 293.6 388.161 cv
293.877 388.227 294.174 388.306 294.481 388.396 cv
294.421 388.553 294.366 388.713 294.314 388.875 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
295.195 389.111 mo
294.888 389.02 294.592 388.941 294.314 388.875 cv
294.366 388.713 294.421 388.553 294.481 388.396 cv
294.77 388.482 295.068 388.578 295.369 388.683 cv
295.308 388.823 295.25 388.966 295.195 389.111 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
296.083 389.397 mo
295.783 389.292 295.484 389.196 295.195 389.111 cv
295.25 388.966 295.308 388.823 295.369 388.683 cv
295.665 388.787 295.963 388.9 296.257 389.022 cv
296.197 389.145 296.139 389.27 296.083 389.397 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
296.971 389.736 mo
296.678 389.615 296.379 389.501 296.083 389.397 cv
296.139 389.27 296.197 389.145 296.257 389.022 cv
296.556 389.146 296.851 389.279 297.133 389.419 cv
297.077 389.524 297.024 389.629 296.971 389.736 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
297.847 390.134 mo
297.565 389.993 297.271 389.86 296.971 389.736 cv
297.024 389.629 297.077 389.524 297.133 389.419 cv
297.313 389.509 297.487 389.601 297.655 389.697 cv
297.655 389.697 297.769 389.779 297.97 389.912 cv
297.928 389.985 297.887 390.059 297.847 390.134 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
298.684 390.626 mo
298.483 390.493 298.369 390.411 298.369 390.411 cv
298.201 390.316 298.027 390.223 297.847 390.134 cv
297.887 390.059 297.928 389.985 297.97 389.912 cv
298.17 390.044 298.456 390.227 298.799 390.427 cv
298.76 390.493 298.722 390.559 298.684 390.626 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
299.514 391.142 mo
299.17 390.941 298.884 390.758 298.684 390.626 cv
298.722 390.559 298.76 390.493 298.799 390.427 cv
299.058 390.579 299.35 390.741 299.663 390.899 cv
299.612 390.979 299.562 391.06 299.514 391.142 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
304.071 392.582 mo
303.988 392.582 303.906 392.578 303.825 392.572 cv
303.744 392.578 303.662 392.582 303.579 392.582 cv
302.238 392.582 300.592 391.772 299.514 391.142 cv
299.562 391.06 299.612 390.979 299.663 390.899 cv
300.651 391.4 301.846 391.867 302.865 391.867 cv
302.948 391.867 303.03 391.864 303.111 391.858 cv
303.191 391.864 303.274 391.867 303.357 391.867 cv
305.552 391.867 308.566 389.697 308.566 389.697 cv
309.149 389.364 309.815 389.073 310.485 388.823 cv
311.972 388.263 313.477 387.924 314.148 387.924 cv
315.693 387.924 322.315 387.924 322.315 381.523 cv
322.315 378.907 321.173 376.807 319.821 375.238 cv
320.055 375.491 320.291 375.725 320.522 375.938 cv
320.526 375.943 320.53 375.947 320.534 375.951 cv
321.887 377.521 323.03 379.621 323.03 382.237 cv
323.03 388.638 316.407 388.638 314.863 388.638 cv
314.191 388.638 312.686 388.977 311.199 389.537 cv
310.529 389.787 309.864 390.079 309.28 390.411 cv
309.28 390.411 306.266 392.582 304.071 392.582 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
308.433 346.85 mo
308.313 346.789 308.191 346.736 308.069 346.689 cv
307.953 346.499 307.837 346.314 307.719 346.136 cv
307.84 346.197 307.961 346.265 308.081 346.34 cv
308.2 346.504 308.317 346.675 308.433 346.85 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
308.783 347.403 mo
308.662 347.357 308.54 347.318 308.417 347.286 cv
308.302 347.081 308.187 346.882 308.069 346.689 cv
308.191 346.736 308.313 346.789 308.433 346.85 cv
308.551 347.029 308.668 347.213 308.783 347.403 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
309.132 348 mo
309.01 347.968 308.888 347.944 308.764 347.926 cv
308.65 347.708 308.534 347.494 308.417 347.286 cv
308.54 347.318 308.662 347.357 308.783 347.403 cv
308.901 347.597 309.017 347.795 309.132 348 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
309.479 348.641 mo
309.357 348.623 309.234 348.614 309.11 348.611 cv
308.996 348.378 308.881 348.149 308.764 347.926 cv
308.888 347.944 309.01 347.968 309.132 348 cv
309.249 348.208 309.365 348.422 309.479 348.641 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
309.539 349.338 mo
309.45 349.333 li
309.338 349.088 309.225 348.847 309.11 348.611 cv
309.234 348.614 309.357 348.623 309.479 348.641 cv
309.595 348.864 309.71 349.092 309.824 349.325 cv
309.803 349.325 309.782 349.325 309.762 349.325 cv
309.569 349.336 li
309.539 349.338 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
309.768 350.05 mo
309.664 349.807 309.558 349.568 309.45 349.333 cv
309.539 349.338 li
309.569 349.336 li
309.762 349.325 li
309.782 349.325 309.803 349.325 309.824 349.325 cv
309.939 349.561 310.053 349.802 310.165 350.047 cv
310.031 350.039 li
309.943 350.039 309.856 350.043 309.768 350.05 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
310.092 350.823 mo
309.985 350.561 309.878 350.304 309.768 350.05 cv
309.856 350.043 309.943 350.039 310.031 350.039 cv
310.165 350.047 li
310.272 350.282 310.378 350.522 310.483 350.764 cv
310.351 350.776 310.221 350.795 310.092 350.823 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
310.417 351.645 mo
310.31 351.367 310.202 351.093 310.092 350.823 cv
310.221 350.795 310.351 350.776 310.483 350.764 cv
310.592 351.018 310.7 351.276 310.806 351.537 cv
310.676 351.565 310.546 351.601 310.417 351.645 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
310.744 352.516 mo
310.636 352.222 310.528 351.932 310.417 351.645 cv
310.546 351.601 310.676 351.565 310.806 351.537 cv
310.916 351.807 311.025 352.082 311.131 352.359 cv
311.001 352.403 310.872 352.456 310.744 352.516 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
311.071 353.438 mo
310.964 353.128 310.854 352.82 310.744 352.516 cv
310.872 352.456 311.001 352.403 311.131 352.359 cv
311.242 352.646 311.351 352.937 311.458 353.231 cv
311.328 353.292 311.199 353.361 311.071 353.438 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
311.399 354.41 mo
311.291 354.084 311.182 353.76 311.071 353.438 cv
311.199 353.361 311.328 353.292 311.458 353.231 cv
311.569 353.534 311.678 353.843 311.785 354.152 cv
311.655 354.23 311.526 354.317 311.399 354.41 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
311.726 355.434 mo
311.619 355.091 311.51 354.749 311.399 354.41 cv
311.526 354.317 311.655 354.23 311.785 354.152 cv
311.896 354.474 312.006 354.798 312.113 355.124 cv
311.983 355.22 311.854 355.323 311.726 355.434 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
312.054 356.509 mo
311.947 356.15 311.838 355.791 311.726 355.434 cv
311.854 355.323 311.983 355.22 312.113 355.124 cv
312.224 355.464 312.334 355.805 312.441 356.148 cv
312.311 356.261 312.181 356.382 312.054 356.509 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
312.381 357.638 mo
312.275 357.262 312.166 356.885 312.054 356.509 cv
312.181 356.382 312.311 356.261 312.441 356.148 cv
312.552 356.505 312.661 356.864 312.768 357.224 cv
312.638 357.354 312.509 357.493 312.381 357.638 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
312.708 358.822 mo
312.602 358.428 312.493 358.033 312.381 357.638 cv
312.509 357.493 312.638 357.354 312.768 357.224 cv
312.88 357.6 312.989 357.976 313.095 358.353 cv
312.965 358.502 312.836 358.658 312.708 358.822 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
313.033 360.061 mo
312.928 359.651 312.82 359.237 312.708 358.822 cv
312.836 358.658 312.965 358.502 313.095 358.353 cv
313.207 358.748 313.316 359.143 313.422 359.536 cv
313.291 359.704 313.161 359.879 313.033 360.061 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
318.062 373.441 mo
317.977 373.362 317.892 373.285 317.807 373.209 cv
317.76 373.168 317.713 373.125 317.665 373.081 cv
316.384 371.698 315.143 369.798 314.829 368.149 cv
314.418 366.001 313.817 363.115 313.033 360.061 cv
313.161 359.879 313.291 359.704 313.422 359.536 cv
314.365 363.04 315.078 366.427 315.543 368.863 cv
315.831 370.375 316.899 372.099 318.062 373.441 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
285.884 386.204 mo
285.628 385.993 285.388 385.756 285.17 385.49 cv
285.304 385.601 285.443 385.705 285.586 385.803 cv
285.68 385.943 285.779 386.077 285.884 386.204 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
319.496 374.875 mo
319.494 374.873 319.493 374.872 319.491 374.871 cv
319.489 374.868 319.486 374.865 319.484 374.862 cv
319.488 374.866 319.492 374.87 319.496 374.875 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
319.491 374.871 mo
319.406 374.791 319.321 374.714 319.236 374.638 cv
319.19 374.598 319.144 374.557 319.099 374.514 cv
318.994 374.393 318.888 374.275 318.781 374.16 cv
319.016 374.379 319.252 374.613 319.484 374.862 cv
319.486 374.865 319.489 374.868 319.491 374.871 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
286.3 386.517 mo
286.158 386.42 286.018 386.315 285.884 386.204 cv
285.779 386.077 285.68 385.943 285.586 385.803 cv
285.734 385.904 285.886 385.998 286.041 386.085 cv
286.122 386.236 286.208 386.38 286.3 386.517 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
319.812 375.228 mo
319.811 375.227 319.809 375.225 319.808 375.224 cv
319.702 375.11 319.596 374.992 319.491 374.871 cv
319.493 374.872 319.494 374.873 319.496 374.875 cv
319.602 374.989 319.708 375.107 319.812 375.228 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
319.808 375.224 mo
319.577 375.011 319.341 374.776 319.107 374.525 cv
319.104 374.521 319.101 374.518 319.099 374.514 cv
319.144 374.557 319.19 374.598 319.236 374.638 cv
319.321 374.714 319.406 374.791 319.491 374.871 cv
319.596 374.992 319.702 375.11 319.808 375.224 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
286.755 386.8 mo
286.601 386.712 286.448 386.618 286.3 386.517 cv
286.208 386.38 286.122 386.236 286.041 386.085 cv
286.203 386.177 286.369 386.261 286.536 386.338 cv
286.603 386.499 286.677 386.653 286.755 386.8 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
319.821 375.238 mo
319.817 375.234 319.812 375.229 319.808 375.224 cv
319.809 375.225 319.811 375.227 319.812 375.228 cv
319.815 375.231 319.818 375.235 319.821 375.238 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
287.251 387.053 mo
287.083 386.975 286.918 386.891 286.755 386.8 cv
286.677 386.653 286.603 386.499 286.536 386.338 cv
286.713 386.42 286.892 386.494 287.072 386.561 cv
287.125 386.731 287.185 386.895 287.251 387.053 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
287.786 387.275 mo
287.606 387.208 287.427 387.134 287.251 387.053 cv
287.185 386.895 287.125 386.731 287.072 386.561 cv
287.263 386.632 287.455 386.695 287.647 386.752 cv
287.687 386.933 287.733 387.107 287.786 387.275 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
288.361 387.466 mo
288.17 387.41 287.977 387.346 287.786 387.275 cv
287.733 387.107 287.687 386.933 287.647 386.752 cv
287.854 386.813 288.06 386.865 288.263 386.911 cv
288.289 387.103 288.322 387.288 288.361 387.466 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
288.978 387.626 mo
288.774 387.58 288.568 387.527 288.361 387.466 cv
288.322 387.288 288.289 387.103 288.263 386.911 cv
288.487 386.962 288.707 387.003 288.921 387.038 cv
288.933 387.241 288.952 387.437 288.978 387.626 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
289.635 387.752 mo
289.421 387.718 289.201 387.676 288.978 387.626 cv
288.952 387.437 288.933 387.241 288.921 387.038 cv
289.163 387.077 289.398 387.108 289.621 387.131 cv
289.621 387.166 289.62 387.202 289.62 387.237 cv
289.62 387.414 289.625 387.585 289.635 387.752 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
290.335 387.845 mo
290.112 387.822 289.877 387.792 289.635 387.752 cv
289.625 387.585 289.62 387.414 289.62 387.237 cv
289.62 387.202 289.621 387.166 289.621 387.131 cv
289.888 387.159 290.139 387.177 290.367 387.188 cv
290.349 387.404 290.338 387.623 290.335 387.845 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
291.082 387.903 mo
290.853 387.891 290.602 387.873 290.335 387.845 cv
290.338 387.623 290.349 387.404 290.367 387.188 cv
290.683 387.205 290.956 387.208 291.17 387.209 cv
291.132 387.436 291.102 387.667 291.082 387.903 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
291.884 387.924 mo
291.67 387.923 291.397 387.919 291.082 387.903 cv
291.102 387.667 291.132 387.436 291.17 387.209 cv
291.239 387.21 291.303 387.21 291.359 387.21 cv
291.53 387.21 291.754 387.231 292.019 387.273 cv
291.967 387.485 291.921 387.703 291.884 387.924 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
292.734 387.987 mo
292.469 387.946 292.244 387.924 292.073 387.924 cv
292.017 387.924 291.954 387.924 291.884 387.924 cv
291.921 387.703 291.967 387.485 292.019 387.273 cv
292.275 387.313 292.568 387.371 292.886 387.447 cv
292.83 387.624 292.779 387.804 292.734 387.987 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
293.6 388.161 mo
293.282 388.086 292.989 388.027 292.734 387.987 cv
292.779 387.804 292.83 387.624 292.886 387.447 cv
293.163 387.513 293.46 387.591 293.766 387.682 cv
293.707 387.839 293.651 387.999 293.6 388.161 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
294.481 388.396 mo
294.174 388.306 293.877 388.227 293.6 388.161 cv
293.651 387.999 293.707 387.839 293.766 387.682 cv
294.056 387.767 294.354 387.863 294.655 387.969 cv
294.594 388.109 294.535 388.251 294.481 388.396 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
295.369 388.683 mo
295.068 388.578 294.77 388.482 294.481 388.396 cv
294.535 388.251 294.594 388.109 294.655 387.969 cv
294.951 388.073 295.249 388.186 295.543 388.308 cv
295.482 388.431 295.425 388.556 295.369 388.683 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
296.257 389.022 mo
295.963 388.9 295.665 388.787 295.369 388.683 cv
295.425 388.556 295.482 388.431 295.543 388.308 cv
295.842 388.432 296.137 388.565 296.419 388.705 cv
296.363 388.809 296.309 388.915 296.257 389.022 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
297.133 389.419 mo
296.851 389.279 296.556 389.146 296.257 389.022 cv
296.309 388.915 296.363 388.809 296.419 388.705 cv
296.598 388.795 296.773 388.887 296.941 388.983 cv
296.941 388.983 297.055 389.065 297.255 389.197 cv
297.214 389.271 297.173 389.345 297.133 389.419 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
297.97 389.912 mo
297.769 389.779 297.655 389.697 297.655 389.697 cv
297.487 389.601 297.313 389.509 297.133 389.419 cv
297.173 389.345 297.214 389.271 297.255 389.197 cv
297.455 389.33 297.741 389.512 298.085 389.713 cv
298.046 389.779 298.007 389.845 297.97 389.912 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
298.799 390.427 mo
298.456 390.227 298.17 390.044 297.97 389.912 cv
298.007 389.845 298.046 389.779 298.085 389.713 cv
298.344 389.865 298.636 390.026 298.948 390.185 cv
298.898 390.265 298.848 390.345 298.799 390.427 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
299.663 390.899 mo
299.35 390.741 299.058 390.579 298.799 390.427 cv
298.848 390.345 298.898 390.265 298.948 390.185 cv
299.237 390.331 299.543 390.474 299.856 390.604 cv
299.791 390.701 299.726 390.799 299.663 390.899 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
303.357 391.867 mo
303.274 391.867 303.191 391.864 303.111 391.858 cv
303.03 391.864 302.948 391.867 302.865 391.867 cv
301.846 391.867 300.651 391.4 299.663 390.899 cv
299.726 390.799 299.791 390.701 299.856 390.604 cv
300.619 390.918 301.429 391.153 302.15 391.153 cv
302.234 391.153 302.316 391.15 302.396 391.143 cv
302.477 391.15 302.559 391.153 302.642 391.153 cv
304.838 391.153 307.851 388.983 307.851 388.983 cv
308.435 388.65 309.101 388.359 309.77 388.108 cv
311.258 387.549 312.762 387.21 313.434 387.21 cv
314.979 387.21 321.601 387.21 321.601 380.809 cv
321.601 378.193 320.459 376.093 319.107 374.525 cv
319.341 374.776 319.577 375.011 319.808 375.224 cv
319.812 375.229 319.817 375.234 319.821 375.238 cv
321.173 376.807 322.315 378.907 322.315 381.523 cv
322.315 387.924 315.693 387.924 314.148 387.924 cv
313.477 387.924 311.972 388.263 310.485 388.823 cv
309.815 389.073 309.149 389.364 308.566 389.697 cv
308.566 389.697 305.552 391.867 303.357 391.867 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
306.659 344.738 mo
306.54 344.634 306.42 344.536 306.299 344.446 cv
306.182 344.299 306.064 344.159 305.945 344.024 cv
306.187 344.236 306.425 344.474 306.659 344.738 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
307.014 345.16 mo
306.894 345.071 306.774 344.988 306.653 344.912 cv
306.536 344.751 306.418 344.595 306.299 344.446 cv
306.42 344.536 306.54 344.634 306.659 344.738 cv
306.778 344.872 306.896 345.013 307.014 345.16 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
307.367 345.626 mo
307.247 345.551 307.126 345.483 307.005 345.422 cv
306.889 345.246 306.771 345.076 306.653 344.912 cv
306.774 344.988 306.894 345.071 307.014 345.16 cv
307.132 345.309 307.251 345.465 307.367 345.626 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
307.719 346.136 mo
307.598 346.075 307.477 346.021 307.355 345.974 cv
307.239 345.784 307.123 345.6 307.005 345.422 cv
307.126 345.483 307.247 345.551 307.367 345.626 cv
307.485 345.79 307.603 345.96 307.719 346.136 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
308.069 346.689 mo
307.948 346.643 307.826 346.603 307.703 346.571 cv
307.588 346.367 307.472 346.168 307.355 345.974 cv
307.477 346.021 307.598 346.075 307.719 346.136 cv
307.837 346.314 307.953 346.499 308.069 346.689 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
308.417 347.286 mo
308.296 347.254 308.174 347.229 308.05 347.212 cv
307.936 346.993 307.82 346.78 307.703 346.571 cv
307.826 346.603 307.948 346.643 308.069 346.689 cv
308.187 346.882 308.302 347.081 308.417 347.286 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
308.764 347.926 mo
308.642 347.909 308.52 347.899 308.396 347.897 cv
308.282 347.664 308.167 347.435 308.05 347.212 cv
308.174 347.229 308.296 347.254 308.417 347.286 cv
308.534 347.494 308.65 347.708 308.764 347.926 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
308.825 348.624 mo
308.736 348.619 li
308.624 348.374 308.51 348.132 308.396 347.897 cv
308.52 347.899 308.642 347.909 308.764 347.926 cv
308.881 348.149 308.996 348.378 309.11 348.611 cv
309.089 348.611 309.068 348.61 309.047 348.61 cv
308.854 348.622 li
308.825 348.624 li
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
309.054 349.336 mo
308.949 349.093 308.843 348.854 308.736 348.619 cv
308.825 348.624 li
308.854 348.622 li
309.047 348.61 li
309.068 348.61 309.089 348.611 309.11 348.611 cv
309.225 348.847 309.338 349.088 309.45 349.333 cv
309.317 349.325 li
309.229 349.325 309.141 349.328 309.054 349.336 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
309.378 350.108 mo
309.271 349.847 309.164 349.59 309.054 349.336 cv
309.141 349.328 309.229 349.325 309.317 349.325 cv
309.45 349.333 li
309.558 349.568 309.664 349.807 309.768 350.05 cv
309.637 350.061 309.507 350.081 309.378 350.108 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
309.703 350.93 mo
309.596 350.653 309.488 350.379 309.378 350.108 cv
309.507 350.081 309.637 350.061 309.768 350.05 cv
309.878 350.304 309.985 350.561 310.092 350.823 cv
309.961 350.85 309.831 350.887 309.703 350.93 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
310.029 351.802 mo
309.922 351.508 309.814 351.218 309.703 350.93 cv
309.831 350.887 309.961 350.85 310.092 350.823 cv
310.202 351.093 310.31 351.367 310.417 351.645 cv
310.287 351.689 310.158 351.742 310.029 351.802 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
310.357 352.724 mo
310.25 352.414 310.14 352.106 310.029 351.802 cv
310.158 351.742 310.287 351.689 310.417 351.645 cv
310.528 351.932 310.636 352.222 310.744 352.516 cv
310.613 352.578 310.485 352.647 310.357 352.724 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
310.684 353.696 mo
310.577 353.369 310.468 353.045 310.357 352.724 cv
310.485 352.647 310.613 352.578 310.744 352.516 cv
310.854 352.82 310.964 353.128 311.071 353.438 cv
310.941 353.516 310.812 353.602 310.684 353.696 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
311.012 354.719 mo
310.905 354.376 310.796 354.035 310.684 353.696 cv
310.812 353.602 310.941 353.516 311.071 353.438 cv
311.182 353.76 311.291 354.084 311.399 354.41 cv
311.268 354.506 311.14 354.608 311.012 354.719 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
311.34 355.795 mo
311.233 355.436 311.124 355.077 311.012 354.719 cv
311.14 354.608 311.268 354.506 311.399 354.41 cv
311.51 354.749 311.619 355.091 311.726 355.434 cv
311.596 355.546 311.467 355.667 311.34 355.795 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
311.667 356.924 mo
311.56 356.548 311.451 356.171 311.34 355.795 cv
311.467 355.667 311.596 355.546 311.726 355.434 cv
311.838 355.791 311.947 356.15 312.054 356.509 cv
311.924 356.64 311.795 356.778 311.667 356.924 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
311.993 358.107 mo
311.888 357.714 311.779 357.319 311.667 356.924 cv
311.795 356.778 311.924 356.64 312.054 356.509 cv
312.166 356.885 312.275 357.262 312.381 357.638 cv
312.251 357.787 312.121 357.944 311.993 358.107 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
312.319 359.347 mo
312.214 358.936 312.105 358.523 311.993 358.107 cv
312.121 357.944 312.251 357.787 312.381 357.638 cv
312.493 358.033 312.602 358.428 312.708 358.822 cv
312.577 358.989 312.447 359.165 312.319 359.347 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
312.644 360.644 mo
312.539 360.216 312.431 359.783 312.319 359.347 cv
312.447 359.165 312.577 358.989 312.708 358.822 cv
312.82 359.237 312.928 359.651 313.033 360.061 cv
312.902 360.248 312.772 360.442 312.644 360.644 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
317.665 373.081 mo
316.164 371.7 314.487 369.39 314.114 367.435 cv
313.763 365.594 313.27 363.211 312.644 360.644 cv
312.772 360.442 312.902 360.248 313.033 360.061 cv
313.817 363.115 314.418 366.001 314.829 368.149 cv
315.143 369.798 316.384 371.698 317.665 373.081 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
302.642 391.153 mo
302.559 391.153 302.477 391.15 302.396 391.143 cv
302.316 391.15 302.234 391.153 302.15 391.153 cv
301.429 391.153 300.619 390.918 299.856 390.604 cv
299.543 390.474 299.237 390.331 298.948 390.185 cv
298.636 390.026 298.344 389.865 298.085 389.713 cv
297.741 389.512 297.455 389.33 297.255 389.197 cv
297.055 389.065 296.941 388.983 296.941 388.983 cv
296.773 388.887 296.598 388.795 296.419 388.705 cv
296.137 388.565 295.842 388.432 295.543 388.308 cv
295.249 388.186 294.951 388.073 294.655 387.969 cv
294.354 387.863 294.056 387.767 293.766 387.682 cv
293.46 387.591 293.163 387.513 292.886 387.447 cv
292.568 387.371 292.275 387.313 292.019 387.273 cv
291.754 387.231 291.53 387.21 291.359 387.21 cv
291.303 387.21 291.239 387.21 291.17 387.209 cv
290.956 387.208 290.683 387.205 290.367 387.188 cv
290.139 387.177 289.888 387.159 289.621 387.131 cv
289.398 387.108 289.163 387.077 288.921 387.038 cv
288.707 387.003 288.487 386.962 288.263 386.911 cv
288.06 386.865 287.854 386.813 287.647 386.752 cv
287.455 386.695 287.263 386.632 287.072 386.561 cv
286.892 386.494 286.713 386.42 286.536 386.338 cv
286.369 386.261 286.203 386.177 286.041 386.085 cv
285.886 385.998 285.734 385.904 285.586 385.803 cv
285.443 385.705 285.304 385.601 285.17 385.49 cv
284.025 384.545 283.192 383.079 283.192 380.809 cv
283.192 377.376 285.159 374.831 286.986 373.209 cv
288.522 371.846 290.293 369.452 290.678 367.435 cv
292.164 359.654 296.168 342.182 302.174 342.182 cv
302.396 342.195 li
302.426 342.193 li
302.619 342.182 li
303.807 342.182 304.917 342.866 305.945 344.024 cv
306.064 344.159 306.182 344.299 306.299 344.446 cv
306.418 344.595 306.536 344.751 306.653 344.912 cv
306.771 345.076 306.889 345.246 307.005 345.422 cv
307.123 345.6 307.239 345.784 307.355 345.974 cv
307.472 346.168 307.588 346.367 307.703 346.571 cv
307.82 346.78 307.936 346.993 308.05 347.212 cv
308.167 347.435 308.282 347.664 308.396 347.897 cv
308.51 348.132 308.624 348.374 308.736 348.619 cv
308.843 348.854 308.949 349.093 309.054 349.336 cv
309.164 349.59 309.271 349.847 309.378 350.108 cv
309.488 350.379 309.596 350.653 309.703 350.93 cv
309.814 351.218 309.922 351.508 310.029 351.802 cv
310.14 352.106 310.25 352.414 310.357 352.724 cv
310.468 353.045 310.577 353.369 310.684 353.696 cv
310.796 354.035 310.905 354.376 311.012 354.719 cv
311.124 355.077 311.233 355.436 311.34 355.795 cv
311.451 356.171 311.56 356.548 311.667 356.924 cv
311.779 357.319 311.888 357.714 311.993 358.107 cv
312.105 358.523 312.214 358.936 312.319 359.347 cv
312.431 359.783 312.539 360.216 312.644 360.644 cv
313.27 363.211 313.763 365.594 314.114 367.435 cv
314.487 369.39 316.164 371.7 317.665 373.081 cv
317.713 373.125 317.76 373.168 317.807 373.209 cv
317.892 373.285 317.977 373.362 318.062 373.441 cv
318.299 373.661 318.536 373.897 318.769 374.147 cv
318.773 374.152 318.777 374.156 318.781 374.16 cv
318.888 374.275 318.994 374.393 319.099 374.514 cv
319.101 374.518 319.104 374.521 319.107 374.525 cv
320.459 376.093 321.601 378.193 321.601 380.809 cv
321.601 387.21 314.979 387.21 313.434 387.21 cv
312.762 387.21 311.258 387.549 309.77 388.108 cv
309.101 388.359 308.435 388.65 307.851 388.983 cv
307.851 388.983 304.838 391.153 302.642 391.153 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
302.426 342.145 mo
302.396 342.147 li
302.174 342.133 li
296.155 342.133 292.144 359.64 290.654 367.436 cv
290.269 369.458 288.494 371.856 286.955 373.223 cv
285.125 374.848 283.153 377.397 283.153 380.837 cv
283.153 387.251 289.789 387.251 291.337 387.251 cv
292.311 387.251 295.043 387.954 296.93 389.027 cv
296.93 389.027 300.184 391.37 302.396 391.192 cv
304.609 391.37 307.862 389.027 307.862 389.027 cv
308.447 388.694 309.114 388.402 309.785 388.151 cv
308.499 384.226 304.857 378.267 303.334 371.667 cv
302.691 368.882 302.487 351.101 302.426 342.145 cv
cp
.992157 .752941 .0588235 rgb
f
317.838 373.223 mo
316.299 371.856 314.523 369.458 314.138 367.436 cv
312.649 359.64 308.637 342.133 302.619 342.133 cv
302.426 342.145 li
302.487 351.101 302.691 368.882 303.334 371.667 cv
304.857 378.267 308.499 384.226 309.785 388.151 cv
311.275 387.591 312.783 387.251 313.456 387.251 cv
315.004 387.251 321.64 387.251 321.64 380.837 cv
321.64 377.397 319.668 374.848 317.838 373.223 cv
cp
.992157 .870588 .517647 rgb
f
335.98 370.152 mo
334.058 388.701 317.46 402.179 298.911 400.255 cv
280.364 398.327 266.89 381.732 268.811 363.183 cv
270.739 344.635 287.337 331.155 305.883 333.081 cv
324.432 335.008 337.909 351.603 335.98 370.152 cv
cp
349.809 356.147 mo
349.307 353.888 348.645 351.681 347.838 349.543 cv
357.952 339.685 li
340.217 317.837 li
328.478 325.703 li
326.547 324.475 324.528 323.375 322.418 322.424 cv
322.602 308.303 li
294.613 305.397 li
291.875 319.256 li
289.62 319.757 287.42 320.417 285.285 321.224 cv
275.413 311.112 li
253.569 328.849 li
261.428 340.599 li
260.204 342.522 259.106 344.536 258.16 346.633 cv
244.033 346.465 li
241.125 374.452 li
254.989 377.203 li
255.491 379.454 256.146 381.649 256.952 383.78 cv
246.841 393.652 li
264.578 415.498 li
276.331 407.639 li
278.251 408.861 280.265 409.957 282.361 410.906 cv
282.194 425.032 li
310.183 427.939 li
312.932 414.074 li
315.189 413.575 317.393 412.914 319.525 412.108 cv
329.384 422.223 li
351.228 404.487 li
343.358 392.749 li
344.588 390.82 345.688 388.797 346.641 386.688 cv
360.764 386.869 li
363.668 358.882 li
349.809 356.147 li
cp
.415686 .709804 .768627 rgb
f
343.26 365.336 mo
342.525 342.805 323.595 325.072 301.065 325.807 cv
278.533 326.541 260.801 345.47 261.535 368 cv
262.27 390.532 281.198 408.265 303.731 407.53 cv
326.26 406.796 343.995 387.867 343.26 365.336 cv
cp
344.31 365.302 mo
345.064 388.41 326.873 407.824 303.765 408.578 cv
280.653 409.33 261.241 391.143 260.488 368.035 cv
259.734 344.923 277.92 325.513 301.032 324.76 cv
324.14 324.006 343.557 342.19 344.31 365.302 cv
cp
1 1 1 rgb
f
376.15 375.977 mo
376.15 375.545 375.999 375.203 375.697 374.953 cv
375.395 374.703 374.855 374.461 374.08 374.227 cv
372.772 373.836 371.78 373.371 371.103 372.832 cv
370.426 372.293 370.088 371.56 370.088 370.633 cv
370.088 369.701 370.467 368.94 371.225 368.348 cv
371.982 367.757 372.955 367.461 374.143 367.461 cv
375.402 367.461 376.417 367.779 377.185 368.414 cv
377.953 369.05 378.324 369.883 378.299 370.914 cv
378.283 370.961 li
376.08 370.961 li
376.08 370.394 375.906 369.957 375.56 369.652 cv
375.214 369.348 374.73 369.195 374.111 369.195 cv
373.549 369.195 373.117 369.331 372.818 369.602 cv
372.519 369.873 372.369 370.219 372.369 370.641 cv
372.369 371.026 372.534 371.343 372.865 371.59 cv
373.195 371.838 373.768 372.1 374.58 372.375 cv
375.84 372.729 376.799 373.184 377.455 373.738 cv
378.111 374.293 378.439 375.034 378.439 375.961 cv
378.439 376.94 378.057 377.719 377.291 378.297 cv
376.525 378.875 375.52 379.164 374.275 379.164 cv
373.057 379.164 372.008 378.859 371.131 378.25 cv
370.253 377.641 369.827 376.732 369.853 375.523 cv
369.869 375.477 li
372.08 375.477 li
372.08 376.148 372.276 376.644 372.67 376.961 cv
373.063 377.279 373.598 377.438 374.275 377.438 cv
374.885 377.438 375.35 377.303 375.67 377.031 cv
375.99 376.761 376.15 376.409 376.15 375.977 cv
cp
.0588235 .168627 .188235 rgb
f
385.963 376.008 mo
386.01 376.008 li
388.924 367.625 li
391.9 367.625 li
391.9 379 li
389.619 379 li
389.619 371.234 li
389.572 371.227 li
386.76 379 li
385.213 379 li
382.4 371.195 li
382.353 371.203 li
382.353 379 li
380.072 379 li
380.072 367.625 li
383.064 367.625 li
385.963 376.008 li
cp
f
400.471 374 mo
396.244 374 li
396.244 377.25 li
401.268 377.25 li
401.268 379 li
393.963 379 li
393.963 367.625 li
401.244 367.625 li
401.244 369.383 li
396.244 369.383 li
396.244 372.242 li
400.471 372.242 li
400.471 374 li
cp
f
405.135 377.25 mo
410.236 377.25 li
410.236 379 li
402.853 379 li
402.853 367.625 li
405.135 367.625 li
405.135 377.25 li
cp
f
414.018 377.25 mo
419.119 377.25 li
419.119 379 li
411.736 379 li
411.736 367.625 li
414.018 367.625 li
414.018 377.25 li
cp
f
302.396 390.19 mo
302.477 390.195 li
304.007 390.326 306.482 388.788 307.278 388.216 cv
307.368 388.158 li
309.416 386.994 312.342 386.251 313.456 386.251 cv
318.223 386.251 320.64 384.43 320.64 380.837 cv
320.64 377.705 318.755 375.374 317.174 373.971 cv
315.546 372.525 313.594 369.923 313.155 367.624 cv
310.271 352.518 306.234 343.133 302.619 343.133 cv
302.174 343.133 li
298.56 343.133 294.522 352.518 291.637 367.624 cv
291.197 369.924 289.246 372.526 287.619 373.971 cv
286.038 375.374 284.153 377.705 284.153 380.837 cv
284.153 384.43 286.57 386.251 291.337 386.251 cv
292.452 386.251 295.378 386.994 297.424 388.158 cv
297.514 388.216 li
298.311 388.788 300.754 390.343 302.316 390.195 cv
302.396 390.19 li
cp
302.644 392.202 mo
302.643 392.202 li
302.396 392.194 li
300.014 392.348 296.915 390.243 296.392 389.872 cv
294.627 388.881 292.088 388.251 291.337 388.251 cv
283.347 388.251 282.153 383.605 282.153 380.837 cv
282.153 376.962 284.403 374.151 286.291 372.475 cv
287.717 371.209 289.337 369.008 289.672 367.249 cv
291.947 355.335 295.964 341.133 302.174 341.133 cv
302.396 341.144 li
302.619 341.133 li
308.831 341.133 312.846 355.335 315.12 367.249 cv
315.455 369.007 317.075 371.208 318.502 372.475 cv
320.39 374.151 322.64 376.962 322.64 380.837 cv
322.64 383.605 321.446 388.251 313.456 388.251 cv
312.705 388.251 310.166 388.882 308.4 389.872 cv
307.895 390.23 305.007 392.202 302.644 392.202 cv
cp
.239216 .27451 .333333 rgb
f
138.843 147.088 mo
137.835 146.093 li
148.34 135.448 160.56 126.963 174.155 120.876 cv
174.734 122.169 li
161.3 128.184 149.225 136.568 138.843 147.088 cv
cp
f
141.623 148.296 mo
134.848 150.283 li
136.514 143.421 li
141.623 148.296 li
cp
f
125.783 295 mo
113.871 277.236 106.675 255.405 105.522 233.529 cv
105.409 231.373 105.354 230.243 105.354 228.129 cv
106.771 228.129 li
106.771 230.212 106.821 231.268 106.937 233.455 cv
108.077 255.079 115.188 276.656 126.959 294.211 cv
125.783 295 li
cp
f
128.771 291.719 mo
129.297 298.76 li
122.935 295.695 li
128.771 291.719 li
cp
f
225 346.774 mo
221.838 346.774 218.647 346.65 215.517 346.404 cv
215.627 344.992 li
220.761 345.396 226.033 345.465 231.185 345.199 cv
231.257 346.613 li
229.188 346.721 227.083 346.774 225 346.774 cv
cp
f
229.945 342.435 mo
236.288 345.537 li
230.431 349.479 li
229.945 342.435 li
cp
f
319.223 300.582 mo
318.096 299.723 li
332.98 280.191 341.848 256.644 343.065 233.418 cv
343.07 233.322 343.073 233.23 343.073 233.141 cv
344.489 233.141 li
344.489 233.256 344.486 233.373 344.479 233.493 cv
343.247 256.999 334.277 280.825 319.223 300.582 cv
cp
f
340.276 234.669 mo
342.938 228.129 li
347.272 233.702 li
340.276 234.669 li
cp
f
312.424 147.393 mo
302.974 137.519 292.008 129.424 279.831 123.331 cv
280.464 122.065 li
292.787 128.23 303.885 136.422 313.447 146.413 cv
312.424 147.393 li
cp
f
279.55 126.345 mo
275.556 120.522 li
282.595 119.974 li
279.55 126.345 li
cp
f
29.4224 46.8643 mo
29.4224 55.6895 li
35.8433 55.6895 li
35.8433 56.6328 li
29.4224 56.6328 li
29.4224 66.4316 li
28.479 66.4316 li
28.479 45.9209 li
35.8433 45.9209 li
35.8433 46.8643 li
29.4224 46.8643 li
cp
f
38.3384 66.4316 mo
38.3384 45.9209 li
39.2817 45.9209 li
39.2817 66.4316 li
38.3384 66.4316 li
cp
f
51.9717 45.8906 mo
46.8286 66.4014 li
46.0986 66.4014 li
40.9556 45.8906 li
41.9292 45.8906 li
46.4634 63.9668 li
50.9673 45.8906 li
51.9717 45.8906 li
cp
f
54.4058 46.8643 mo
54.4058 55.6895 li
60.8267 55.6895 li
60.8267 56.6328 li
54.4058 56.6328 li
54.4058 65.4883 li
60.8267 65.4883 li
60.8267 66.4316 li
53.4624 66.4316 li
53.4624 45.9209 li
60.8267 45.9209 li
60.8267 46.8643 li
54.4058 46.8643 li
cp
f
73.6968 66.4038 mo
72.0537 66.4038 70.8125 65.8716 69.9727 64.8076 cv
69.1699 63.8184 68.7686 62.3994 68.7686 60.5518 cv
68.7686 59.2358 li
71.4004 59.2358 li
71.4004 60.5518 li
71.4004 61.7651 71.6147 62.6333 72.0444 63.1558 cv
72.1377 63.2866 72.3057 63.4219 72.5483 63.5615 cv
72.791 63.7017 73.1738 63.7715 73.6968 63.7715 cv
74.2007 63.7715 74.6016 63.6646 74.9004 63.4497 cv
75.1987 63.2354 75.4277 62.9736 75.5864 62.6655 cv
75.7451 62.3574 75.8477 62.0215 75.8945 61.6577 cv
75.9409 61.2935 75.9644 60.9717 75.9644 60.6914 cv
75.9644 60.2065 75.8896 59.7954 75.7407 59.4595 cv
75.5908 59.1235 75.395 58.8394 75.1523 58.6055 cv
74.9097 58.3726 74.6392 58.1763 74.3403 58.0176 cv
74.0415 57.8594 73.7432 57.7144 73.4443 57.5835 cv
72.9404 57.3599 li
72.6416 57.2295 72.2637 57.0474 71.8066 56.8135 cv
71.3491 56.5806 70.8965 56.249 70.4487 55.8198 cv
69.3286 54.7373 68.7686 53.3555 68.7686 51.6758 cv
68.7686 50.7983 68.8848 49.9956 69.1187 49.2676 cv
69.3516 48.5396 69.6875 47.9194 70.1265 47.4058 cv
70.5649 46.8926 71.0879 46.4912 71.6943 46.2017 cv
72.3008 45.9126 72.9688 45.7676 73.6968 45.7676 cv
74.7046 45.7676 75.5024 45.9453 76.0903 46.2998 cv
76.6787 46.6543 77.1216 47.0186 77.4204 47.3916 cv
78.2231 48.4185 78.6245 49.8467 78.6245 51.6758 cv
78.6245 52.9917 li
75.9644 52.9917 li
75.9644 51.6758 li
75.9644 50.873 75.8848 50.2476 75.7266 49.7998 cv
75.5679 49.3516 75.3667 49.0298 75.1245 48.8335 cv
74.8818 48.6377 74.6299 48.5215 74.3687 48.4834 cv
74.1069 48.4463 73.8828 48.4277 73.6968 48.4277 cv
73.1548 48.4277 72.7349 48.5586 72.4365 48.8198 cv
72.1377 49.0811 71.9087 49.3936 71.7505 49.7578 cv
71.5918 50.1216 71.4937 50.4858 71.4565 50.8496 cv
71.4189 51.2139 71.4004 51.4893 71.4004 51.6758 cv
71.4004 52.1611 71.4751 52.5767 71.6245 52.9219 cv
71.7739 53.2671 71.9697 53.5654 72.2124 53.8179 cv
72.4551 54.0698 72.7305 54.2847 73.0386 54.4614 cv
73.3467 54.6392 73.6685 54.7935 74.0044 54.9238 cv
74.4526 55.1196 li
74.7139 55.2314 75.0728 55.3955 75.5308 55.6099 cv
75.9878 55.8242 76.4404 56.1465 76.8887 56.5757 cv
78.0459 57.6396 78.6245 59.0117 78.6245 60.6914 cv
78.6245 62.2783 78.2324 63.5942 77.4487 64.6396 cv
76.5337 65.8154 75.2827 66.4038 73.6968 66.4038 cv
cp
f
82.5161 48.4277 mo
82.5161 54.7837 li
88.4243 54.7837 li
88.4243 57.4155 li
82.5161 57.4155 li
82.5161 63.7998 li
88.4243 63.7998 li
88.4243 66.4316 li
79.8843 66.4316 li
79.8843 45.7954 li
88.4243 45.7954 li
88.4243 48.4277 li
82.5161 48.4277 li
cp
f
92.9321 66.4038 mo
90.3003 66.4038 li
90.3003 45.7676 li
92.5122 45.7676 li
97.5522 58.2559 li
97.5522 45.7676 li
100.212 45.7676 li
100.212 66.4038 li
97.9722 66.4038 li
92.9321 53.9155 li
92.9321 66.4038 li
cp
f
107.128 66.4038 mo
105.485 66.4038 104.244 65.8716 103.404 64.8076 cv
102.601 63.8184 102.2 62.3994 102.2 60.5518 cv
102.2 59.2358 li
104.831 59.2358 li
104.831 60.5518 li
104.831 61.7651 105.046 62.6333 105.476 63.1558 cv
105.569 63.2866 105.737 63.4219 105.979 63.5615 cv
106.222 63.7017 106.605 63.7715 107.128 63.7715 cv
107.632 63.7715 108.033 63.6646 108.331 63.4497 cv
108.63 63.2354 108.859 62.9736 109.018 62.6655 cv
109.176 62.3574 109.279 62.0215 109.326 61.6577 cv
109.372 61.2935 109.396 60.9717 109.396 60.6914 cv
109.396 60.2065 109.321 59.7954 109.172 59.4595 cv
109.022 59.1235 108.826 58.8394 108.583 58.6055 cv
108.341 58.3726 108.07 58.1763 107.771 58.0176 cv
107.473 57.8594 107.174 57.7144 106.875 57.5835 cv
106.372 57.3599 li
106.073 57.2295 105.695 57.0474 105.238 56.8135 cv
104.78 56.5806 104.328 56.249 103.88 55.8198 cv
102.76 54.7373 102.2 53.3555 102.2 51.6758 cv
102.2 50.7983 102.316 49.9956 102.55 49.2676 cv
102.783 48.5396 103.119 47.9194 103.558 47.4058 cv
103.996 46.8926 104.519 46.4912 105.125 46.2017 cv
105.732 45.9126 106.4 45.7676 107.128 45.7676 cv
108.136 45.7676 108.934 45.9453 109.521 46.2998 cv
110.11 46.6543 110.553 47.0186 110.852 47.3916 cv
111.654 48.4185 112.056 49.8467 112.056 51.6758 cv
112.056 52.9917 li
109.396 52.9917 li
109.396 51.6758 li
109.396 50.873 109.316 50.2476 109.158 49.7998 cv
108.999 49.3516 108.798 49.0298 108.556 48.8335 cv
108.313 48.6377 108.061 48.5215 107.8 48.4834 cv
107.538 48.4463 107.314 48.4277 107.128 48.4277 cv
106.586 48.4277 106.166 48.5586 105.868 48.8198 cv
105.569 49.0811 105.34 49.3936 105.182 49.7578 cv
105.023 50.1216 104.925 50.4858 104.888 50.8496 cv
104.85 51.2139 104.831 51.4893 104.831 51.6758 cv
104.831 52.1611 104.906 52.5767 105.056 52.9219 cv
105.205 53.2671 105.401 53.5654 105.644 53.8179 cv
105.886 54.0698 106.162 54.2847 106.47 54.4614 cv
106.778 54.6392 107.1 54.7935 107.436 54.9238 cv
107.884 55.1196 li
108.145 55.2314 108.504 55.3955 108.962 55.6099 cv
109.419 55.8242 109.872 56.1465 110.32 56.5757 cv
111.477 57.6396 112.056 59.0117 112.056 60.6914 cv
112.056 62.2783 111.664 63.5942 110.88 64.6396 cv
109.965 65.8154 108.714 66.4038 107.128 66.4038 cv
cp
f
115.947 48.4277 mo
115.947 54.7837 li
121.855 54.7837 li
121.855 57.4155 li
115.947 57.4155 li
115.947 63.7998 li
121.855 63.7998 li
121.855 66.4316 li
113.315 66.4316 li
113.315 45.7954 li
121.855 45.7954 li
121.855 48.4277 li
115.947 48.4277 li
cp
f
128.66 66.4038 mo
127.017 66.4038 125.775 65.8716 124.935 64.8076 cv
124.133 63.8184 123.731 62.3994 123.731 60.5518 cv
123.731 59.2358 li
126.363 59.2358 li
126.363 60.5518 li
126.363 61.7651 126.578 62.6333 127.007 63.1558 cv
127.101 63.2866 127.269 63.4219 127.511 63.5615 cv
127.754 63.7017 128.137 63.7715 128.66 63.7715 cv
129.164 63.7715 129.564 63.6646 129.863 63.4497 cv
130.162 63.2354 130.391 62.9736 130.549 62.6655 cv
130.708 62.3574 130.811 62.0215 130.857 61.6577 cv
130.904 61.2935 130.927 60.9717 130.927 60.6914 cv
130.927 60.2065 130.852 59.7954 130.704 59.4595 cv
130.554 59.1235 130.358 58.8394 130.115 58.6055 cv
129.873 58.3726 129.602 58.1763 129.303 58.0176 cv
129.004 57.8594 128.706 57.7144 128.407 57.5835 cv
127.903 57.3599 li
127.604 57.2295 127.227 57.0474 126.769 56.8135 cv
126.312 56.5806 125.859 56.249 125.412 55.8198 cv
124.291 54.7373 123.731 53.3555 123.731 51.6758 cv
123.731 50.7983 123.848 49.9956 124.081 49.2676 cv
124.314 48.5396 124.65 47.9194 125.089 47.4058 cv
125.528 46.8926 126.051 46.4912 126.657 46.2017 cv
127.264 45.9126 127.932 45.7676 128.66 45.7676 cv
129.667 45.7676 130.465 45.9453 131.053 46.2998 cv
131.642 46.6543 132.085 47.0186 132.383 47.3916 cv
133.186 48.4185 133.587 49.8467 133.587 51.6758 cv
133.587 52.9917 li
130.927 52.9917 li
130.927 51.6758 li
130.927 50.873 130.848 50.2476 130.689 49.7998 cv
130.531 49.3516 130.33 49.0298 130.087 48.8335 cv
129.845 48.6377 129.593 48.5215 129.331 48.4834 cv
129.07 48.4463 128.846 48.4277 128.66 48.4277 cv
128.118 48.4277 127.698 48.5586 127.399 48.8198 cv
127.101 49.0811 126.872 49.3936 126.713 49.7578 cv
126.555 50.1216 126.456 50.4858 126.419 50.8496 cv
126.382 51.2139 126.363 51.4893 126.363 51.6758 cv
126.363 52.1611 126.438 52.5767 126.587 52.9219 cv
126.737 53.2671 126.933 53.5654 127.175 53.8179 cv
127.418 54.0698 127.693 54.2847 128.001 54.4614 cv
128.31 54.6392 128.631 54.7935 128.967 54.9238 cv
129.415 55.1196 li
129.677 55.2314 130.036 55.3955 130.494 55.6099 cv
130.951 55.8242 131.403 56.1465 131.852 56.5757 cv
133.009 57.6396 133.587 59.0117 133.587 60.6914 cv
133.587 62.2783 133.195 63.5942 132.412 64.6396 cv
131.497 65.8154 130.246 66.4038 128.66 66.4038 cv
cp
f
374.775 202.617 mo
374.005 202.617 373.375 202.564 372.85 202.457 cv
365.111 200.868 360.453 197.676 357.703 194.787 cv
360.522 197.473 365.03 200.283 372.136 201.742 cv
372.66 201.85 373.291 201.903 374.061 201.903 cv
377.224 201.903 381.751 200.992 382.816 200.768 cv
383.858 200.956 388.205 201.701 391.54 201.701 cv
392.676 201.701 393.569 201.617 394.271 201.442 cv
408.188 197.991 412.367 188.768 412.367 187.885 cv
412.367 187.639 li
412.265 187.415 li
412.237 187.357 li
412.308 187.336 li
411.523 186.108 li
411.507 186.082 li
411.049 185.365 li
411.027 185.372 li
410.477 184.59 409.72 183.628 408.721 182.589 cv
410.082 183.898 411.067 185.127 411.741 186.086 cv
411.764 186.08 li
412.222 186.796 li
412.237 186.822 li
413.023 188.05 li
412.951 188.072 li
412.979 188.129 li
413.081 188.353 li
413.081 188.599 li
413.081 189.482 408.902 198.705 394.986 202.156 cv
394.283 202.331 393.39 202.415 392.254 202.415 cv
388.92 202.415 384.572 201.67 383.53 201.482 cv
382.465 201.707 377.938 202.617 374.775 202.617 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
374.061 201.903 mo
373.291 201.903 372.66 201.85 372.136 201.742 cv
365.03 200.283 360.522 197.473 357.703 194.787 cv
357.452 194.548 357.214 194.309 356.989 194.073 cv
359.808 196.759 364.315 199.569 371.422 201.028 cv
371.946 201.136 372.577 201.188 373.347 201.188 cv
376.509 201.188 381.036 200.278 382.102 200.054 cv
383.143 200.241 387.491 200.987 390.825 200.987 cv
391.962 200.987 392.854 200.902 393.557 200.728 cv
407.474 197.277 411.653 188.053 411.653 187.17 cv
411.653 186.924 li
411.55 186.701 li
411.523 186.643 li
411.594 186.622 li
410.809 185.394 li
410.793 185.368 li
410.335 184.651 li
410.313 184.658 li
409.763 183.875 409.006 182.914 408.007 181.875 cv
408.258 182.116 408.495 182.355 408.721 182.589 cv
409.72 183.628 410.477 184.59 411.027 185.372 cv
411.049 185.365 li
411.507 186.082 li
411.523 186.108 li
412.308 187.336 li
412.237 187.357 li
412.265 187.415 li
412.367 187.639 li
412.367 187.885 li
412.367 188.768 408.188 197.991 394.271 201.442 cv
393.569 201.617 392.676 201.701 391.54 201.701 cv
388.205 201.701 383.858 200.956 382.816 200.768 cv
381.751 200.992 377.224 201.903 374.061 201.903 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
373.347 201.188 mo
372.577 201.188 371.946 201.136 371.422 201.028 cv
364.315 199.569 359.808 196.759 356.989 194.073 cv
356.738 193.834 356.5 193.595 356.275 193.359 cv
359.095 196.045 363.602 198.855 370.708 200.314 cv
371.232 200.421 371.862 200.474 372.632 200.474 cv
375.795 200.474 380.322 199.564 381.387 199.34 cv
382.429 199.527 386.777 200.272 390.111 200.272 cv
391.247 200.272 392.14 200.188 392.843 200.013 cv
406.759 196.562 410.938 187.339 410.938 186.456 cv
410.938 186.21 li
410.836 185.986 li
410.808 185.929 li
410.88 185.907 li
410.095 184.679 li
410.079 184.654 li
409.621 183.937 li
409.598 183.944 li
409.049 183.161 408.292 182.2 407.293 181.162 cv
407.544 181.403 407.782 181.641 408.007 181.875 cv
409.006 182.914 409.763 183.875 410.313 184.658 cv
410.335 184.651 li
410.793 185.368 li
410.809 185.394 li
411.594 186.622 li
411.523 186.643 li
411.55 186.701 li
411.653 186.924 li
411.653 187.17 li
411.653 188.053 407.474 197.277 393.557 200.728 cv
392.854 200.902 391.962 200.987 390.825 200.987 cv
387.491 200.987 383.143 200.241 382.102 200.054 cv
381.036 200.278 376.509 201.188 373.347 201.188 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
372.632 200.474 mo
371.862 200.474 371.232 200.421 370.708 200.314 cv
363.602 198.855 359.095 196.045 356.275 193.359 cv
356.024 193.12 355.786 192.881 355.56 192.644 cv
358.379 195.33 362.887 198.141 369.993 199.599 cv
370.518 199.707 371.148 199.76 371.918 199.76 cv
375.081 199.76 379.608 198.849 380.673 198.625 cv
381.715 198.813 386.063 199.558 389.397 199.558 cv
390.533 199.558 391.426 199.474 392.129 199.299 cv
406.045 195.848 410.224 186.625 410.224 185.742 cv
410.224 185.496 li
410.122 185.272 li
410.094 185.215 li
410.166 185.193 li
409.38 183.965 li
409.365 183.939 li
408.906 183.223 li
408.884 183.229 li
408.334 182.447 407.577 181.485 406.578 180.446 cv
406.829 180.688 407.068 180.927 407.293 181.162 cv
408.292 182.2 409.049 183.161 409.598 183.944 cv
409.621 183.937 li
410.079 184.654 li
410.095 184.679 li
410.88 185.907 li
410.808 185.929 li
410.836 185.986 li
410.938 186.21 li
410.938 186.456 li
410.938 187.339 406.759 196.562 392.843 200.013 cv
392.14 200.188 391.247 200.272 390.111 200.272 cv
386.777 200.272 382.429 199.527 381.387 199.34 cv
380.322 199.564 375.795 200.474 372.632 200.474 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
371.918 199.76 mo
371.148 199.76 370.518 199.707 369.993 199.599 cv
362.887 198.141 358.379 195.33 355.56 192.644 cv
355.309 192.405 355.072 192.167 354.847 191.931 cv
357.666 194.617 362.174 197.427 369.279 198.885 cv
369.803 198.993 370.434 199.045 371.204 199.045 cv
374.367 199.045 378.893 198.135 379.959 197.911 cv
381.001 198.099 385.348 198.844 388.682 198.844 cv
389.819 198.844 390.712 198.759 391.414 198.585 cv
405.331 195.134 409.51 185.911 409.51 185.028 cv
409.51 184.781 li
409.408 184.558 li
409.38 184.5 li
409.451 184.479 li
408.666 183.251 li
408.65 183.225 li
408.192 182.508 li
408.17 182.515 li
407.62 181.732 406.863 180.771 405.864 179.732 cv
406.115 179.973 406.353 180.212 406.578 180.446 cv
407.577 181.485 408.334 182.447 408.884 183.229 cv
408.906 183.223 li
409.365 183.939 li
409.38 183.965 li
410.166 185.193 li
410.094 185.215 li
410.122 185.272 li
410.224 185.496 li
410.224 185.742 li
410.224 186.625 406.045 195.848 392.129 199.299 cv
391.426 199.474 390.533 199.558 389.397 199.558 cv
386.063 199.558 381.715 198.813 380.673 198.625 cv
379.608 198.849 375.081 199.76 371.918 199.76 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
371.204 199.045 mo
370.434 199.045 369.803 198.993 369.279 198.885 cv
362.174 197.427 357.666 194.617 354.847 191.931 cv
354.596 191.692 354.357 191.452 354.132 191.216 cv
356.951 193.902 361.459 196.712 368.565 198.171 cv
369.089 198.279 369.719 198.331 370.49 198.331 cv
373.652 198.331 378.179 197.421 379.245 197.197 cv
380.286 197.384 384.634 198.129 387.968 198.129 cv
389.105 198.129 389.997 198.045 390.7 197.871 cv
404.616 194.42 408.795 185.196 408.795 184.313 cv
408.795 184.067 li
408.693 183.844 li
408.665 183.786 li
408.737 183.765 li
407.952 182.537 li
407.936 182.511 li
407.478 181.794 li
407.455 181.801 li
406.906 181.018 406.149 180.056 405.15 179.018 cv
405.401 179.259 405.639 179.498 405.864 179.732 cv
406.863 180.771 407.62 181.732 408.17 182.515 cv
408.192 182.508 li
408.65 183.225 li
408.666 183.251 li
409.451 184.479 li
409.38 184.5 li
409.408 184.558 li
409.51 184.781 li
409.51 185.028 li
409.51 185.911 405.331 195.134 391.414 198.585 cv
390.712 198.759 389.819 198.844 388.682 198.844 cv
385.348 198.844 381.001 198.099 379.959 197.911 cv
378.893 198.135 374.367 199.045 371.204 199.045 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
370.49 198.331 mo
369.719 198.331 369.089 198.279 368.565 198.171 cv
361.459 196.712 356.951 193.902 354.132 191.216 cv
353.88 190.976 353.643 190.738 353.418 190.502 cv
356.237 193.187 360.745 195.998 367.85 197.457 cv
368.375 197.564 369.005 197.617 369.775 197.617 cv
372.938 197.617 377.465 196.707 378.53 196.482 cv
379.572 196.67 383.92 197.415 387.254 197.415 cv
388.39 197.415 389.283 197.331 389.986 197.156 cv
403.902 193.705 408.081 184.482 408.081 183.599 cv
408.081 183.353 li
407.979 183.129 li
407.951 183.072 li
408.023 183.05 li
407.237 181.822 li
407.222 181.796 li
406.764 181.08 li
406.741 181.086 li
406.191 180.304 405.435 179.342 404.436 178.304 cv
404.686 178.545 404.924 178.784 405.15 179.018 cv
406.149 180.056 406.906 181.018 407.455 181.801 cv
407.478 181.794 li
407.936 182.511 li
407.952 182.537 li
408.737 183.765 li
408.665 183.786 li
408.693 183.844 li
408.795 184.067 li
408.795 184.313 li
408.795 185.196 404.616 194.42 390.7 197.871 cv
389.997 198.045 389.105 198.129 387.968 198.129 cv
384.634 198.129 380.286 197.384 379.245 197.197 cv
378.179 197.421 373.652 198.331 370.49 198.331 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
369.775 197.617 mo
369.005 197.617 368.375 197.564 367.85 197.457 cv
360.745 195.998 356.237 193.187 353.418 190.502 cv
353.166 190.262 352.929 190.024 352.704 189.788 cv
355.523 192.474 360.031 195.284 367.136 196.742 cv
367.66 196.85 368.291 196.903 369.061 196.903 cv
372.224 196.903 376.751 195.992 377.816 195.768 cv
378.858 195.956 383.206 196.701 386.54 196.701 cv
387.676 196.701 388.569 196.617 389.271 196.442 cv
403.188 192.991 407.367 183.768 407.367 182.885 cv
407.367 182.639 li
407.265 182.415 li
407.237 182.357 li
407.308 182.336 li
406.523 181.108 li
406.507 181.082 li
406.049 180.365 li
406.027 180.372 li
405.477 179.59 404.72 178.628 403.721 177.589 cv
403.972 177.831 404.21 178.069 404.436 178.304 cv
405.435 179.342 406.191 180.304 406.741 181.086 cv
406.764 181.08 li
407.222 181.796 li
407.237 181.822 li
408.023 183.05 li
407.951 183.072 li
407.979 183.129 li
408.081 183.353 li
408.081 183.599 li
408.081 184.482 403.902 193.705 389.986 197.156 cv
389.283 197.331 388.39 197.415 387.254 197.415 cv
383.92 197.415 379.572 196.67 378.53 196.482 cv
377.465 196.707 372.938 197.617 369.775 197.617 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
369.061 196.903 mo
368.291 196.903 367.66 196.85 367.136 196.742 cv
360.031 195.284 355.523 192.474 352.704 189.788 cv
352.453 189.549 352.214 189.31 351.989 189.073 cv
354.808 191.759 359.316 194.569 366.422 196.028 cv
366.946 196.136 367.577 196.188 368.347 196.188 cv
371.509 196.188 376.036 195.278 377.102 195.054 cv
378.143 195.241 382.491 195.987 385.825 195.987 cv
386.962 195.987 387.854 195.902 388.557 195.728 cv
402.474 192.277 406.653 183.053 406.653 182.17 cv
406.653 181.924 li
406.55 181.701 li
406.523 181.643 li
406.594 181.622 li
405.809 180.394 li
405.793 180.368 li
405.335 179.651 li
405.313 179.658 li
404.763 178.876 404.006 177.914 403.007 176.875 cv
403.258 177.116 403.496 177.355 403.721 177.589 cv
404.72 178.628 405.477 179.59 406.027 180.372 cv
406.049 180.365 li
406.507 181.082 li
406.523 181.108 li
407.308 182.336 li
407.237 182.357 li
407.265 182.415 li
407.367 182.639 li
407.367 182.885 li
407.367 183.768 403.188 192.991 389.271 196.442 cv
388.569 196.617 387.676 196.701 386.54 196.701 cv
383.206 196.701 378.858 195.956 377.816 195.768 cv
376.751 195.992 372.224 196.903 369.061 196.903 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
368.347 196.188 mo
367.577 196.188 366.946 196.136 366.422 196.028 cv
359.316 194.569 354.808 191.759 351.989 189.073 cv
351.738 188.834 351.5 188.596 351.275 188.359 cv
354.094 191.045 358.602 193.855 365.707 195.314 cv
366.232 195.421 366.862 195.474 367.632 195.474 cv
370.795 195.474 375.322 194.564 376.387 194.34 cv
377.429 194.527 381.777 195.272 385.111 195.272 cv
386.247 195.272 387.14 195.188 387.843 195.013 cv
401.759 191.562 405.938 182.339 405.938 181.456 cv
405.938 181.21 li
405.836 180.986 li
405.808 180.929 li
405.88 180.907 li
405.095 179.679 li
405.079 179.654 li
404.621 178.937 li
404.598 178.944 li
404.049 178.161 403.292 177.199 402.293 176.161 cv
402.544 176.403 402.782 176.641 403.007 176.875 cv
404.006 177.914 404.763 178.876 405.313 179.658 cv
405.335 179.651 li
405.793 180.368 li
405.809 180.394 li
406.594 181.622 li
406.523 181.643 li
406.55 181.701 li
406.653 181.924 li
406.653 182.17 li
406.653 183.053 402.474 192.277 388.557 195.728 cv
387.854 195.902 386.962 195.987 385.825 195.987 cv
382.491 195.987 378.143 195.241 377.102 195.054 cv
376.036 195.278 371.509 196.188 368.347 196.188 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
367.632 195.474 mo
366.862 195.474 366.232 195.421 365.707 195.314 cv
358.602 193.855 354.094 191.045 351.275 188.359 cv
351.024 188.12 350.786 187.881 350.561 187.644 cv
353.38 190.33 357.888 193.141 364.993 194.599 cv
365.518 194.707 366.148 194.76 366.918 194.76 cv
370.081 194.76 374.608 193.849 375.673 193.625 cv
376.715 193.813 381.063 194.558 384.397 194.558 cv
385.533 194.558 386.426 194.474 387.129 194.299 cv
401.045 190.848 405.224 181.625 405.224 180.742 cv
405.224 180.496 li
405.122 180.272 li
405.094 180.215 li
405.166 180.193 li
404.38 178.965 li
404.365 178.939 li
403.906 178.223 li
403.884 178.229 li
403.334 177.447 402.577 176.485 401.578 175.446 cv
401.829 175.688 402.067 175.926 402.293 176.161 cv
403.292 177.199 404.049 178.161 404.598 178.944 cv
404.621 178.937 li
405.079 179.654 li
405.095 179.679 li
405.88 180.907 li
405.808 180.929 li
405.836 180.986 li
405.938 181.21 li
405.938 181.456 li
405.938 182.339 401.759 191.562 387.843 195.013 cv
387.14 195.188 386.247 195.272 385.111 195.272 cv
381.777 195.272 377.429 194.527 376.387 194.34 cv
375.322 194.564 370.795 195.474 367.632 195.474 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
366.918 194.76 mo
366.148 194.76 365.518 194.707 364.993 194.599 cv
357.888 193.141 353.38 190.33 350.561 187.644 cv
350.309 187.405 350.071 187.167 349.846 186.93 cv
352.665 189.616 357.173 192.427 364.279 193.885 cv
364.803 193.993 365.434 194.045 366.204 194.045 cv
369.367 194.045 373.893 193.135 374.959 192.911 cv
376.001 193.099 380.348 193.844 383.682 193.844 cv
384.819 193.844 385.712 193.759 386.414 193.585 cv
400.331 190.134 404.51 180.911 404.51 180.028 cv
404.51 179.781 li
404.408 179.558 li
404.38 179.5 li
404.451 179.479 li
403.666 178.251 li
403.65 178.225 li
403.192 177.508 li
403.17 177.515 li
402.62 176.733 401.863 175.771 400.865 174.733 cv
401.115 174.974 401.353 175.212 401.578 175.446 cv
402.577 176.485 403.334 177.447 403.884 178.229 cv
403.906 178.223 li
404.365 178.939 li
404.38 178.965 li
405.166 180.193 li
405.094 180.215 li
405.122 180.272 li
405.224 180.496 li
405.224 180.742 li
405.224 181.625 401.045 190.848 387.129 194.299 cv
386.426 194.474 385.533 194.558 384.397 194.558 cv
381.063 194.558 376.715 193.813 375.673 193.625 cv
374.608 193.849 370.081 194.76 366.918 194.76 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
366.204 194.045 mo
365.434 194.045 364.803 193.993 364.279 193.885 cv
357.173 192.427 352.665 189.616 349.846 186.93 cv
349.595 186.691 349.358 186.453 349.132 186.216 cv
351.952 188.902 356.459 191.712 363.565 193.171 cv
364.089 193.279 364.72 193.331 365.49 193.331 cv
368.652 193.331 373.179 192.421 374.244 192.197 cv
375.286 192.384 379.634 193.129 382.968 193.129 cv
384.105 193.129 384.997 193.045 385.7 192.871 cv
399.616 189.42 403.796 180.196 403.796 179.313 cv
403.796 179.067 li
403.693 178.844 li
403.665 178.786 li
403.737 178.765 li
402.952 177.537 li
402.936 177.511 li
402.478 176.794 li
402.456 176.801 li
401.906 176.018 401.148 175.056 400.15 174.018 cv
400.401 174.259 400.639 174.498 400.865 174.733 cv
401.863 175.771 402.62 176.733 403.17 177.515 cv
403.192 177.508 li
403.65 178.225 li
403.666 178.251 li
404.451 179.479 li
404.38 179.5 li
404.408 179.558 li
404.51 179.781 li
404.51 180.028 li
404.51 180.911 400.331 190.134 386.414 193.585 cv
385.712 193.759 384.819 193.844 383.682 193.844 cv
380.348 193.844 376.001 193.099 374.959 192.911 cv
373.893 193.135 369.367 194.045 366.204 194.045 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
365.49 193.331 mo
364.72 193.331 364.089 193.279 363.565 193.171 cv
356.459 191.712 351.952 188.902 349.132 186.216 cv
348.881 185.977 348.643 185.738 348.418 185.501 cv
351.237 188.188 355.744 190.998 362.85 192.457 cv
363.375 192.564 364.005 192.617 364.775 192.617 cv
367.938 192.617 372.465 191.707 373.53 191.482 cv
374.572 191.67 378.92 192.415 382.254 192.415 cv
383.39 192.415 384.283 192.331 384.986 192.156 cv
398.902 188.705 403.081 179.482 403.081 178.599 cv
403.081 178.353 li
402.979 178.129 li
402.951 178.072 li
403.023 178.05 li
402.238 176.822 li
402.222 176.797 li
401.764 176.08 li
401.741 176.086 li
401.191 175.304 400.435 174.342 399.436 173.304 cv
399.686 173.545 399.924 173.783 400.15 174.018 cv
401.148 175.056 401.906 176.018 402.456 176.801 cv
402.478 176.794 li
402.936 177.511 li
402.952 177.537 li
403.737 178.765 li
403.665 178.786 li
403.693 178.844 li
403.796 179.067 li
403.796 179.313 li
403.796 180.196 399.616 189.42 385.7 192.871 cv
384.997 193.045 384.105 193.129 382.968 193.129 cv
379.634 193.129 375.286 192.384 374.244 192.197 cv
373.179 192.421 368.652 193.331 365.49 193.331 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
364.775 192.617 mo
364.005 192.617 363.375 192.564 362.85 192.457 cv
355.744 190.998 351.237 188.188 348.418 185.501 cv
348.167 185.262 347.929 185.024 347.704 184.788 cv
350.524 187.474 355.031 190.284 362.136 191.742 cv
362.66 191.85 363.291 191.902 364.061 191.902 cv
367.224 191.902 371.751 190.992 372.816 190.768 cv
373.858 190.956 378.205 191.701 381.54 191.701 cv
382.676 191.701 383.569 191.617 384.271 191.442 cv
398.188 187.991 402.367 178.768 402.367 177.885 cv
402.367 177.639 li
402.265 177.415 li
402.237 177.358 li
402.309 177.336 li
401.523 176.108 li
401.507 176.082 li
401.049 175.365 li
401.027 175.372 li
400.477 174.59 399.721 173.628 398.722 172.59 cv
398.972 172.831 399.21 173.07 399.436 173.304 cv
400.435 174.342 401.191 175.304 401.741 176.086 cv
401.764 176.08 li
402.222 176.797 li
402.238 176.822 li
403.023 178.05 li
402.951 178.072 li
402.979 178.129 li
403.081 178.353 li
403.081 178.599 li
403.081 179.482 398.902 188.705 384.986 192.156 cv
384.283 192.331 383.39 192.415 382.254 192.415 cv
378.92 192.415 374.572 191.67 373.53 191.482 cv
372.465 191.707 367.938 192.617 364.775 192.617 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
364.061 191.902 mo
363.291 191.902 362.66 191.85 362.136 191.742 cv
355.031 190.284 350.524 187.474 347.704 184.788 cv
347.453 184.549 347.214 184.31 346.989 184.073 cv
349.808 186.759 354.315 189.569 361.422 191.028 cv
361.946 191.136 362.577 191.188 363.347 191.188 cv
366.509 191.188 371.036 190.278 372.102 190.054 cv
373.143 190.242 377.491 190.987 380.825 190.987 cv
381.962 190.987 382.854 190.902 383.557 190.728 cv
397.474 187.277 401.653 178.053 401.653 177.17 cv
401.653 176.924 li
401.55 176.701 li
401.523 176.643 li
401.594 176.622 li
400.809 175.394 li
400.793 175.368 li
400.335 174.651 li
400.313 174.658 li
399.763 173.875 399.006 172.913 398.007 171.875 cv
398.258 172.116 398.496 172.355 398.722 172.59 cv
399.721 173.628 400.477 174.59 401.027 175.372 cv
401.049 175.365 li
401.507 176.082 li
401.523 176.108 li
402.309 177.336 li
402.237 177.358 li
402.265 177.415 li
402.367 177.639 li
402.367 177.885 li
402.367 178.768 398.188 187.991 384.271 191.442 cv
383.569 191.617 382.676 191.701 381.54 191.701 cv
378.205 191.701 373.858 190.956 372.816 190.768 cv
371.751 190.992 367.224 191.902 364.061 191.902 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
363.347 191.188 mo
362.577 191.188 361.946 191.136 361.422 191.028 cv
354.315 189.569 349.808 186.759 346.989 184.073 cv
346.738 183.833 346.5 183.595 346.275 183.359 cv
349.094 186.045 353.601 188.855 360.707 190.314 cv
361.232 190.421 361.862 190.474 362.632 190.474 cv
365.795 190.474 370.322 189.564 371.387 189.34 cv
372.429 189.527 376.777 190.272 380.111 190.272 cv
381.247 190.272 382.14 190.188 382.843 190.014 cv
396.759 186.562 400.938 177.339 400.938 176.456 cv
400.938 176.21 li
400.836 175.986 li
400.808 175.929 li
400.88 175.907 li
400.095 174.679 li
400.079 174.654 li
399.621 173.937 li
399.598 173.944 li
399.049 173.161 398.292 172.2 397.293 171.162 cv
397.544 171.403 397.781 171.64 398.007 171.875 cv
399.006 172.913 399.763 173.875 400.313 174.658 cv
400.335 174.651 li
400.793 175.368 li
400.809 175.394 li
401.594 176.622 li
401.523 176.643 li
401.55 176.701 li
401.653 176.924 li
401.653 177.17 li
401.653 178.053 397.474 187.277 383.557 190.728 cv
382.854 190.902 381.962 190.987 380.825 190.987 cv
377.491 190.987 373.143 190.242 372.102 190.054 cv
371.036 190.278 366.509 191.188 363.347 191.188 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
362.632 190.474 mo
361.862 190.474 361.232 190.421 360.707 190.314 cv
353.601 188.855 349.094 186.045 346.275 183.359 cv
346.024 183.12 345.786 182.881 345.561 182.645 cv
348.38 185.331 352.888 188.141 359.993 189.599 cv
360.518 189.707 361.148 189.76 361.918 189.76 cv
365.081 189.76 369.608 188.849 370.673 188.625 cv
371.715 188.813 376.063 189.558 379.397 189.558 cv
380.533 189.558 381.426 189.474 382.129 189.299 cv
396.045 185.848 400.224 176.625 400.224 175.742 cv
400.224 175.496 li
400.122 175.272 li
400.094 175.215 li
400.166 175.193 li
399.38 173.965 li
399.365 173.939 li
398.906 173.223 li
398.884 173.229 li
398.334 172.447 397.577 171.485 396.578 170.446 cv
396.829 170.688 397.068 170.927 397.293 171.162 cv
398.292 172.2 399.049 173.161 399.598 173.944 cv
399.621 173.937 li
400.079 174.654 li
400.095 174.679 li
400.88 175.907 li
400.808 175.929 li
400.836 175.986 li
400.938 176.21 li
400.938 176.456 li
400.938 177.339 396.759 186.562 382.843 190.014 cv
382.14 190.188 381.247 190.272 380.111 190.272 cv
376.777 190.272 372.429 189.527 371.387 189.34 cv
370.322 189.564 365.795 190.474 362.632 190.474 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
361.918 189.76 mo
361.148 189.76 360.518 189.707 359.993 189.599 cv
352.888 188.141 348.38 185.331 345.561 182.645 cv
345.309 182.405 345.071 182.167 344.846 181.93 cv
347.665 184.616 352.173 187.426 359.279 188.885 cv
359.803 188.993 360.434 189.045 361.204 189.045 cv
364.366 189.045 368.894 188.135 369.959 187.911 cv
371.001 188.099 375.348 188.844 378.682 188.844 cv
379.819 188.844 380.712 188.759 381.414 188.585 cv
395.331 185.134 399.51 175.911 399.51 175.028 cv
399.51 174.781 li
399.408 174.558 li
399.38 174.5 li
399.451 174.479 li
398.666 173.251 li
398.65 173.225 li
398.192 172.508 li
398.17 172.515 li
397.62 171.732 396.863 170.771 395.864 169.732 cv
396.115 169.973 396.353 170.212 396.578 170.446 cv
397.577 171.485 398.334 172.447 398.884 173.229 cv
398.906 173.223 li
399.365 173.939 li
399.38 173.965 li
400.166 175.193 li
400.094 175.215 li
400.122 175.272 li
400.224 175.496 li
400.224 175.742 li
400.224 176.625 396.045 185.848 382.129 189.299 cv
381.426 189.474 380.533 189.558 379.397 189.558 cv
376.063 189.558 371.715 188.813 370.673 188.625 cv
369.608 188.849 365.081 189.76 361.918 189.76 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
361.204 189.045 mo
360.434 189.045 359.803 188.993 359.279 188.885 cv
352.173 187.426 347.665 184.616 344.846 181.93 cv
344.595 181.691 344.358 181.453 344.133 181.217 cv
346.952 183.903 351.459 186.712 358.565 188.171 cv
359.089 188.279 359.72 188.331 360.49 188.331 cv
363.652 188.331 368.179 187.421 369.244 187.197 cv
370.286 187.384 374.634 188.129 377.968 188.129 cv
379.105 188.129 379.997 188.045 380.7 187.871 cv
394.616 184.42 398.796 175.196 398.796 174.313 cv
398.796 174.067 li
398.693 173.844 li
398.665 173.786 li
398.737 173.765 li
397.952 172.537 li
397.936 172.511 li
397.478 171.794 li
397.456 171.801 li
396.906 171.018 396.149 170.057 395.151 169.019 cv
395.401 169.259 395.639 169.498 395.864 169.732 cv
396.863 170.771 397.62 171.732 398.17 172.515 cv
398.192 172.508 li
398.65 173.225 li
398.666 173.251 li
399.451 174.479 li
399.38 174.5 li
399.408 174.558 li
399.51 174.781 li
399.51 175.028 li
399.51 175.911 395.331 185.134 381.414 188.585 cv
380.712 188.759 379.819 188.844 378.682 188.844 cv
375.348 188.844 371.001 188.099 369.959 187.911 cv
368.894 188.135 364.366 189.045 361.204 189.045 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
360.49 188.331 mo
359.72 188.331 359.089 188.279 358.565 188.171 cv
351.459 186.712 346.952 183.903 344.133 181.217 cv
343.882 180.977 343.643 180.738 343.418 180.502 cv
346.237 183.188 350.745 185.998 357.85 187.457 cv
358.375 187.564 359.005 187.617 359.775 187.617 cv
362.938 187.617 367.465 186.707 368.53 186.482 cv
369.572 186.67 373.92 187.415 377.254 187.415 cv
378.39 187.415 379.283 187.331 379.986 187.156 cv
393.902 183.705 398.081 174.482 398.081 173.599 cv
398.081 173.353 li
397.979 173.129 li
397.951 173.072 li
398.023 173.05 li
397.237 171.822 li
397.222 171.797 li
396.764 171.08 li
396.741 171.086 li
396.191 170.304 395.434 169.342 394.435 168.303 cv
394.686 168.545 394.925 168.784 395.151 169.019 cv
396.149 170.057 396.906 171.018 397.456 171.801 cv
397.478 171.794 li
397.936 172.511 li
397.952 172.537 li
398.737 173.765 li
398.665 173.786 li
398.693 173.844 li
398.796 174.067 li
398.796 174.313 li
398.796 175.196 394.616 184.42 380.7 187.871 cv
379.997 188.045 379.105 188.129 377.968 188.129 cv
374.634 188.129 370.286 187.384 369.244 187.197 cv
368.179 187.421 363.652 188.331 360.49 188.331 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
359.775 187.617 mo
359.005 187.617 358.375 187.564 357.85 187.457 cv
350.745 185.998 346.237 183.188 343.418 180.502 cv
339.98 177.226 339.054 174.136 338.989 173.906 cv
338.886 173.541 li
339.024 173.189 li
339.075 173.066 li
339.004 173.044 li
339.716 171.815 li
339.729 171.793 li
340.162 171.044 li
340.189 171.052 li
342.131 168.068 347.032 162.423 357.392 159.956 cv
357.813 159.856 358.289 159.807 358.844 159.807 cv
362.01 159.807 366.945 161.483 368.461 162.025 cv
369.842 161.393 374.135 159.53 376.809 159.53 cv
377.147 159.53 377.461 159.558 377.741 159.615 cv
386.167 161.311 391.41 165.158 394.435 168.303 cv
395.434 169.342 396.191 170.304 396.741 171.086 cv
396.764 171.08 li
397.222 171.797 li
397.237 171.822 li
398.023 173.05 li
397.951 173.072 li
397.979 173.129 li
398.081 173.353 li
398.081 173.599 li
398.081 174.482 393.902 183.705 379.986 187.156 cv
379.283 187.331 378.39 187.415 377.254 187.415 cv
373.92 187.415 369.572 186.67 368.53 186.482 cv
367.465 186.707 362.938 187.617 359.775 187.617 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
368.598 207.761 mo
349.951 207.808 334.797 192.724 334.748 174.077 cv
334.706 155.428 349.784 140.275 368.432 140.227 cv
387.079 140.182 402.234 155.263 402.278 173.911 cv
402.327 192.56 387.246 207.713 368.598 207.761 cv
cp
428.688 187.915 mo
428.62 159.778 li
414.55 158.536 li
413.814 156.34 412.925 154.216 411.895 152.174 cv
420.909 141.289 li
400.963 121.442 li
390.135 130.512 li
388.095 129.495 385.968 128.615 383.773 127.89 cv
382.435 113.82 li
354.297 113.89 li
353.039 127.961 li
350.857 128.695 348.744 129.581 346.71 130.605 cv
335.81 121.602 li
315.961 141.547 li
325.025 152.388 li
324.009 154.427 323.136 156.545 322.41 158.733 cv
308.339 160.074 li
308.411 188.211 li
322.483 189.469 li
323.214 191.65 324.102 193.766 325.126 195.801 cv
316.123 206.7 li
336.068 226.547 li
346.909 217.482 li
348.952 218.499 351.074 219.379 353.268 220.104 cv
354.595 234.168 li
382.733 234.098 li
383.974 220.03 li
386.17 219.297 388.289 218.405 390.334 217.378 cv
401.22 226.389 li
421.067 206.439 li
411.998 195.611 li
413.017 193.566 413.896 191.436 414.624 189.239 cv
428.688 187.915 li
cp
.415686 .709804 .768627 rgb
f
373.96 133.474 mo
351.616 130.472 330.996 146.207 327.995 168.55 cv
324.993 190.892 340.727 211.511 363.071 214.513 cv
385.412 217.514 406.033 201.78 409.035 179.438 cv
412.037 157.095 396.3 136.475 373.96 133.474 cv
cp
362.933 215.551 mo
340.014 212.472 323.877 191.329 326.957 168.41 cv
330.035 145.495 351.181 129.356 374.099 132.436 cv
397.014 135.514 413.155 156.663 410.076 179.578 cv
406.997 202.496 385.847 218.63 362.933 215.551 cv
cp
1 1 1 rgb
f
367.177 248.383 mo
363.927 248.383 li
363.927 258 li
361.645 258 li
361.645 248.383 li
358.442 248.383 li
358.442 246.625 li
367.177 246.625 li
367.177 248.383 li
cp
.0588235 .168627 .188235 rgb
f
369.966 253.758 mo
372.536 253.758 li
371.278 249.75 li
371.231 249.75 li
369.966 253.758 li
cp
373.091 255.547 mo
369.403 255.547 li
368.638 258 li
366.255 258 li
370.091 246.625 li
372.427 246.625 li
376.247 258 li
373.864 258 li
373.091 255.547 li
cp
f
383.294 254.977 mo
383.294 254.545 383.143 254.203 382.841 253.953 cv
382.539 253.703 382 253.461 381.224 253.227 cv
379.916 252.836 378.924 252.371 378.247 251.832 cv
377.57 251.293 377.231 250.561 377.231 249.633 cv
377.231 248.701 377.61 247.939 378.368 247.348 cv
379.126 246.757 380.099 246.461 381.286 246.461 cv
382.547 246.461 383.56 246.779 384.329 247.414 cv
385.098 248.05 385.469 248.883 385.442 249.914 cv
385.427 249.961 li
383.224 249.961 li
383.224 249.394 383.051 248.957 382.704 248.652 cv
382.357 248.348 381.875 248.195 381.255 248.195 cv
380.692 248.195 380.262 248.331 379.962 248.602 cv
379.662 248.873 379.513 249.219 379.513 249.641 cv
379.513 250.026 379.678 250.343 380.009 250.59 cv
380.34 250.838 380.911 251.1 381.724 251.375 cv
382.984 251.73 383.942 252.184 384.599 252.738 cv
385.255 253.293 385.583 254.034 385.583 254.961 cv
385.583 255.94 385.2 256.719 384.435 257.297 cv
383.669 257.875 382.664 258.164 381.419 258.164 cv
380.2 258.164 379.152 257.859 378.274 257.25 cv
377.396 256.641 376.971 255.732 376.997 254.523 cv
377.013 254.477 li
379.224 254.477 li
379.224 255.148 379.42 255.644 379.813 255.961 cv
380.207 256.279 380.742 256.438 381.419 256.438 cv
382.028 256.438 382.493 256.303 382.813 256.031 cv
383.134 255.761 383.294 255.409 383.294 254.977 cv
cp
f
395.161 248.383 mo
391.911 248.383 li
391.911 258 li
389.63 258 li
389.63 248.383 li
386.427 248.383 li
386.427 246.625 li
395.161 246.625 li
395.161 248.383 li
cp
f
402.903 253 mo
398.677 253 li
398.677 256.25 li
403.7 256.25 li
403.7 258 li
396.395 258 li
396.395 246.625 li
403.677 246.625 li
403.677 248.383 li
398.677 248.383 li
398.677 251.242 li
402.903 251.242 li
402.903 253 li
cp
f
368.514 173.377 mo
368.514 173.377 356.89 175.642 351.688 174.838 cv
347.688 174.22 343.975 173.386 340.634 172.376 cv
340.196 173.133 340.014 173.599 340.014 173.599 cv
340.014 173.599 342.743 183.237 358.056 186.38 cv
361.039 186.993 368.514 185.359 368.514 185.359 cv
368.514 185.359 376.566 186.876 379.737 186.09 cv
393.476 182.683 397.014 173.6 397.014 173.599 cv
397.014 173.599 396.804 173.143 396.329 172.399 cv
392.164 173.652 387.42 174.63 382.276 175.263 cv
377.935 175.797 368.514 173.377 368.514 173.377 cv
cp
.992157 .752941 .0588235 rgb
f
341.255 173.734 mo
341.991 175.596 345.576 182.669 358.282 185.276 cv
358.652 185.352 359.148 185.391 359.758 185.391 cv
363.054 185.391 368.222 184.27 368.273 184.258 cv
368.497 184.21 li
368.723 184.252 li
368.772 184.261 373.743 185.189 377.271 185.189 cv
378.211 185.189 378.949 185.124 379.466 184.996 cv
390.445 182.273 394.644 175.737 395.686 173.762 cv
391.643 174.914 387.183 175.794 382.414 176.382 cv
381.953 176.439 381.426 176.467 380.847 176.467 cv
376.492 176.467 369.86 174.875 368.48 174.531 cv
367.016 174.808 359.686 176.138 354.415 176.138 cv
353.289 176.138 352.313 176.076 351.516 175.952 cv
347.876 175.389 344.43 174.644 341.255 173.734 cv
cp
359.758 187.645 mo
358.986 187.645 358.354 187.592 357.829 187.484 cv
342.027 184.241 339.048 174.327 338.93 173.906 cv
338.826 173.541 li
338.965 173.188 li
338.986 173.132 339.191 172.62 339.658 171.813 cv
340.105 171.039 li
340.96 171.297 li
344.292 172.305 347.959 173.121 351.859 173.725 cv
352.544 173.83 353.404 173.884 354.415 173.884 cv
359.956 173.884 368.216 172.287 368.298 172.271 cv
368.548 172.223 li
368.794 172.286 li
368.869 172.305 376.355 174.213 380.847 174.213 cv
381.335 174.213 381.77 174.19 382.139 174.145 cv
387.165 173.526 391.83 172.576 396.005 171.32 cv
396.82 171.075 li
397.279 171.793 li
397.781 172.579 398.013 173.074 398.038 173.128 cv
398.141 173.352 li
398.141 173.599 li
398.141 174.484 393.953 183.726 380.009 187.184 cv
379.305 187.358 378.41 187.443 377.271 187.443 cv
373.931 187.443 369.574 186.696 368.53 186.508 cv
367.463 186.733 362.927 187.645 359.758 187.645 cv
cp
.239216 .27451 .333333 rgb
f
377.537 160.692 mo
374.871 160.154 368.514 163.222 368.514 163.222 cv
368.514 163.222 360.727 160.288 357.631 161.025 cv
346.751 163.616 342.151 169.755 340.634 172.376 cv
343.975 173.386 347.688 174.22 351.688 174.838 cv
356.89 175.642 368.514 173.377 368.514 173.377 cv
368.514 173.377 377.935 175.797 382.276 175.263 cv
387.42 174.63 392.164 173.652 396.329 172.399 cv
394.586 169.672 389.263 163.052 377.537 160.692 cv
cp
.992157 .870588 .517647 rgb
f
368.548 172.223 mo
368.794 172.286 li
368.869 172.305 376.355 174.213 380.847 174.213 cv
380.848 174.213 li
381.335 174.213 381.77 174.19 382.139 174.145 cv
386.569 173.599 390.72 172.796 394.5 171.753 cv
392.206 168.748 387.069 163.76 377.314 161.797 cv
377.18 161.77 377.016 161.756 376.826 161.756 cv
374.631 161.756 370.435 163.547 369.003 164.237 cv
368.568 164.446 li
368.116 164.276 li
368.057 164.254 362.119 162.033 358.825 162.033 cv
358.451 162.033 358.138 162.063 357.892 162.122 cv
348.897 164.264 344.386 168.909 342.399 171.715 cv
345.338 172.532 348.513 173.207 351.859 173.725 cv
352.544 173.83 353.403 173.884 354.415 173.884 cv
359.956 173.884 368.216 172.287 368.298 172.271 cv
368.548 172.223 li
cp
380.847 176.467 mo
380.847 176.467 li
376.492 176.467 369.861 174.875 368.48 174.531 cv
367.016 174.808 359.686 176.138 354.415 176.138 cv
353.289 176.138 352.313 176.076 351.516 175.952 cv
347.511 175.333 343.74 174.493 340.308 173.456 cv
338.945 173.044 li
339.658 171.811 li
341.206 169.139 346.03 162.629 357.37 159.929 cv
357.792 159.828 358.269 159.779 358.825 159.779 cv
361.997 159.779 366.942 161.458 368.461 162.002 cv
369.845 161.368 374.146 159.501 376.826 159.501 cv
377.164 159.501 377.478 159.53 377.76 159.587 cv
389.897 162.03 395.453 168.936 397.278 171.792 cv
398.082 173.049 li
396.653 173.479 li
392.357 174.77 387.566 175.748 382.414 176.382 cv
381.953 176.439 381.427 176.467 380.847 176.467 cv
cp
.239216 .27451 .333333 rgb
f
245.448 288.921 mo
243.843 288.921 242.42 288.169 241.432 286.99 cv
242.342 287.75 243.482 288.207 244.734 288.207 cv
245.091 288.207 245.457 288.17 245.829 288.092 cv
260.721 284.974 273.876 273.338 277.344 256.057 cv
277.867 253.454 278.175 250.772 278.175 248.019 cv
278.171 247.781 li
278.175 247.529 li
278.175 235.593 273.412 225.25 266.176 217.838 cv
273.811 225.293 278.889 235.918 278.889 248.244 cv
278.885 248.495 li
278.889 248.733 li
278.889 251.486 278.596 254.171 278.059 256.771 cv
274.692 274.073 261.435 285.688 246.543 288.806 cv
246.171 288.884 245.805 288.921 245.448 288.921 cv
234.553 288.921 mo
234.196 288.921 233.829 288.884 233.457 288.806 cv
225.334 287.105 217.697 282.876 211.886 276.574 cv
211.931 276.618 211.974 276.66 212.018 276.704 cv
217.708 282.538 224.991 286.469 232.743 288.092 cv
233.115 288.17 233.482 288.207 233.839 288.207 cv
236.157 288.207 238.093 286.64 238.892 284.482 cv
239.019 284.61 239.151 284.732 239.289 284.847 cv
239.39 284.968 239.496 285.084 239.607 285.196 cv
238.807 287.355 236.872 288.921 234.553 288.921 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
244.734 288.207 mo
243.482 288.207 242.342 287.75 241.432 286.99 cv
241.174 286.775 240.935 286.535 240.717 286.275 cv
241.627 287.036 242.768 287.492 244.019 287.492 cv
244.377 287.492 244.742 287.455 245.115 287.377 cv
260.007 284.26 273.161 272.624 276.63 255.343 cv
277.152 252.739 277.46 250.058 277.46 247.304 cv
277.456 247.067 li
277.46 246.815 li
277.46 234.877 272.697 224.534 265.46 217.122 cv
265.701 217.358 265.939 217.595 266.176 217.838 cv
273.412 225.25 278.175 235.593 278.175 247.529 cv
278.171 247.781 li
278.175 248.019 li
278.175 250.772 277.867 253.454 277.344 256.057 cv
273.876 273.338 260.721 284.974 245.829 288.092 cv
245.457 288.17 245.091 288.207 244.734 288.207 cv
233.839 288.207 mo
233.482 288.207 233.115 288.17 232.743 288.092 cv
224.991 286.469 217.708 282.538 212.018 276.704 cv
217.597 282.145 224.597 285.822 232.028 287.377 cv
232.401 287.455 232.767 287.492 233.124 287.492 cv
235.443 287.492 237.379 285.926 238.178 283.768 cv
238.305 283.896 238.437 284.018 238.574 284.132 cv
238.676 284.254 238.782 284.37 238.892 284.482 cv
238.093 286.64 236.157 288.207 233.839 288.207 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
244.019 287.492 mo
242.768 287.492 241.627 287.036 240.717 286.275 cv
240.46 286.06 240.221 285.821 240.003 285.561 cv
240.913 286.321 242.054 286.778 243.305 286.778 cv
243.662 286.778 244.028 286.741 244.401 286.663 cv
259.293 283.545 272.447 271.91 275.916 254.629 cv
276.438 252.025 276.746 249.343 276.746 246.59 cv
276.742 246.352 li
276.746 246.101 li
276.746 234.164 271.983 223.821 264.747 216.409 cv
264.987 216.643 265.224 216.881 265.46 217.122 cv
272.697 224.534 277.46 234.877 277.46 246.815 cv
277.456 247.067 li
277.46 247.304 li
277.46 250.058 277.152 252.739 276.63 255.343 cv
273.161 272.624 260.007 284.26 245.115 287.377 cv
244.742 287.455 244.377 287.492 244.019 287.492 cv
233.124 287.492 mo
232.767 287.492 232.401 287.455 232.028 287.377 cv
224.597 285.822 217.597 282.145 212.018 276.704 cv
211.974 276.66 211.931 276.618 211.886 276.574 cv
211.691 276.382 211.497 276.187 211.305 275.99 cv
216.884 281.43 223.884 285.107 231.314 286.663 cv
231.687 286.741 232.053 286.778 232.41 286.778 cv
234.729 286.778 236.664 285.212 237.464 283.053 cv
237.59 283.181 237.723 283.304 237.86 283.418 cv
237.962 283.539 238.068 283.656 238.178 283.768 cv
237.379 285.926 235.443 287.492 233.124 287.492 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
243.305 286.778 mo
242.054 286.778 240.913 286.321 240.003 285.561 cv
239.865 285.446 239.733 285.324 239.607 285.196 cv
239.496 285.084 239.39 284.968 239.289 284.847 cv
240.199 285.607 241.339 286.064 242.591 286.064 cv
242.948 286.064 243.314 286.027 243.686 285.949 cv
258.578 282.831 271.733 271.195 275.201 253.914 cv
275.724 251.311 276.032 248.629 276.032 245.876 cv
276.028 245.638 li
276.032 245.386 li
276.032 233.45 271.269 223.107 264.033 215.695 cv
264.274 215.93 264.511 216.167 264.747 216.409 cv
271.983 223.821 276.746 234.164 276.746 246.101 cv
276.742 246.352 li
276.746 246.59 li
276.746 249.343 276.438 252.025 275.916 254.629 cv
272.447 271.91 259.293 283.545 244.401 286.663 cv
244.028 286.741 243.662 286.778 243.305 286.778 cv
232.41 286.778 mo
232.053 286.778 231.687 286.741 231.314 286.663 cv
223.884 285.107 216.884 281.43 211.305 275.99 cv
211.063 275.754 210.825 275.516 210.588 275.273 cv
216.167 280.715 223.168 284.393 230.6 285.949 cv
230.972 286.027 231.339 286.064 231.696 286.064 cv
234.014 286.064 235.95 284.498 236.749 282.339 cv
236.876 282.467 237.008 282.589 237.146 282.704 cv
237.247 282.825 237.353 282.941 237.464 283.053 cv
236.664 285.212 234.729 286.778 232.41 286.778 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
242.591 286.064 mo
241.339 286.064 240.199 285.607 239.289 284.847 cv
239.151 284.732 239.019 284.61 238.892 284.482 cv
238.782 284.37 238.676 284.254 238.574 284.132 cv
239.484 284.893 240.625 285.349 241.877 285.35 cv
242.234 285.35 242.599 285.312 242.972 285.235 cv
257.864 282.117 271.019 270.481 274.487 253.2 cv
275.01 250.597 275.317 247.915 275.317 245.161 cv
275.314 244.924 li
275.317 244.672 li
275.317 232.736 270.554 222.392 263.318 214.98 cv
263.559 215.215 263.797 215.453 264.033 215.695 cv
271.269 223.107 276.032 233.45 276.032 245.386 cv
276.028 245.638 li
276.032 245.876 li
276.032 248.629 275.724 251.311 275.201 253.914 cv
271.733 271.195 258.578 282.831 243.686 285.949 cv
243.314 286.027 242.948 286.064 242.591 286.064 cv
231.696 286.064 mo
231.339 286.064 230.972 286.027 230.6 285.949 cv
223.168 284.393 216.167 280.715 210.588 275.273 cv
210.348 275.039 210.11 274.802 209.876 274.562 cv
215.455 280.003 222.454 283.679 229.885 285.235 cv
230.258 285.312 230.624 285.35 230.981 285.35 cv
233.3 285.35 235.236 283.783 236.035 281.625 cv
236.162 281.753 236.294 281.875 236.432 281.99 cv
236.533 282.111 236.639 282.227 236.749 282.339 cv
235.95 284.498 234.014 286.064 231.696 286.064 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/5 /Gradient get_res exec grestore
}if
np
241.877 285.35 mo
240.625 285.349 239.484 284.893 238.574 284.132 cv
238.437 284.018 238.305 283.896 238.178 283.768 cv
238.068 283.656 237.962 283.539 237.86 283.418 cv
238.77 284.179 239.911 284.635 241.162 284.635 cv
241.519 284.635 241.885 284.598 242.258 284.52 cv
257.15 281.402 270.304 269.767 273.773 252.486 cv
274.295 249.882 274.603 247.2 274.603 244.447 cv
274.599 244.209 li
274.603 243.958 li
274.603 232.021 269.84 221.678 262.604 214.266 cv
262.845 214.501 263.082 214.738 263.318 214.98 cv
270.554 222.392 275.317 232.736 275.317 244.672 cv
275.314 244.924 li
275.317 245.161 li
275.317 247.915 275.01 250.597 274.487 253.2 cv
271.019 270.481 257.864 282.117 242.972 285.235 cv
242.599 285.312 242.234 285.35 241.877 285.35 cv
230.981 285.35 mo
230.624 285.35 230.258 285.312 229.885 285.235 cv
222.454 283.679 215.455 280.003 209.876 274.562 cv
209.635 274.327 209.397 274.088 209.161 273.847 cv
214.74 279.288 221.74 282.964 229.171 284.52 cv
229.544 284.598 229.91 284.635 230.267 284.635 cv
232.586 284.635 234.521 283.069 235.321 280.91 cv
235.447 281.039 235.58 281.16 235.717 281.275 cv
235.819 281.396 235.925 281.513 236.035 281.625 cv
235.236 283.783 233.3 285.35 230.981 285.35 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
241.162 284.635 mo
239.911 284.635 238.77 284.179 237.86 283.418 cv
237.723 283.304 237.59 283.181 237.464 283.053 cv
237.353 282.941 237.247 282.825 237.146 282.704 cv
238.056 283.464 239.196 283.921 240.448 283.921 cv
240.805 283.921 241.171 283.884 241.543 283.806 cv
256.435 280.688 269.59 269.052 273.058 251.771 cv
273.581 249.168 273.889 246.486 273.889 243.733 cv
273.885 243.495 li
273.889 243.244 li
273.889 231.306 269.125 220.962 261.888 213.55 cv
262.13 213.786 262.368 214.024 262.604 214.266 cv
269.84 221.678 274.603 232.021 274.603 243.958 cv
274.599 244.209 li
274.603 244.447 li
274.603 247.2 274.295 249.882 273.773 252.486 cv
270.304 269.767 257.15 281.402 242.258 284.52 cv
241.885 284.598 241.519 284.635 241.162 284.635 cv
230.267 284.635 mo
229.91 284.635 229.544 284.598 229.171 284.52 cv
221.74 282.964 214.74 279.288 209.161 273.847 cv
208.92 273.612 208.682 273.373 208.446 273.131 cv
214.025 278.572 221.026 282.25 228.457 283.806 cv
228.829 283.884 229.196 283.921 229.553 283.921 cv
231.872 283.921 233.807 282.355 234.607 280.196 cv
234.733 280.324 234.865 280.446 235.003 280.561 cv
235.104 280.682 235.21 280.799 235.321 280.91 cv
234.521 283.069 232.586 284.635 230.267 284.635 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
240.448 283.921 mo
239.196 283.921 238.056 283.464 237.146 282.704 cv
237.008 282.589 236.876 282.467 236.749 282.339 cv
236.639 282.227 236.533 282.111 236.432 281.99 cv
237.342 282.75 238.482 283.207 239.734 283.207 cv
240.091 283.207 240.457 283.17 240.829 283.092 cv
255.721 279.974 268.876 268.338 272.344 251.057 cv
272.867 248.454 273.175 245.772 273.175 243.019 cv
273.171 242.781 li
273.175 242.529 li
273.175 230.593 268.412 220.25 261.176 212.838 cv
261.416 213.072 261.653 213.309 261.888 213.55 cv
269.125 220.962 273.889 231.306 273.889 243.244 cv
273.885 243.495 li
273.889 243.733 li
273.889 246.486 273.581 249.168 273.058 251.771 cv
269.59 269.052 256.435 280.688 241.543 283.806 cv
241.171 283.884 240.805 283.921 240.448 283.921 cv
229.553 283.921 mo
229.196 283.921 228.829 283.884 228.457 283.806 cv
221.026 282.25 214.025 278.572 208.446 273.131 cv
208.206 272.897 207.969 272.66 207.734 272.419 cv
213.312 277.859 220.312 281.536 227.743 283.092 cv
228.115 283.17 228.482 283.207 228.839 283.207 cv
231.157 283.207 233.093 281.64 233.892 279.482 cv
234.019 279.61 234.151 279.732 234.289 279.847 cv
234.39 279.968 234.496 280.084 234.607 280.196 cv
233.807 282.355 231.872 283.921 229.553 283.921 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
239.734 283.207 mo
238.482 283.207 237.342 282.75 236.432 281.99 cv
236.294 281.875 236.162 281.753 236.035 281.625 cv
235.925 281.513 235.819 281.396 235.717 281.275 cv
236.627 282.035 237.768 282.492 239.019 282.492 cv
239.377 282.492 239.742 282.455 240.115 282.377 cv
255.007 279.26 268.161 267.624 271.63 250.343 cv
272.152 247.74 272.46 245.058 272.46 242.304 cv
272.456 242.067 li
272.46 241.815 li
272.46 229.879 267.697 219.535 260.461 212.123 cv
260.702 212.359 260.94 212.596 261.176 212.838 cv
268.412 220.25 273.175 230.593 273.175 242.529 cv
273.171 242.781 li
273.175 243.019 li
273.175 245.772 272.867 248.454 272.344 251.057 cv
268.876 268.338 255.721 279.974 240.829 283.092 cv
240.457 283.17 240.091 283.207 239.734 283.207 cv
228.839 283.207 mo
228.482 283.207 228.115 283.17 227.743 283.092 cv
220.312 281.536 213.312 277.859 207.734 272.419 cv
207.492 272.183 207.253 271.945 207.017 271.702 cv
212.596 277.145 219.596 280.821 227.028 282.377 cv
227.401 282.455 227.767 282.492 228.124 282.492 cv
230.443 282.492 232.379 280.926 233.178 278.768 cv
233.305 278.896 233.437 279.017 233.574 279.132 cv
233.676 279.253 233.782 279.37 233.892 279.482 cv
233.093 281.64 231.157 283.207 228.839 283.207 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
239.019 282.492 mo
237.768 282.492 236.627 282.035 235.717 281.275 cv
235.58 281.16 235.447 281.039 235.321 280.91 cv
235.21 280.799 235.104 280.682 235.003 280.561 cv
235.913 281.321 237.053 281.778 238.305 281.778 cv
238.662 281.778 239.028 281.741 239.401 281.663 cv
254.293 278.545 267.447 266.91 270.916 249.629 cv
271.438 247.025 271.746 244.343 271.746 241.59 cv
271.742 241.352 li
271.746 241.101 li
271.746 229.164 266.983 218.821 259.746 211.409 cv
259.987 211.644 260.225 211.882 260.461 212.123 cv
267.697 219.535 272.46 229.879 272.46 241.815 cv
272.456 242.067 li
272.46 242.304 li
272.46 245.058 272.152 247.74 271.63 250.343 cv
268.161 267.624 255.007 279.26 240.115 282.377 cv
239.742 282.455 239.377 282.492 239.019 282.492 cv
228.124 282.492 mo
227.767 282.492 227.401 282.455 227.028 282.377 cv
219.596 280.821 212.596 277.145 207.017 271.702 cv
206.778 271.469 206.539 271.23 206.305 270.99 cv
211.884 276.431 218.883 280.107 226.314 281.663 cv
226.687 281.741 227.053 281.778 227.41 281.778 cv
229.729 281.778 231.664 280.212 232.464 278.053 cv
232.59 278.182 232.723 278.304 232.86 278.418 cv
232.962 278.539 233.068 278.656 233.178 278.768 cv
232.379 280.926 230.443 282.492 228.124 282.492 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
238.305 281.778 mo
237.053 281.778 235.913 281.321 235.003 280.561 cv
234.865 280.446 234.733 280.324 234.607 280.196 cv
234.496 280.084 234.39 279.968 234.289 279.847 cv
235.199 280.607 236.339 281.064 237.591 281.064 cv
237.948 281.064 238.314 281.027 238.686 280.949 cv
253.578 277.831 266.733 266.195 270.201 248.914 cv
270.724 246.311 271.032 243.629 271.032 240.876 cv
271.028 240.638 li
271.032 240.386 li
271.032 228.45 266.269 218.107 259.033 210.695 cv
259.274 210.93 259.511 211.167 259.746 211.409 cv
266.983 218.821 271.746 229.164 271.746 241.101 cv
271.742 241.352 li
271.746 241.59 li
271.746 244.343 271.438 247.025 270.916 249.629 cv
267.447 266.91 254.293 278.545 239.401 281.663 cv
239.028 281.741 238.662 281.778 238.305 281.778 cv
227.41 281.778 mo
227.053 281.778 226.687 281.741 226.314 281.663 cv
218.883 280.107 211.884 276.431 206.305 270.99 cv
206.064 270.755 205.825 270.517 205.59 270.275 cv
211.169 275.716 218.169 279.393 225.6 280.949 cv
225.972 281.027 226.339 281.064 226.696 281.064 cv
229.014 281.064 230.95 279.497 231.749 277.339 cv
231.876 277.467 232.008 277.589 232.146 277.704 cv
232.247 277.825 232.353 277.941 232.464 278.053 cv
231.664 280.212 229.729 281.778 227.41 281.778 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
237.591 281.064 mo
236.339 281.064 235.199 280.607 234.289 279.847 cv
234.151 279.732 234.019 279.61 233.892 279.482 cv
233.782 279.37 233.676 279.253 233.574 279.132 cv
234.484 279.893 235.625 280.349 236.877 280.35 cv
237.234 280.35 237.599 280.312 237.972 280.235 cv
252.864 277.117 266.019 265.481 269.487 248.2 cv
270.01 245.597 270.317 242.915 270.317 240.161 cv
270.314 239.924 li
270.317 239.672 li
270.317 227.734 265.555 217.392 258.317 209.979 cv
258.558 210.215 258.797 210.453 259.033 210.695 cv
266.269 218.107 271.032 228.45 271.032 240.386 cv
271.028 240.638 li
271.032 240.876 li
271.032 243.629 270.724 246.311 270.201 248.914 cv
266.733 266.195 253.578 277.831 238.686 280.949 cv
238.314 281.027 237.948 281.064 237.591 281.064 cv
226.696 281.064 mo
226.339 281.064 225.972 281.027 225.6 280.949 cv
218.169 279.393 211.169 275.716 205.59 270.275 cv
205.349 270.04 205.111 269.802 204.876 269.561 cv
210.454 275.002 217.454 278.679 224.886 280.235 cv
225.258 280.312 225.624 280.35 225.981 280.35 cv
228.3 280.35 230.236 278.783 231.035 276.625 cv
231.162 276.753 231.294 276.875 231.432 276.99 cv
231.533 277.111 231.639 277.227 231.749 277.339 cv
230.95 279.497 229.014 281.064 226.696 281.064 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
236.877 280.35 mo
235.625 280.349 234.484 279.893 233.574 279.132 cv
233.437 279.017 233.305 278.896 233.178 278.768 cv
233.068 278.656 232.962 278.539 232.86 278.418 cv
233.77 279.179 234.911 279.635 236.162 279.635 cv
236.519 279.635 236.885 279.598 237.258 279.52 cv
252.15 276.402 265.304 264.767 268.773 247.486 cv
269.295 244.882 269.603 242.2 269.603 239.447 cv
269.599 239.209 li
269.603 238.958 li
269.603 227.02 264.841 216.678 257.603 209.265 cv
257.843 209.5 258.082 209.739 258.317 209.979 cv
265.555 217.392 270.317 227.734 270.317 239.672 cv
270.314 239.924 li
270.317 240.161 li
270.317 242.915 270.01 245.597 269.487 248.2 cv
266.019 265.481 252.864 277.117 237.972 280.235 cv
237.599 280.312 237.234 280.35 236.877 280.35 cv
225.981 280.35 mo
225.624 280.35 225.258 280.312 224.886 280.235 cv
217.454 278.679 210.454 275.002 204.876 269.561 cv
204.635 269.326 204.397 269.088 204.161 268.847 cv
209.74 274.288 216.74 277.964 224.171 279.52 cv
224.544 279.598 224.91 279.635 225.267 279.635 cv
227.586 279.635 229.521 278.069 230.321 275.91 cv
230.447 276.039 230.58 276.161 230.718 276.276 cv
230.819 276.397 230.925 276.513 231.035 276.625 cv
230.236 278.783 228.3 280.35 225.981 280.35 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/13 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/13 /Gradient get_res exec grestore
}if
np
236.162 279.635 mo
234.911 279.635 233.77 279.179 232.86 278.418 cv
232.723 278.304 232.59 278.182 232.464 278.053 cv
232.353 277.941 232.247 277.825 232.146 277.704 cv
233.056 278.464 234.196 278.921 235.448 278.921 cv
235.805 278.921 236.171 278.884 236.544 278.806 cv
251.436 275.688 264.59 264.053 268.058 246.771 cv
268.581 244.168 268.889 241.486 268.889 238.733 cv
268.885 238.495 li
268.889 238.244 li
268.889 226.307 264.126 215.964 256.89 208.552 cv
257.13 208.786 257.368 209.025 257.603 209.265 cv
264.841 216.678 269.603 227.02 269.603 238.958 cv
269.599 239.209 li
269.603 239.447 li
269.603 242.2 269.295 244.882 268.773 247.486 cv
265.304 264.767 252.15 276.402 237.258 279.52 cv
236.885 279.598 236.519 279.635 236.162 279.635 cv
225.267 279.635 mo
224.91 279.635 224.544 279.598 224.171 279.52 cv
216.74 277.964 209.74 274.288 204.161 268.847 cv
203.921 268.612 203.681 268.373 203.446 268.131 cv
209.025 273.573 216.025 277.25 223.457 278.806 cv
223.829 278.884 224.196 278.921 224.553 278.921 cv
226.872 278.921 228.807 277.355 229.607 275.196 cv
229.733 275.324 229.865 275.446 230.003 275.561 cv
230.104 275.682 230.21 275.799 230.321 275.91 cv
229.521 278.069 227.586 279.635 225.267 279.635 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/14 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/14 /Gradient get_res exec grestore
}if
np
235.448 278.921 mo
234.196 278.921 233.056 278.464 232.146 277.704 cv
232.008 277.589 231.876 277.467 231.749 277.339 cv
231.639 277.227 231.533 277.111 231.432 276.99 cv
232.342 277.75 233.482 278.207 234.734 278.207 cv
235.091 278.207 235.457 278.17 235.829 278.092 cv
250.721 274.974 263.876 263.338 267.344 246.057 cv
267.867 243.454 268.175 240.772 268.175 238.019 cv
268.171 237.781 li
268.175 237.529 li
268.175 225.593 263.411 215.249 256.175 207.837 cv
256.416 208.072 256.654 208.31 256.89 208.552 cv
264.126 215.964 268.889 226.307 268.889 238.244 cv
268.885 238.495 li
268.889 238.733 li
268.889 241.486 268.581 244.168 268.058 246.771 cv
264.59 264.053 251.436 275.688 236.544 278.806 cv
236.171 278.884 235.805 278.921 235.448 278.921 cv
224.553 278.921 mo
224.196 278.921 223.829 278.884 223.457 278.806 cv
216.025 277.25 209.025 273.573 203.446 268.131 cv
203.206 267.897 202.968 267.659 202.733 267.419 cv
208.312 272.86 215.311 276.536 222.743 278.092 cv
223.115 278.17 223.481 278.207 223.839 278.207 cv
226.157 278.207 228.093 276.64 228.892 274.482 cv
229.019 274.61 229.151 274.732 229.289 274.847 cv
229.39 274.968 229.496 275.085 229.607 275.196 cv
228.807 277.355 226.872 278.921 224.553 278.921 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/15 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/15 /Gradient get_res exec grestore
}if
np
234.734 278.207 mo
233.482 278.207 232.342 277.75 231.432 276.99 cv
231.294 276.875 231.162 276.753 231.035 276.625 cv
230.925 276.513 230.819 276.397 230.718 276.276 cv
231.628 277.036 232.768 277.492 234.019 277.492 cv
234.376 277.492 234.742 277.455 235.115 277.377 cv
250.007 274.26 263.161 262.624 266.63 245.343 cv
267.152 242.74 267.46 240.058 267.46 237.304 cv
267.456 237.067 li
267.46 236.815 li
267.46 224.879 262.697 214.535 255.461 207.123 cv
255.702 207.359 255.939 207.596 256.175 207.837 cv
263.411 215.249 268.175 225.593 268.175 237.529 cv
268.171 237.781 li
268.175 238.019 li
268.175 240.772 267.867 243.454 267.344 246.057 cv
263.876 263.338 250.721 274.974 235.829 278.092 cv
235.457 278.17 235.091 278.207 234.734 278.207 cv
223.839 278.207 mo
223.481 278.207 223.115 278.17 222.743 278.092 cv
215.311 276.536 208.312 272.86 202.733 267.419 cv
202.493 267.184 202.254 266.945 202.018 266.704 cv
207.597 272.145 214.597 275.821 222.028 277.377 cv
222.401 277.455 222.767 277.492 223.124 277.492 cv
225.443 277.492 227.379 275.926 228.178 273.767 cv
228.304 273.896 228.437 274.017 228.574 274.132 cv
228.676 274.253 228.782 274.37 228.892 274.482 cv
228.093 276.64 226.157 278.207 223.839 278.207 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/16 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/16 /Gradient get_res exec grestore
}if
np
234.019 277.492 mo
232.768 277.492 231.628 277.036 230.718 276.276 cv
230.58 276.161 230.447 276.039 230.321 275.91 cv
230.21 275.799 230.104 275.682 230.003 275.561 cv
230.913 276.321 232.053 276.778 233.305 276.778 cv
233.662 276.778 234.028 276.741 234.401 276.663 cv
249.293 273.545 262.447 261.91 265.916 244.629 cv
266.438 242.025 266.746 239.343 266.746 236.59 cv
266.742 236.352 li
266.746 236.101 li
266.746 224.163 261.982 213.819 254.745 206.407 cv
254.987 206.643 255.225 206.881 255.461 207.123 cv
262.697 214.535 267.46 224.879 267.46 236.815 cv
267.456 237.067 li
267.46 237.304 li
267.46 240.058 267.152 242.74 266.63 245.343 cv
263.161 262.624 250.007 274.26 235.115 277.377 cv
234.742 277.455 234.376 277.492 234.019 277.492 cv
223.124 277.492 mo
222.767 277.492 222.401 277.455 222.028 277.377 cv
214.597 275.821 207.597 272.145 202.018 266.704 cv
201.777 266.469 201.539 266.231 201.304 265.989 cv
206.883 271.43 213.883 275.107 221.314 276.663 cv
221.687 276.741 222.053 276.778 222.41 276.778 cv
224.729 276.778 226.664 275.212 227.464 273.053 cv
227.59 273.181 227.723 273.303 227.86 273.418 cv
227.962 273.539 228.068 273.656 228.178 273.767 cv
227.379 275.926 225.443 277.492 223.124 277.492 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/17 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/17 /Gradient get_res exec grestore
}if
np
233.305 276.778 mo
232.053 276.778 230.913 276.321 230.003 275.561 cv
229.865 275.446 229.733 275.324 229.607 275.196 cv
229.496 275.085 229.39 274.968 229.289 274.847 cv
230.199 275.607 231.339 276.064 232.591 276.064 cv
232.948 276.064 233.314 276.027 233.686 275.949 cv
248.578 272.831 261.733 261.195 265.201 243.914 cv
265.724 241.311 266.032 238.629 266.032 235.876 cv
266.028 235.638 li
266.032 235.386 li
266.032 223.45 261.269 213.107 254.033 205.695 cv
254.273 205.929 254.51 206.166 254.745 206.407 cv
261.982 213.819 266.746 224.163 266.746 236.101 cv
266.742 236.352 li
266.746 236.59 li
266.746 239.343 266.438 242.025 265.916 244.629 cv
262.447 261.91 249.293 273.545 234.401 276.663 cv
234.028 276.741 233.662 276.778 233.305 276.778 cv
222.41 276.778 mo
222.053 276.778 221.687 276.741 221.314 276.663 cv
213.883 275.107 206.883 271.43 201.304 265.989 cv
201.063 265.754 200.826 265.517 200.59 265.276 cv
206.169 270.717 213.169 274.393 220.6 275.949 cv
220.972 276.027 221.339 276.064 221.696 276.064 cv
224.015 276.064 225.95 274.497 226.749 272.339 cv
226.876 272.467 227.008 272.589 227.146 272.704 cv
227.247 272.825 227.353 272.942 227.464 273.053 cv
226.664 275.212 224.729 276.778 222.41 276.778 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/18 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/18 /Gradient get_res exec grestore
}if
np
232.591 276.064 mo
231.339 276.064 230.199 275.607 229.289 274.847 cv
229.151 274.732 229.019 274.61 228.892 274.482 cv
228.782 274.37 228.676 274.253 228.574 274.132 cv
229.484 274.893 230.625 275.349 231.877 275.35 cv
232.234 275.35 232.6 275.312 232.972 275.234 cv
247.864 272.117 261.019 260.481 264.487 243.2 cv
265.01 240.597 265.317 237.915 265.317 235.161 cv
265.314 234.924 li
265.317 234.672 li
265.317 222.734 260.555 212.392 253.318 204.98 cv
253.559 205.215 253.797 205.453 254.033 205.695 cv
261.269 213.107 266.032 223.45 266.032 235.386 cv
266.028 235.638 li
266.032 235.876 li
266.032 238.629 265.724 241.311 265.201 243.914 cv
261.733 261.195 248.578 272.831 233.686 275.949 cv
233.314 276.027 232.948 276.064 232.591 276.064 cv
221.696 276.064 mo
221.339 276.064 220.972 276.027 220.6 275.949 cv
213.169 274.393 206.169 270.717 200.59 265.276 cv
200.349 265.041 200.111 264.802 199.875 264.561 cv
205.454 270.002 212.454 273.679 219.885 275.234 cv
220.258 275.312 220.624 275.35 220.982 275.35 cv
223.339 275.35 225.3 273.731 226.074 271.517 cv
226.276 271.813 226.502 272.088 226.749 272.339 cv
225.95 274.497 224.015 276.064 221.696 276.064 cv
225.356 195.911 mo
225.244 195.747 225.125 195.589 224.999 195.439 cv
225.136 195.553 225.268 195.675 225.394 195.803 cv
225.381 195.839 225.368 195.875 225.356 195.911 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/19 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/19 /Gradient get_res exec grestore
}if
np
231.877 275.35 mo
230.625 275.349 229.484 274.893 228.574 274.132 cv
228.437 274.017 228.304 273.896 228.178 273.767 cv
228.068 273.656 227.962 273.539 227.86 273.418 cv
228.77 274.178 229.911 274.635 231.162 274.635 cv
231.519 274.635 231.885 274.598 232.258 274.52 cv
247.15 271.402 260.304 259.767 263.773 242.486 cv
264.295 239.882 264.603 237.2 264.603 234.447 cv
264.599 234.209 li
264.603 233.958 li
264.603 222.021 259.84 211.678 252.604 204.266 cv
252.844 204.5 253.083 204.739 253.318 204.98 cv
260.555 212.392 265.317 222.734 265.317 234.672 cv
265.314 234.924 li
265.317 235.161 li
265.317 237.915 265.01 240.597 264.487 243.2 cv
261.019 260.481 247.864 272.117 232.972 275.234 cv
232.6 275.312 232.234 275.35 231.877 275.35 cv
220.982 275.35 mo
220.624 275.35 220.258 275.312 219.885 275.234 cv
212.454 273.679 205.454 270.002 199.875 264.561 cv
199.651 264.342 199.428 264.119 199.208 263.895 cv
199.224 263.909 199.238 263.922 199.253 263.936 cv
204.817 269.328 211.781 272.973 219.171 274.52 cv
219.544 274.598 219.91 274.635 220.267 274.635 cv
222.759 274.635 224.809 272.826 225.481 270.416 cv
225.643 270.806 225.842 271.175 226.074 271.517 cv
225.3 273.731 223.339 275.35 220.982 275.35 cv
225.234 196.297 mo
224.995 195.719 224.673 195.189 224.284 194.724 cv
224.542 194.939 224.781 195.179 224.999 195.439 cv
225.125 195.589 225.244 195.747 225.356 195.911 cv
225.311 196.038 225.271 196.166 225.234 196.297 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/20 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/20 /Gradient get_res exec grestore
}if
np
231.162 274.635 mo
229.911 274.635 228.77 274.178 227.86 273.418 cv
227.723 273.303 227.59 273.181 227.464 273.053 cv
227.353 272.942 227.247 272.825 227.146 272.704 cv
228.056 273.464 229.196 273.921 230.448 273.921 cv
230.805 273.921 231.171 273.884 231.544 273.806 cv
246.436 270.688 259.692 259.073 263.058 241.771 cv
263.596 239.171 263.889 236.486 263.889 233.733 cv
263.885 233.495 li
263.889 233.244 li
263.889 221.307 259.126 210.964 251.89 203.552 cv
252.131 203.787 252.368 204.025 252.604 204.266 cv
259.84 211.678 264.603 222.021 264.603 233.958 cv
264.599 234.209 li
264.603 234.447 li
264.603 237.2 264.295 239.882 263.773 242.486 cv
260.304 259.767 247.15 271.402 232.258 274.52 cv
231.885 274.598 231.519 274.635 231.162 274.635 cv
220.267 274.635 mo
219.91 274.635 219.544 274.598 219.171 274.52 cv
211.781 272.973 204.817 269.328 199.253 263.936 cv
204.7 268.937 211.395 272.327 218.457 273.806 cv
218.829 273.884 219.196 273.921 219.553 273.921 cv
222.61 273.921 225.001 271.199 225.001 267.986 cv
225.001 268.846 225.172 269.67 225.481 270.416 cv
224.809 272.826 222.759 274.635 220.267 274.635 cv
225.001 198.012 mo
225.001 196.489 224.462 195.075 223.57 194.01 cv
223.828 194.225 224.067 194.464 224.284 194.724 cv
224.673 195.189 224.995 195.719 225.234 196.297 cv
225.082 196.842 225.001 197.419 225.001 198.012 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/21 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/21 /Gradient get_res exec grestore
}if
np
230.448 273.921 mo
229.196 273.921 228.056 273.464 227.146 272.704 cv
227.008 272.589 226.876 272.467 226.749 272.339 cv
226.502 272.088 226.276 271.813 226.074 271.517 cv
225.842 271.175 225.643 270.806 225.481 270.416 cv
225.172 269.67 225.001 268.846 225.001 267.986 cv
225.001 271.199 222.61 273.921 219.553 273.921 cv
219.196 273.921 218.829 273.884 218.457 273.806 cv
211.395 272.327 204.7 268.937 199.253 263.936 cv
199.238 263.922 199.224 263.909 199.208 263.895 cv
193.194 258.355 188.707 250.844 186.942 241.771 cv
186.405 239.171 186.111 236.486 186.111 233.733 cv
186.117 233.495 li
186.111 233.244 li
186.111 212.002 201.192 195.808 218.457 192.195 cv
218.83 192.116 219.196 192.079 219.554 192.079 cv
221.16 192.079 222.582 192.831 223.57 194.01 cv
224.462 195.075 225.001 196.489 225.001 198.012 cv
225.001 197.419 225.082 196.842 225.234 196.297 cv
225.271 196.166 225.311 196.038 225.356 195.911 cv
225.368 195.875 225.381 195.839 225.394 195.803 cv
226.194 193.645 228.129 192.079 230.447 192.079 cv
230.804 192.079 231.171 192.116 231.544 192.195 cv
239.106 193.778 246.249 197.774 251.89 203.552 cv
259.126 210.964 263.889 221.307 263.889 233.244 cv
263.885 233.495 li
263.889 233.733 li
263.889 236.486 263.596 239.171 263.058 241.771 cv
259.692 259.073 246.436 270.688 231.544 273.806 cv
231.171 273.884 230.805 273.921 230.448 273.921 cv
level3{
gsave
clp
[315.056 0 0 315.056 225 225 ]ct
/22 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[315.056 0 0 315.056 225 225 ]ct
clp
/22 /Gradient get_res exec grestore
}if
np
273.277 260.853 mo
273.277 260.853 273.506 260.459 273.905 259.769 cv
274.28 259.065 274.806 258.054 275.405 256.826 cv
276.598 254.367 277.911 250.958 278.848 247.439 cv
279.802 243.924 280.327 240.305 280.539 237.572 cv
280.585 236.888 280.652 236.264 280.676 235.706 cv
280.689 235.148 280.699 234.661 280.709 234.26 cv
280.732 233.458 280.746 233 280.746 233 cv
280.746 233 282.813 233.42 285.915 234.194 cv
289 234.965 293.196 236.135 297.241 237.525 cv
301.306 238.903 305.376 240.513 308.379 241.82 cv
311.363 243.123 313.339 244.09 313.339 244.09 cv
313.339 244.09 313.291 244.467 313.206 245.127 cv
313.125 245.788 313.006 246.731 312.792 247.855 cv
312.426 250.108 311.803 253.094 311.02 256.039 cv
310.236 258.985 309.265 261.876 308.481 264.022 cv
307.642 266.148 307.083 267.566 307.083 267.566 cv
307.083 267.566 304.876 267.412 301.619 267.043 cv
298.347 266.669 294.102 266.071 289.837 265.207 cv
285.581 264.359 281.473 263.329 278.377 262.428 cv
275.287 261.534 273.277 260.854 273.277 260.853 cv
cp
.415686 .709804 .768627 rgb
f
252.854 281.277 mo
252.854 281.277 253.25 281.051 253.941 280.654 cv
254.601 280.203 255.593 279.636 256.706 278.839 cv
258.974 277.305 261.838 275.011 264.418 272.418 cv
267.011 269.838 269.305 266.974 270.839 264.706 cv
271.636 263.593 272.203 262.601 272.654 261.941 cv
273.051 261.249 273.277 260.853 273.277 260.853 cv
273.277 260.853 274.871 262.258 277.19 264.494 cv
279.486 266.712 282.456 269.778 285.31 273.044 cv
288.165 276.295 290.819 279.689 292.776 282.339 cv
294.736 284.986 295.947 286.802 295.947 286.802 cv
295.947 286.802 295.005 287.995 293.591 289.784 cv
292.844 290.646 291.974 291.651 291.04 292.728 cv
290.073 293.774 289.017 294.868 287.966 295.966 cv
286.868 297.017 285.774 298.073 284.728 299.04 cv
283.651 299.974 282.646 300.844 281.784 301.591 cv
279.995 303.005 278.802 303.947 278.802 303.947 cv
278.802 303.947 276.986 302.736 274.339 300.776 cv
271.689 298.819 268.295 296.165 265.044 293.31 cv
261.778 290.456 258.712 287.486 256.494 285.19 cv
254.258 282.871 252.854 281.277 252.854 281.277 cv
cp
f
225 288.746 mo
225 288.746 225.458 288.732 226.26 288.709 cv
226.661 288.699 227.147 288.689 227.706 288.676 cv
228.263 288.652 228.888 288.585 229.572 288.539 cv
232.305 288.327 235.924 287.801 239.439 286.848 cv
242.958 285.911 246.367 284.598 248.826 283.405 cv
250.054 282.806 251.065 282.28 251.769 281.905 cv
252.459 281.506 252.854 281.277 252.854 281.277 cv
252.854 281.277 253.534 283.287 254.428 286.377 cv
255.329 289.473 256.359 293.581 257.207 297.837 cv
258.071 302.102 258.669 306.347 259.043 309.619 cv
259.412 312.876 259.566 315.083 259.566 315.083 cv
259.566 315.083 258.148 315.642 256.023 316.481 cv
253.876 317.265 250.985 318.236 248.039 319.02 cv
245.094 319.803 242.108 320.426 239.854 320.792 cv
238.731 321.006 237.788 321.125 237.127 321.206 cv
236.467 321.291 236.09 321.339 236.09 321.339 cv
236.09 321.339 235.123 319.363 233.82 316.379 cv
232.513 313.376 230.903 309.306 229.525 305.241 cv
228.135 301.196 226.965 297 226.194 293.915 cv
225.42 290.813 225 288.746 225 288.746 cv
cp
f
197.145 281.277 mo
197.145 281.277 197.54 281.506 198.231 281.905 cv
198.935 282.28 199.946 282.806 201.174 283.405 cv
203.633 284.598 207.042 285.911 210.561 286.848 cv
214.075 287.801 217.695 288.327 220.428 288.539 cv
221.111 288.585 221.736 288.652 222.294 288.676 cv
222.852 288.689 223.339 288.699 223.74 288.709 cv
224.542 288.732 225 288.746 225 288.746 cv
225 288.746 224.58 290.813 223.806 293.915 cv
223.035 297 221.864 301.196 220.475 305.241 cv
219.096 309.306 217.487 313.376 216.179 316.379 cv
214.876 319.363 213.91 321.339 213.91 321.339 cv
213.91 321.339 213.533 321.291 212.872 321.206 cv
212.212 321.125 211.269 321.006 210.145 320.792 cv
207.892 320.426 204.906 319.803 201.961 319.02 cv
199.015 318.236 196.124 317.265 193.977 316.481 cv
191.851 315.642 190.434 315.083 190.434 315.083 cv
190.434 315.083 190.588 312.876 190.957 309.619 cv
191.33 306.347 191.929 302.102 192.793 297.837 cv
193.64 293.581 194.671 289.473 195.571 286.377 cv
196.466 283.287 197.145 281.277 197.145 281.277 cv
cp
f
176.722 260.853 mo
176.722 260.853 176.949 261.249 177.346 261.941 cv
177.797 262.601 178.364 263.593 179.161 264.706 cv
180.695 266.974 182.989 269.838 185.582 272.418 cv
188.162 275.011 191.026 277.305 193.293 278.839 cv
194.407 279.636 195.399 280.203 196.058 280.654 cv
196.75 281.051 197.145 281.277 197.145 281.277 cv
197.145 281.277 195.741 282.871 193.506 285.19 cv
191.288 287.486 188.222 290.456 184.956 293.31 cv
181.705 296.165 178.311 298.819 175.661 300.776 cv
173.014 302.736 171.198 303.947 171.198 303.947 cv
171.198 303.947 170.005 303.005 168.216 301.591 cv
167.354 300.844 166.349 299.974 165.271 299.04 cv
164.225 298.073 163.132 297.017 162.034 295.966 cv
160.983 294.868 159.926 293.774 158.959 292.728 cv
158.026 291.651 157.155 290.646 156.409 289.784 cv
154.995 287.995 154.053 286.802 154.053 286.802 cv
154.053 286.802 155.263 284.986 157.224 282.339 cv
159.181 279.689 161.835 276.295 164.689 273.044 cv
167.544 269.778 170.513 266.712 172.81 264.494 cv
175.128 262.258 176.722 260.853 176.722 260.853 cv
cp
f
169.254 233 mo
169.254 233 169.268 233.458 169.291 234.26 cv
169.3 234.661 169.311 235.148 169.323 235.706 cv
169.348 236.264 169.415 236.888 169.461 237.572 cv
169.673 240.305 170.198 243.924 171.152 247.439 cv
172.089 250.958 173.402 254.367 174.595 256.826 cv
175.193 258.054 175.72 259.065 176.095 259.769 cv
176.494 260.459 176.722 260.853 176.722 260.853 cv
176.722 260.854 174.713 261.534 171.623 262.428 cv
168.526 263.329 164.419 264.359 160.162 265.207 cv
155.898 266.071 151.653 266.669 148.381 267.043 cv
145.124 267.412 142.917 267.566 142.917 267.566 cv
142.917 267.566 142.357 266.148 141.519 264.022 cv
140.735 261.876 139.764 258.985 138.979 256.039 cv
138.197 253.094 137.574 250.108 137.208 247.855 cv
136.993 246.731 136.875 245.788 136.794 245.127 cv
136.709 244.467 136.661 244.09 136.661 244.09 cv
136.661 244.09 138.637 243.123 141.621 241.82 cv
144.624 240.513 148.693 238.903 152.758 237.525 cv
156.804 236.135 161 234.965 164.084 234.194 cv
167.188 233.42 169.254 233 169.254 233 cv
cp
f
176.722 205.145 mo
176.722 205.145 176.494 205.54 176.095 206.231 cv
175.72 206.935 175.193 207.946 174.595 209.174 cv
173.402 211.633 172.089 215.042 171.152 218.561 cv
170.198 222.075 169.673 225.695 169.461 228.428 cv
169.415 229.112 169.348 229.736 169.323 230.294 cv
169.311 230.852 169.3 231.339 169.291 231.74 cv
169.268 232.542 169.254 233 169.254 233 cv
169.254 233 167.188 232.58 164.084 231.806 cv
161 231.035 156.804 229.865 152.758 228.475 cv
148.693 227.097 144.624 225.487 141.621 224.179 cv
138.637 222.876 136.661 221.91 136.661 221.91 cv
136.661 221.91 136.709 221.533 136.794 220.872 cv
136.875 220.212 136.993 219.269 137.208 218.145 cv
137.574 215.892 138.197 212.906 138.979 209.961 cv
139.764 207.015 140.735 204.124 141.519 201.977 cv
142.357 199.851 142.917 198.434 142.917 198.434 cv
142.917 198.434 145.124 198.588 148.381 198.957 cv
151.653 199.33 155.898 199.929 160.162 200.793 cv
164.419 201.64 168.526 202.671 171.623 203.571 cv
174.713 204.466 176.722 205.145 176.722 205.145 cv
cp
f
197.145 184.723 mo
197.145 184.723 196.75 184.949 196.058 185.346 cv
195.399 185.797 194.407 186.364 193.293 187.161 cv
191.026 188.695 188.162 190.989 185.582 193.582 cv
182.989 196.162 180.695 199.026 179.161 201.293 cv
178.364 202.407 177.797 203.399 177.346 204.058 cv
176.949 204.75 176.722 205.145 176.722 205.145 cv
176.722 205.145 175.128 203.741 172.81 201.506 cv
170.513 199.288 167.544 196.222 164.689 192.956 cv
161.835 189.705 159.181 186.311 157.224 183.661 cv
155.263 181.014 154.053 179.198 154.053 179.198 cv
154.053 179.198 154.995 178.005 156.409 176.216 cv
157.155 175.354 158.026 174.349 158.959 173.271 cv
159.926 172.225 160.983 171.132 162.034 170.034 cv
163.132 168.982 164.225 167.927 165.271 166.959 cv
166.349 166.026 167.354 165.155 168.216 164.409 cv
170.005 162.995 171.197 162.053 171.197 162.053 cv
171.197 162.053 173.014 163.263 175.661 165.224 cv
178.311 167.181 181.705 169.835 184.956 172.689 cv
188.222 175.544 191.288 178.513 193.506 180.81 cv
195.741 183.128 197.145 184.722 197.145 184.723 cv
cp
f
225 177.254 mo
225 177.254 224.542 177.268 223.74 177.291 cv
223.339 177.3 222.852 177.311 222.294 177.323 cv
221.736 177.348 221.111 177.415 220.428 177.461 cv
217.695 177.673 214.075 178.198 210.561 179.152 cv
207.042 180.089 203.633 181.402 201.174 182.595 cv
199.946 183.193 198.935 183.72 198.231 184.095 cv
197.54 184.494 197.145 184.723 197.145 184.723 cv
197.145 184.723 196.466 182.713 195.571 179.623 cv
194.671 176.526 193.64 172.419 192.793 168.162 cv
191.929 163.898 191.33 159.653 190.957 156.381 cv
190.588 153.124 190.434 150.917 190.434 150.917 cv
190.434 150.917 191.851 150.357 193.977 149.519 cv
196.124 148.735 199.015 147.764 201.961 146.98 cv
204.906 146.197 207.892 145.574 210.145 145.208 cv
211.269 144.994 212.212 144.875 212.872 144.794 cv
213.533 144.709 213.91 144.661 213.91 144.661 cv
213.91 144.661 214.876 146.637 216.179 149.621 cv
217.487 152.624 219.096 156.693 220.475 160.758 cv
221.864 164.804 223.035 169 223.806 172.084 cv
224.58 175.188 225 177.254 225 177.254 cv
cp
f
252.854 184.723 mo
252.854 184.723 252.459 184.494 251.769 184.095 cv
251.065 183.72 250.054 183.193 248.826 182.595 cv
246.367 181.402 242.958 180.089 239.439 179.152 cv
235.924 178.198 232.305 177.673 229.572 177.461 cv
228.888 177.415 228.263 177.348 227.706 177.323 cv
227.147 177.311 226.661 177.3 226.26 177.291 cv
225.458 177.268 225 177.254 225 177.254 cv
225 177.254 225.42 175.188 226.194 172.084 cv
226.965 169 228.135 164.804 229.525 160.758 cv
230.903 156.693 232.513 152.624 233.82 149.621 cv
235.123 146.637 236.09 144.661 236.09 144.661 cv
236.09 144.661 236.467 144.709 237.127 144.794 cv
237.788 144.875 238.731 144.994 239.854 145.208 cv
242.108 145.574 245.094 146.197 248.039 146.98 cv
250.985 147.764 253.876 148.735 256.023 149.519 cv
258.148 150.357 259.566 150.917 259.566 150.917 cv
259.566 150.917 259.412 153.124 259.043 156.381 cv
258.669 159.653 258.071 163.898 257.207 168.162 cv
256.359 172.419 255.329 176.526 254.428 179.623 cv
253.534 182.713 252.854 184.723 252.854 184.723 cv
cp
f
273.277 205.145 mo
273.277 205.145 273.051 204.75 272.654 204.058 cv
272.203 203.399 271.636 202.407 270.839 201.293 cv
269.305 199.026 267.011 196.162 264.418 193.582 cv
261.838 190.989 258.974 188.695 256.706 187.161 cv
255.593 186.364 254.601 185.797 253.941 185.346 cv
253.25 184.949 252.854 184.723 252.854 184.723 cv
252.854 184.722 254.258 183.128 256.494 180.81 cv
258.712 178.513 261.778 175.544 265.044 172.689 cv
268.295 169.835 271.689 167.181 274.339 165.224 cv
276.986 163.263 278.802 162.053 278.802 162.053 cv
278.802 162.053 279.995 162.995 281.784 164.409 cv
282.646 165.155 283.651 166.026 284.728 166.959 cv
285.774 167.927 286.868 168.982 287.966 170.034 cv
289.017 171.132 290.073 172.225 291.04 173.271 cv
291.974 174.349 292.844 175.354 293.591 176.216 cv
295.005 178.005 295.947 179.197 295.947 179.197 cv
295.947 179.197 294.736 181.014 292.776 183.661 cv
290.819 186.311 288.165 189.705 285.31 192.956 cv
282.456 196.222 279.486 199.288 277.19 201.506 cv
274.871 203.741 273.277 205.145 273.277 205.145 cv
cp
f
280.746 233 mo
280.746 233 280.732 232.542 280.709 231.74 cv
280.699 231.339 280.689 230.852 280.676 230.294 cv
280.652 229.736 280.585 229.112 280.539 228.428 cv
280.327 225.695 279.802 222.075 278.848 218.561 cv
277.911 215.042 276.598 211.633 275.405 209.174 cv
274.806 207.946 274.28 206.935 273.905 206.231 cv
273.506 205.54 273.277 205.145 273.277 205.145 cv
273.277 205.145 275.287 204.466 278.377 203.571 cv
281.473 202.671 285.581 201.64 289.837 200.793 cv
294.102 199.929 298.347 199.33 301.619 198.957 cv
304.876 198.588 307.083 198.434 307.083 198.434 cv
307.083 198.434 307.642 199.851 308.481 201.977 cv
309.265 204.124 310.236 207.015 311.02 209.961 cv
311.803 212.906 312.426 215.892 312.792 218.145 cv
313.006 219.269 313.125 220.212 313.206 220.872 cv
313.291 221.533 313.339 221.91 313.339 221.91 cv
313.339 221.91 311.363 222.876 308.379 224.179 cv
305.376 225.487 301.306 227.097 297.241 228.475 cv
293.196 229.865 289 231.035 285.915 231.806 cv
282.813 232.58 280.746 233 280.746 233 cv
cp
f
225 283.391 mo
197.171 283.391 174.609 260.83 174.609 233 cv
174.609 205.17 197.171 182.609 225 182.609 cv
252.829 182.609 275.391 205.17 275.391 233 cv
275.391 260.83 252.829 283.391 225 283.391 cv
cp
225 160.604 mo
185.018 160.604 152.604 193.017 152.604 233 cv
152.604 272.983 185.018 305.397 225 305.397 cv
264.982 305.397 297.396 272.983 297.396 233 cv
297.396 193.017 264.982 160.604 225 160.604 cv
cp
f
225 173.07 mo
191.955 173.07 165.07 199.955 165.07 233 cv
165.07 266.045 191.955 292.93 225 292.93 cv
258.045 292.93 284.93 266.045 284.93 233 cv
284.93 199.955 258.045 173.07 225 173.07 cv
cp
225 294.93 mo
190.852 294.93 163.07 267.148 163.07 233 cv
163.07 198.852 190.852 171.07 225 171.07 cv
259.148 171.07 286.93 198.852 286.93 233 cv
286.93 267.148 259.148 294.93 225 294.93 cv
cp
1 1 1 rgb
f
263.963 233.496 mo
263.967 233.244 li
263.967 211.96 248.855 195.734 231.557 192.113 cv
227.99 191.366 225 194.348 225 197.942 cv
225 194.348 222.012 191.366 218.444 192.113 cv
201.145 195.734 186.033 211.96 186.033 233.244 cv
186.039 233.496 li
186.033 233.734 li
186.033 236.493 186.328 239.184 186.866 241.789 cv
190.239 259.125 203.522 270.764 218.444 273.888 cv
222.012 274.634 225 271.651 225 268.057 cv
225 271.651 227.99 274.634 231.557 273.888 cv
246.479 270.764 259.762 259.125 263.135 241.789 cv
263.674 239.184 263.967 236.493 263.967 233.734 cv
263.963 233.496 li
cp
.901961 .901961 .901961 rgb
f
244.662 258.502 mo
247.959 258.969 251.424 257.903 253.91 255.324 cv
257.188 251.925 257.773 246.923 255.725 242.947 cv
258.105 241.335 259.67 239.318 259.67 236.227 cv
259.67 233.945 258.816 232.574 257.414 230.992 cv
257.777 230.018 257.975 228.963 257.975 227.863 cv
257.975 225.439 257.014 223.242 255.451 221.628 cv
256.754 218.374 256.078 214.1 253.385 210.635 cv
250.977 207.536 247.541 206.908 244.355 206.914 cv
244.25 204.011 242.586 201.263 239.789 199.913 cv
235.766 197.968 230.928 199.654 228.984 203.678 cv
229.004 203.749 li
228.609 204.699 228.387 205.739 228.387 206.831 cv
228.387 208.106 228.686 209.312 229.217 210.383 cv
228.162 211.134 227.471 212.364 227.471 213.757 cv
227.471 215.773 228.912 217.451 230.818 217.822 cv
228.402 218.859 226.709 221.258 226.709 224.057 cv
226.709 225.941 227.479 227.648 228.721 228.877 cv
227.574 230.092 226.867 231.727 226.867 233.529 cv
226.867 235.876 228.059 237.942 229.869 239.161 cv
228.396 240.989 227.471 243.623 227.471 246.551 cv
227.471 249.62 229.557 254.038 229.557 254.038 cv
228.676 255.342 228.16 256.914 228.16 258.606 cv
228.16 263.119 231.818 266.776 236.332 266.776 cv
240.844 266.776 244.504 263.119 244.504 258.606 cv
244.662 258.502 li
cp
.423529 .682353 .776471 rgb
f
205.844 258.502 mo
202.548 258.969 199.083 257.903 196.597 255.324 cv
193.319 251.925 192.733 246.923 194.782 242.947 cv
192.401 241.335 190.836 239.318 190.836 236.227 cv
190.836 233.945 191.69 232.574 193.092 230.992 cv
192.73 230.018 192.531 228.963 192.531 227.863 cv
192.531 225.439 193.494 223.242 195.056 221.628 cv
193.754 218.374 194.428 214.1 197.121 210.635 cv
199.531 207.536 202.966 206.908 206.151 206.914 cv
206.256 204.011 207.921 201.263 210.717 199.913 cv
214.741 197.968 219.58 199.654 221.523 203.678 cv
221.502 203.749 li
221.898 204.699 222.12 205.739 222.12 206.831 cv
222.12 208.106 221.821 209.312 221.29 210.383 cv
222.345 211.134 223.036 212.364 223.036 213.757 cv
223.036 215.773 221.595 217.451 219.688 217.822 cv
222.105 218.859 223.798 221.258 223.798 224.057 cv
223.798 225.941 223.027 227.648 221.785 228.877 cv
222.932 230.092 223.64 231.727 223.64 233.529 cv
223.64 235.876 222.449 237.942 220.638 239.161 cv
222.111 240.989 223.036 243.623 223.036 246.551 cv
223.036 249.62 220.951 254.038 220.951 254.038 cv
221.831 255.342 222.346 256.914 222.346 258.606 cv
222.346 263.119 218.688 266.776 214.175 266.776 cv
209.662 266.776 206.003 263.119 206.003 258.606 cv
205.844 258.502 li
cp
.972549 .6 .0980392 rgb
f
229.834 203.874 mo
229.786 204.074 li
229.42 204.956 229.234 205.884 229.234 206.831 cv
229.234 207.945 229.483 209.014 229.976 210.007 cv
230.161 210.38 230.048 210.832 229.708 211.074 cv
228.838 211.693 228.318 212.697 228.318 213.757 cv
228.318 215.33 229.438 216.689 230.98 216.99 cv
231.346 217.061 231.621 217.362 231.661 217.731 cv
231.7 218.102 231.494 218.454 231.152 218.601 cv
228.968 219.538 227.557 221.68 227.557 224.057 cv
227.557 225.654 228.182 227.151 229.316 228.274 cv
229.644 228.598 229.653 229.124 229.337 229.459 cv
228.291 230.567 227.715 232.013 227.715 233.529 cv
227.715 235.508 228.697 237.351 230.343 238.458 cv
230.539 238.591 230.672 238.8 230.707 239.034 cv
230.742 239.27 230.678 239.508 230.529 239.692 cv
229.124 241.436 228.318 243.936 228.318 246.551 cv
228.318 249.392 230.303 253.634 230.323 253.677 cv
230.45 253.947 230.426 254.265 230.259 254.513 cv
229.44 255.724 229.008 257.14 229.008 258.606 cv
229.008 262.645 232.293 265.929 236.332 265.929 cv
240.371 265.929 243.656 262.645 243.656 258.606 cv
243.656 258.276 243.845 257.991 244.119 257.851 cv
244.298 257.704 244.529 257.628 244.781 257.663 cv
247.919 258.109 251.105 257.014 253.3 254.736 cv
256.241 251.685 256.913 247.104 254.972 243.336 cv
254.774 242.954 254.895 242.486 255.249 242.245 cv
257.721 240.572 258.822 238.716 258.822 236.227 cv
258.822 234.236 258.104 233.049 256.78 231.555 cv
256.572 231.32 256.511 230.99 256.62 230.696 cv
256.957 229.793 257.127 228.84 257.127 227.863 cv
257.127 225.744 256.315 223.739 254.843 222.218 cv
254.61 221.978 254.54 221.624 254.664 221.314 cv
255.893 218.246 255.128 214.258 252.716 211.155 cv
250.893 208.809 248.326 207.761 244.397 207.761 cv
244.355 207.761 li
243.899 207.761 243.525 207.4 243.509 206.944 cv
243.41 204.248 241.844 201.846 239.421 200.676 cv
237.679 199.835 235.713 199.721 233.886 200.357 cv
232.119 200.973 230.688 202.217 229.834 203.874 cv
cp
236.332 267.624 mo
231.358 267.624 227.313 263.579 227.313 258.606 cv
227.313 256.962 227.755 255.368 228.596 253.97 cv
228.061 252.751 226.623 249.23 226.623 246.551 cv
226.623 243.886 227.37 241.305 228.694 239.331 cv
227.006 237.888 226.02 235.777 226.02 233.529 cv
226.02 231.843 226.573 230.225 227.592 228.896 cv
226.471 227.536 225.862 225.845 225.862 224.057 cv
225.862 221.618 227.018 219.372 228.912 217.952 cv
227.521 217.054 226.623 215.491 226.623 213.757 cv
226.623 212.386 227.195 211.079 228.18 210.143 cv
227.755 209.092 227.539 207.981 227.539 206.831 cv
227.539 205.721 227.745 204.633 228.152 203.594 cv
228.16 203.491 228.182 203.391 228.222 203.31 cv
229.26 201.16 231.073 199.542 233.328 198.757 cv
235.583 197.971 238.008 198.11 240.158 199.149 cv
242.904 200.476 244.759 203.083 245.137 206.077 cv
247.881 206.161 251.479 206.801 254.054 210.115 cv
256.742 213.574 257.627 217.86 256.425 221.436 cv
257.975 223.22 258.822 225.482 258.822 227.863 cv
258.822 228.871 258.671 229.858 258.374 230.806 cv
259.706 232.385 260.518 233.903 260.518 236.227 cv
260.518 239.081 259.331 241.32 256.795 243.225 cv
258.667 247.502 257.794 252.517 254.52 255.912 cv
252.128 258.393 248.737 259.672 245.314 259.424 cv
244.9 264.015 241.029 267.624 236.332 267.624 cv
cp
.239216 .27451 .333333 rgb
f
243.149 263.894 mo
242.992 263.894 242.833 263.85 242.691 263.759 cv
242.298 263.505 242.185 262.98 242.438 262.587 cv
243.229 261.358 243.63 259.934 243.598 258.467 cv
243.546 256.108 242.351 253.905 240.399 252.574 cv
240.013 252.311 239.913 251.783 240.177 251.396 cv
240.44 251.011 240.967 250.91 241.354 251.174 cv
243.756 252.813 245.229 255.525 245.293 258.43 cv
245.332 260.236 244.838 261.991 243.863 263.505 cv
243.701 263.756 243.428 263.894 243.149 263.894 cv
cp
f
249.74 236.722 mo
249.272 236.722 248.893 236.342 248.893 235.874 cv
248.893 235.406 249.272 235.026 249.74 235.026 cv
253.841 235.026 257.176 231.691 257.176 227.592 cv
257.176 227.124 257.556 226.744 258.023 226.744 cv
258.491 226.744 258.871 227.124 258.871 227.592 cv
258.871 232.626 254.774 236.722 249.74 236.722 cv
cp
f
237.42 210.913 mo
237.196 210.913 236.973 210.824 236.807 210.649 cv
236.483 210.311 236.496 209.774 236.835 209.451 cv
239.116 207.279 242.107 206.083 245.26 206.083 cv
245.727 206.083 246.107 206.462 246.107 206.93 cv
246.107 207.398 245.727 207.778 245.26 207.778 cv
242.545 207.778 239.968 208.808 238.005 210.679 cv
237.841 210.835 237.63 210.913 237.42 210.913 cv
cp
f
240.661 219.911 mo
238.62 219.911 236.331 218.825 234.614 216.833 cv
231.925 213.711 231.643 209.529 233.986 207.51 cv
234.338 207.206 234.876 207.244 235.181 207.599 cv
235.486 207.953 235.447 208.488 235.092 208.794 cv
233.457 210.203 233.818 213.313 235.897 215.727 cv
237.979 218.14 241 218.956 242.637 217.548 cv
242.988 217.244 243.525 217.282 243.831 217.637 cv
244.137 217.991 244.098 218.526 243.742 218.832 cv
242.895 219.563 241.818 219.911 240.661 219.911 cv
cp
f
248.844 228.832 mo
248.742 228.832 248.64 228.814 248.539 228.775 cv
245.639 227.658 244.188 224.389 245.303 221.487 cv
246.422 218.586 249.69 217.134 252.594 218.251 cv
253.03 218.42 253.248 218.91 253.08 219.347 cv
252.911 219.784 252.42 219.999 251.984 219.833 cv
249.955 219.05 247.667 220.068 246.885 222.097 cv
246.104 224.125 247.12 226.412 249.148 227.193 cv
249.585 227.362 249.803 227.852 249.635 228.289 cv
249.505 228.626 249.184 228.832 248.844 228.832 cv
cp
f
236.584 257.354 mo
236.482 257.354 236.379 257.336 236.279 257.298 cv
233.379 256.179 231.928 252.908 233.045 250.007 cv
233.587 248.602 234.643 247.491 236.02 246.881 cv
237.398 246.27 238.93 246.232 240.334 246.773 cv
240.77 246.941 240.988 247.432 240.82 247.868 cv
240.651 248.306 240.16 248.52 239.725 248.355 cv
237.692 247.568 235.408 248.588 234.627 250.616 cv
233.846 252.645 234.86 254.934 236.889 255.716 cv
237.325 255.885 237.543 256.375 237.375 256.811 cv
237.245 257.148 236.924 257.354 236.584 257.354 cv
cp
f
240.896 241.913 mo
238.424 241.913 236.412 239.9 236.412 237.428 cv
236.412 236.96 236.792 236.58 237.26 236.58 cv
237.727 236.58 238.107 236.96 238.107 237.428 cv
238.107 238.966 239.358 240.218 240.896 240.218 cv
242.436 240.218 243.688 238.966 243.688 237.428 cv
243.688 236.96 244.067 236.58 244.535 236.58 cv
245.003 236.58 245.383 236.96 245.383 237.428 cv
245.383 239.9 243.37 241.913 240.896 241.913 cv
cp
f
251.097 248.564 mo
251.035 248.563 li
249.84 248.477 248.75 247.931 247.966 247.024 cv
247.182 246.118 246.797 244.961 246.884 243.767 cv
247.061 241.298 249.221 239.431 251.68 239.614 cv
252.146 239.648 252.498 240.054 252.465 240.52 cv
252.432 240.987 252.024 241.335 251.559 241.306 cv
250.017 241.176 248.685 242.352 248.574 243.888 cv
248.52 244.632 248.759 245.352 249.247 245.915 cv
249.735 246.479 250.413 246.818 251.156 246.871 cv
251.623 246.905 251.975 247.311 251.941 247.777 cv
251.909 248.224 251.537 248.564 251.097 248.564 cv
cp
f
238.311 227.189 mo
238.25 227.186 li
235.782 227.009 233.92 224.858 234.099 222.392 cv
234.276 219.926 236.41 218.054 238.895 218.239 cv
239.361 218.273 239.713 218.678 239.68 219.145 cv
239.646 219.612 239.239 219.967 238.773 219.93 cv
237.231 219.813 235.899 220.979 235.789 222.514 cv
235.678 224.048 236.837 225.386 238.371 225.497 cv
238.838 225.53 239.189 225.936 239.156 226.402 cv
239.124 226.849 238.752 227.189 238.311 227.189 cv
cp
f
232.23 235.125 mo
232.02 235.125 231.809 235.047 231.645 234.89 cv
231.307 234.566 231.295 234.03 231.618 233.691 cv
231.68 233.628 237.785 227.402 246.193 232.206 cv
246.601 232.438 246.741 232.955 246.509 233.361 cv
246.275 233.769 245.757 233.909 245.354 233.677 cv
238.08 229.524 232.895 234.809 232.843 234.863 cv
232.677 235.037 232.453 235.125 232.23 235.125 cv
cp
f
206.138 257.849 mo
206.415 257.987 206.606 258.274 206.606 258.606 cv
206.606 262.645 209.892 265.929 213.93 265.929 cv
217.968 265.929 221.254 262.645 221.254 258.606 cv
221.254 257.138 220.821 255.722 220.003 254.513 cv
219.836 254.265 219.811 253.947 219.939 253.677 cv
219.959 253.634 221.943 249.392 221.943 246.551 cv
221.943 243.936 221.138 241.436 219.733 239.692 cv
219.584 239.508 219.52 239.27 219.555 239.034 cv
219.591 238.8 219.723 238.591 219.92 238.458 cv
221.565 237.351 222.548 235.508 222.548 233.529 cv
222.548 232.014 221.971 230.567 220.923 229.459 cv
220.607 229.124 220.616 228.598 220.944 228.274 cv
222.08 227.151 222.706 225.654 222.706 224.057 cv
222.706 221.68 221.294 219.538 219.109 218.601 cv
218.767 218.454 218.561 218.102 218.6 217.731 cv
218.64 217.362 218.916 217.061 219.281 216.99 cv
220.824 216.69 221.943 215.33 221.943 213.757 cv
221.943 212.696 221.423 211.693 220.553 211.074 cv
220.214 210.833 220.1 210.38 220.285 210.007 cv
220.777 209.013 221.027 207.944 221.027 206.831 cv
221.027 205.882 220.841 204.955 220.475 204.074 cv
220.416 203.85 li
219.561 202.206 218.134 200.97 216.376 200.357 cv
214.549 199.721 212.583 199.834 210.841 200.676 cv
208.416 201.847 206.85 204.249 206.753 206.944 cv
206.737 207.4 206.362 207.761 205.906 207.761 cv
205.864 207.761 li
201.936 207.761 199.37 208.809 197.545 211.155 cv
195.135 214.257 194.37 218.244 195.597 221.314 cv
195.721 221.624 195.652 221.978 195.419 222.218 cv
193.945 223.741 193.133 225.746 193.133 227.863 cv
193.133 228.837 193.305 229.79 193.642 230.696 cv
193.751 230.99 193.689 231.32 193.482 231.555 cv
192.157 233.048 191.439 234.235 191.439 236.227 cv
191.439 238.716 192.541 240.572 195.013 242.245 cv
195.368 242.486 195.487 242.954 195.291 243.336 cv
193.349 247.104 194.02 251.685 196.962 254.736 cv
199.158 257.014 202.342 258.109 205.48 257.663 cv
205.724 257.628 205.961 257.702 206.138 257.849 cv
cp
213.93 267.624 mo
209.233 267.624 205.363 264.015 204.948 259.424 cv
201.529 259.674 198.134 258.395 195.742 255.912 cv
192.468 252.517 191.595 247.502 193.467 243.225 cv
190.931 241.32 189.745 239.081 189.745 236.227 cv
189.745 233.902 190.556 232.384 191.888 230.806 cv
191.59 229.856 191.439 228.868 191.439 227.863 cv
191.439 225.483 192.287 223.222 193.837 221.436 cv
192.635 217.859 193.52 213.573 196.207 210.115 cv
198.784 206.801 202.381 206.161 205.124 206.077 cv
205.501 203.085 207.356 200.477 210.104 199.149 cv
212.254 198.112 214.679 197.972 216.934 198.757 cv
219.188 199.542 221.002 201.159 222.041 203.31 cv
222.09 203.412 222.118 203.521 222.124 203.633 cv
222.521 204.658 222.722 205.732 222.722 206.831 cv
222.722 207.98 222.507 209.09 222.081 210.142 cv
223.066 211.078 223.638 212.385 223.638 213.757 cv
223.638 215.491 222.74 217.054 221.349 217.952 cv
223.245 219.372 224.4 221.618 224.4 224.057 cv
224.4 225.845 223.79 227.536 222.668 228.896 cv
223.688 230.225 224.243 231.843 224.243 233.529 cv
224.243 235.777 223.256 237.888 221.568 239.331 cv
222.891 241.304 223.638 243.885 223.638 246.551 cv
223.638 249.23 222.201 252.751 221.666 253.969 cv
222.507 255.366 222.949 256.959 222.949 258.606 cv
222.949 263.579 218.903 267.624 213.93 267.624 cv
cp
.847059 .247059 .0823529 rgb
f
207.112 263.894 mo
206.833 263.894 206.561 263.757 206.399 263.505 cv
205.424 261.991 204.93 260.236 204.97 258.43 cv
205.033 255.526 206.505 252.814 208.907 251.174 cv
209.293 250.909 209.82 251.01 210.084 251.396 cv
210.349 251.783 210.249 252.311 209.862 252.574 cv
207.911 253.906 206.715 256.109 206.664 258.467 cv
206.631 259.935 207.032 261.359 207.824 262.587 cv
208.077 262.98 207.964 263.505 207.57 263.758 cv
207.428 263.85 207.27 263.894 207.112 263.894 cv
cp
f
200.521 236.722 mo
195.487 236.722 191.391 232.626 191.391 227.592 cv
191.391 227.124 191.771 226.744 192.239 226.744 cv
192.706 226.744 193.086 227.124 193.086 227.592 cv
193.086 231.691 196.421 235.026 200.521 235.026 cv
200.989 235.026 201.369 235.406 201.369 235.874 cv
201.369 236.342 200.989 236.722 200.521 236.722 cv
cp
f
212.842 210.913 mo
212.632 210.913 212.421 210.835 212.257 210.679 cv
210.292 208.808 207.716 207.778 205.002 207.778 cv
204.534 207.778 204.155 207.398 204.155 206.93 cv
204.155 206.462 204.534 206.083 205.002 206.083 cv
208.153 206.083 211.145 207.279 213.426 209.451 cv
213.765 209.774 213.778 210.311 213.456 210.649 cv
213.289 210.824 213.065 210.913 212.842 210.913 cv
cp
f
209.601 219.911 mo
208.444 219.911 207.367 219.562 206.52 218.832 cv
206.165 218.526 206.125 217.991 206.431 217.637 cv
206.736 217.283 207.27 217.243 207.626 217.548 cv
209.262 218.956 212.284 218.139 214.363 215.727 cv
215.404 214.519 216.043 213.105 216.164 211.746 cv
216.274 210.49 215.922 209.441 215.17 208.794 cv
214.815 208.488 214.776 207.954 215.081 207.599 cv
215.386 207.245 215.921 207.205 216.276 207.51 cv
217.453 208.523 218.012 210.08 217.852 211.895 cv
217.701 213.605 216.918 215.359 215.647 216.833 cv
213.931 218.825 211.641 219.911 209.601 219.911 cv
cp
f
201.418 228.832 mo
201.078 228.832 200.757 228.626 200.627 228.289 cv
200.459 227.852 200.677 227.361 201.113 227.193 cv
202.097 226.815 202.873 226.076 203.301 225.113 cv
203.728 224.15 203.755 223.079 203.376 222.096 cv
202.998 221.112 202.259 220.335 201.296 219.908 cv
200.333 219.482 199.261 219.455 198.278 219.833 cv
197.842 220.001 197.351 219.784 197.182 219.347 cv
197.014 218.91 197.232 218.42 197.668 218.251 cv
199.074 217.71 200.605 217.748 201.983 218.359 cv
203.36 218.97 204.416 220.081 204.958 221.487 cv
205.499 222.892 205.461 224.424 204.85 225.801 cv
204.239 227.178 203.128 228.233 201.723 228.775 cv
201.623 228.814 201.52 228.832 201.418 228.832 cv
cp
f
213.676 257.354 mo
213.336 257.354 213.015 257.148 212.886 256.811 cv
212.717 256.375 212.935 255.885 213.372 255.716 cv
215.401 254.934 216.417 252.645 215.635 250.616 cv
214.854 248.587 212.566 247.569 210.537 248.355 cv
210.1 248.52 209.609 248.306 209.441 247.868 cv
209.273 247.432 209.491 246.94 209.927 246.773 cv
212.832 245.656 216.1 247.107 217.217 250.007 cv
218.334 252.909 216.882 256.18 213.981 257.298 cv
213.881 257.336 213.778 257.354 213.676 257.354 cv
cp
f
209.365 241.913 mo
206.892 241.913 204.879 239.9 204.879 237.428 cv
204.879 236.96 205.259 236.58 205.727 236.58 cv
206.194 236.58 206.574 236.96 206.574 237.428 cv
206.574 238.966 207.826 240.218 209.365 240.218 cv
210.904 240.218 212.156 238.966 212.156 237.428 cv
212.156 236.96 212.536 236.58 213.003 236.58 cv
213.471 236.58 213.851 236.96 213.851 237.428 cv
213.851 239.9 211.838 241.913 209.365 241.913 cv
cp
f
199.165 248.564 mo
198.725 248.564 198.352 248.224 198.321 247.777 cv
198.287 247.311 198.639 246.905 199.105 246.871 cv
199.849 246.818 200.527 246.479 201.015 245.915 cv
201.502 245.352 201.742 244.632 201.688 243.888 cv
201.635 243.145 201.295 242.467 200.731 241.979 cv
200.167 241.491 199.445 241.251 198.705 241.305 cv
198.235 241.355 197.832 240.987 197.798 240.52 cv
197.765 240.054 198.116 239.648 198.582 239.614 cv
199.777 239.525 200.934 239.913 201.841 240.697 cv
202.747 241.481 203.293 242.571 203.379 243.767 cv
203.465 244.961 203.08 246.118 202.296 247.024 cv
201.512 247.931 200.421 248.477 199.227 248.563 cv
199.165 248.564 li
cp
f
211.95 227.189 mo
211.509 227.189 211.138 226.849 211.105 226.402 cv
211.072 225.936 211.423 225.53 211.89 225.497 cv
213.424 225.386 214.583 224.047 214.474 222.513 cv
214.363 220.979 213.02 219.813 211.489 219.93 cv
211.031 219.965 210.616 219.612 210.583 219.145 cv
210.549 218.678 210.901 218.273 211.368 218.239 cv
213.834 218.06 215.986 219.926 216.164 222.392 cv
216.341 224.858 214.478 227.009 212.012 227.186 cv
211.95 227.189 li
cp
f
218.032 235.125 mo
217.81 235.125 217.587 235.038 217.421 234.864 cv
217.208 234.645 212.145 229.545 204.909 233.677 cv
204.501 233.911 203.984 233.768 203.752 233.361 cv
203.52 232.955 203.662 232.438 204.068 232.206 cv
212.479 227.398 218.583 233.628 218.644 233.691 cv
218.968 234.029 218.956 234.566 218.618 234.89 cv
218.453 235.047 218.242 235.125 218.032 235.125 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 /13 /14 /15 /16 /17 /18 /19 
/20 /21 /22 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 18.0.0
%%For: (IvAN) ()
%%Title: (1410.i042.024.S.m004.c11.five sences concept.eps)
%%CreationDate: 10/28/2014 7:15 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KCKoOQ\+]]EY&"#(HD#rn6'>g4#256%K[S:8JY!B/,R..5P31,Z4s0K:J(N,j:.W1IG">O"fe\[dA6HtM?>E-A4Yr:?p);Ib
%j#GroG<&#GMqfTrr0R?[f?DI&g2>QR0Lqg>l(*NfmS:As#s4^NB"cmc/8*O`PT-%Rj^\(^S9Yq%lcjo7q0KSl$MWU>h1JV-*gW8^
%ZZ7uLZ:$$##P."Y*OlIa^h]A+*Gh<5dU(Sn67&:@q:secI/K+/1&P\X_es^(lZCnCDQVUe1l#4TRmIk'(UhKO#:OCK6fFY?pb>\Q
%O35.^=$8>Qjat\D>R$+RcYU'EV'GFAn/s4\+o3;R(\MWsq.GiLs$tbf?f<lc3#SljZa3TGB/#T:?r+\d9]&+]4TJDmAL4SdpVX=<
%^"a(Y:bh*Eh9;ViTD0KT1Q6n/\ELM,_(pqcEO$Y/\-0-9hoQ'hB8oA@r*Bd2=jB,9bLNi!#;b!"ma_:AK;N:9:>YBg_tL-#XUDh>
%$4>9B4E"9<3j^ZR]i6Z.Oc;4rr`A:80=R"[/kj5r]naM0SFMI3m7$J[X8F3\8OrG@[Td0M^\M&6FHMG'lNPMY3'?LdJnJcJ-bbq@
%?3(!KS=<sYr!]FaflD')'<jGIbWNn_OkP@8\_XD/f,Dhj4q+`)<6s-TG-)ZW<p3=drC7Wooje"+k$MD4k_3n5Cm]rRG-Ls.2XO*0
%q&V`2fVkr3cYtj)ph(WpHiqqd]m6]/NW,$S5nUerDMq1JGgV0`C(2`hn%W2-hu&+tH4PJ[BK(:?c,NWPn%WIUe`L;-Go]qsbr,uL
%27%`+(&jTDbfV6"fl*3-:^6i7o46%Pf%_PT69Eq17f<\gb!4/N-Fk5L.mQU(J4_CO^5)An.ormsQ__QjHFZmjBB0T3^oc=7pn\Dt
%'GZHB_sZ8IA\qtl6+=p5A=eAC0?=_%.FFp5h%P=jYYjf?daasec*9,U/P1eG5L'b.oigP&Q5<?M.CZps8j1u,dHQD-3Z)LQ]<U0g
%<GhIk-^jpFZQ=7Db+O6AL:5o<pW.HhA,Mp1mi(mFpi2IgZ<j]cCWGg_l_IQ!p7NSDgF(!j]@'(@.WRM'4g4l5q^A!tL/0N[X&uJ)
%+HBS!(ZsEJVqeDECt0"K=f=<g8$rQJE+Z:Tl\<e(2:#H>Z=W`)b,nJm=-I\Y.agH[VMI%Eio8jFd7h7dB8V[l\QT*0=jG7*C,F(G
%5QSnd.H<*1BP=]YB_']gs8)6Z?`S\V7F_?7_MCQ=!V:mKiXqdcn5#)*aZ:kJ!o1tt6TK:gTH<c?5]\bXfAW@=hg[eHQ__d@d]bhd
%b;1HEnd=k^;3i,c.ndTC8U4T>dFKpV5>RS5A7;<4WE:X7ek>g:Xq[,uP#i8B\&:p7M3Vb2'MHD3EP7_mk))IP07$&aFGmfq'NpP6
%8YK*3RVIgf8N\eMODi=)m'h,b9[%`h]=8?g4D:-&>`^6B[L1,Sl@M/lZG[QnbOHcaKJI*VH,TCS+W%F(8kATAT.C65OtT5(^s)@B
%D'Va'O*e&h^k(aE!PDsH1X#:>gZMco^q,f_Kj"Y>eT1Q-,sSMBB)b#p2rM_F5_aILYh'>8a;5t/Y2(]@k,Fm#lIC(1O?$ETBbOO<
%r=T(YrIN-5I[l,CcHKjcp7TdPEIXkSja'_cqPRB]SrCaFX'=_<$KujFA)3N9Y]bEB:!afBnYVb=UbP(H[,]3O25)JTJQR<XneN7f
%[3E<$"E!JJI8d8lD'%d'Xcr;V]tAWuC4]JpVK&2MUP:M[L4AU0Ab@$%9^MK,LHTU0.cKJPU$fM!1Ml#/dNE^Y3uYf=m7Okc4\W0F
%igF_b9o\:A[g$I6j\>'^Hl1%!d^HmF2q9mXJX8<s*Hlc%,Xc6"hAE&!M0jMh%a1EIe.07d@-&].[=S5^_.HXSkX@)5S@$03b<R:Q
%oo$lL7YV3)fuk;eCk_73pnJ/8-H^X5F)J27CKJ@^'l6E+bG3eK8'?m3LP/i@'\<#fKAH<KOYMZPN(P?t0#+A$dWiF;!_\7:.'o)J
%Eb!^ge<N[4\_lJjn^Nhn!a"fg>m<fqrh<Q]9T(]n?t-"Y>jBQ37V=>>PUlFg;I;'Lj\fG<p#W@@rpXXmjUsF_@XP^T2?hqWpc80>
%HW]/e.9E#=9Z>"OZ>l:MJ*4&m)hij,BPSsaFZS>n+oGZ1a0?;'"S(h;CXC-f_lkq1DUJmE./,cn>.Kb;4U9$^DGDn?W_$U3H@r`!
%U^]m<Ykmh5[@qkfe-W`'9VY14Z=M$=.;O?9%ad\IniBs8Gac#aAO6?dN:pKPB]_fJ8Sh5d];\r!@%4jYCEJfliEi@NX?h9fDlR*A
%FkH,ARW'\sgmi:Q'$N<P]O&;,0)jU?2SqqHd5c^"NAWD8qpq6r::GVIp-lGaW5Gl2nVmCa]>NPg->LR#&iAWu2qSNt;(I*t&,a%U
%N1FR_dG7D1'O(9[e_&>DF\CHu'5@)4h3PkK)$Ge#2"iiD'r)_s\]Z^F#`sQP:.GHuiZj#BDJEXGgU6Ik=kHHS#rkdq<j-YBN-pN@
%/:lW)RUkNPZC>VsOu5%qSUG@Jj#mlIOu>9Y9dnJss*k3Ps5V1?&tRs]"KWss_YZH3+,AL4'5?hZ-e.B#O5F-!oT[\*ib"XNneouH
%)aEGJW&\?/f)0#7)sba\4l6aes!?=?)ukOaDM"98h<10*21/!SP^3'2U1"_qhC"0HNVbd6D5XUUL4?N9?Lr^91$U%cG*DHnXkm[%
%Fb9(^9L,spk_;bWN(oM'.>\ICggM`;Y8"WuM]"Pbk@"l7`4mZ)XenC]O\#:+))8Z.4p=$%_Y=7H?W1CGDVJ8!it%>mrhNpX8RfO6
%]I\MJ#AX0^-OG&n#k:U`$ORA6*B9G)KqG.qJ)'$#?^SFQM2E6d`bpCds8#<td0T&b@9n=_--9K/\Q`sOICTL8C0,?2q-.a:I0oD9
%P>lp@<ED-$2MG>4<A.E?r1MF.EbcjJkH#*2-.r3e#Z'V;6"FSJpi@A1[$Si>(jGt<^)<7tG=hZa05mr)9]CntN&Q]8lEbOJJ])fn
%gL5]ta5fKPK#Wa4,U<t^:?&lY'&iL:p7oZF[2gPUC33FUf9;c"Wo)T^QL"R8IuK!EIe`,mgBmC;jh*;p9@03Hn2SfPebO*_.;ja7
%<0Ot68*.=]AgDo<=G,tX?c`(Ng9cG/@gr0'mH.Oa7$-)>CsF?rPF>(UUuoq0TcHat28NOu<bqIJeKiVfB"b0E24BLM9r_0=B>"\5
%*q_B?QMIDH<Ne9sEWYc)V-L4^\"OHl/'<15Sjg1e4%hC?$br_H;t+8)7=PY>U/\#S,YF6>N4k"4SjXHO`BAo&;3JR+.m8c!UDdW]
%'W!Qj7oB8Tcg?_Z8<#e(,biTkTq2QTMc,t?ZRAB`o>`GCnV*t7/BU\ZeX6':-j^mVoIS.74Xa6O(8Wc\B2OgKB)MIG.aOj9oIS.\
%i*0c]cCuRubh,;"[%9]XK\$ms8,p_;RRoV?PA$XaaB242bOZ>e^Iq(+nm:];3<SeUCN5OqR&]lsju*_WndRM_^GtX@M>T5rn+rH\
%2_QNbp.tEeAl;mG$Ef4"f2>kC!*i/N:K(LkEGb<?fS5X?>l/:p`/[AcD6-Sd[FS5T])o"/``e77'7ahsXd5\b,#jKh#T`j&P6mEY
%D@*o4B6Q'XC'-.q7TWqd?Fl(.F@!KsdUgoeBE"8/$167A%I6+KnrJE;:cQ$3j!H`.V`K;dd2BJsh?h09G'MRX.JKIAQab<M?"#!G
%?2-(p^qVC=%KF$A5@f5hdE(r+2<dbK#%qA-[S4J@C+]V*aaZ`RX\fOgC5pU_lKqeKXg$S4,T=*nhOA7`qSnj.HK.YrL$sE"]OB:f
%`g:[$N=HVM_Ko\:mO)eqfN[nGJ\uqhJc4KqrPaU#5E$NcN9ob"h*7nrcW\R'=?P?O"Q+j(2K0W0h68EumTi7;J!3.%DPl5XU-O=/
%dHRV.R.s3[VAkF2ZtnK]Z`op0?;2uF:"*>.'"$aWamq[0_)GsO=ZE21g"-EhhW$<TCfXm^SFK]+;aZb*D<4!B,U[RViefER.3;<c
%oNOl\Ij]aGG8f<oR-stal'/1$s-4gf42?fV,TQ2nch@XWK65F`85%AohfR1'h=I364l>l^+.%*J)"/\C9FNZ3o,Z5IFO)o%o,['a
%,a`G^p(9"G?IH:dpLV+=fiG3q*VGSC<b,[t/TH]g*oWu,s#T]L>LJecQ[=ZqV.\e6ZN374,K\Y"GK3FcmRLB_2ugG$M=oTm8Ja-5
%<q)*]$!K<56UG)t2`d>+#alUtQ/d$)2HBg"_A2QqCWF\bn$Qajm&m_5l:SBgDN*@&84.$(kj0+\l]ceH2\A6NnZt'$QH%7"c#QJ;
%BB*VU;*Vmg>PWcVZX.k*[hJWcR`ThRZV2WX:0<:d'#pJOH#GZ9;lE:&@gcH*7aIqGPU!Q3l#SVXrNsS'3j#Uf5i5>e!ok,78M]W(
%!#GTOJK9h#13*;Z)f&g_oJO%i6KmP//N7<^NXAIWJX>U.]]_&-$G>RNN/YNIJX84_Op57@^e5Sj8HUV[i$AiFr!Wj+_+&Yf5Y;,L
%=00K7G3:25Ji%U'R[DCAd?Rlmp&Usg7luGrOM5O?N)?]`lgC!Q,GU3]#\clmgUP"2,0;nb`r/%68]G2oh_R!(?RJEo^c3X\Yur>$
%3SlGMVJfl]06U%H_DE>#R+up+HXaX^+8j0Aj!='%?NIkg7>mPII;.[/o^,9bqY$c!PB+),c`d??c6OU_Pc=3e]M'i@Z]>KJ9Y?lY
%_1s58$,0@g1YpR)9%&Gk4OD]7IrDJ!c(h%/fYqRS%]]mPai$HuY<Pm4PA>VO%b738"'fK%:<KMAbo%A-Onk!1ouS)9e3f].%ukTb
%F867CVcHN6KM1L?.;#>MP/a#Fac8[?N&T:W7Hu45:(hpC#0jtK/Hda:DdQ6tnWFaZs/'dpnM'f.)TS3b6Yk]A)#b5f0p8meNFSc(
%N&6QW`\Gn$`q0a5)TS4u36%TNAp2@S:*WO254_X`>j7R?0:K9oB7ABZQhH1dIV`Abdcd6=6bC)\HDa.no1_*BdG4'=\s6.?_`n)6
%oBk/pM;$OIqkb958J(9W(jh]^'>1+(YhTOXmI4=5CfHRBE!,pVH(`/@/6BB5dsg<]qc!0^TdbBPcBPu>-4.mjrbH6]+oY?NH'Vte
%a_WofOp'[5kr+`mJBaR!7Jb`2oX.!LCP0Xg[6_PXn?_"f+84tb/<^qcS@Z2%,k;Da?0%9b*p!'tfVo4B;DLrO^(N;8@Ldc3BhWj.
%CHUVG&W7`idP=TrCamKUS*gAch94$J8_[!2E.B7j:!d_rMqnN+JQ&tK5lQrVKq#GF;dXFTI(<c\..u_?B!nGk>jBS1hH]?jNO:^3
%^h-0O\ZtnkVXSh4Jeor5r`na7rC28h_$j#n\^[0Ch7;%+424lqG:nFOjA(n#Q`)VPj3B7)e=i?OL[ImC=ZpYhP;)"KHZR;@hK8X9
%;t`8,K\GO-T:$!*JdHn,`7,*#-iUdll2*3apIb?RNLKuk:1');-EqVl#A[:enp:,9?ETg$A5lI5<Nai_5F)t:eiMV/od!CLSaWFf
%?,A7A:CJ3gCsT<9g]+Ef<5OJNOfN0\U75*+U)j%j`:[KPGfCX)`]Xr_]lu&&B0^dun1DJmK2/Uu<3Cn$Q#\WQTJ-1:c+1b7At0]S
%9E(p4EQ>IomipQ2<^Y<WQ#u-[jW<G_l']'<Cim8MO^G0T$QBN2EDs":k9Q28]oK]gOC@Z'$B@&an:lUd1i@+PRkY@jXeAJk@OqJ^
%G1K<nWG-G1<-q#b[rd=Hpa]dk4-oVqc)3m&6Gcd/%G?Hm=V6Kf>C%Tnf%_*FF'&4,kepSFdp`P.^a:jf`ID+:7[V8/3.K*gRma-Z
%=0RP,hi\mHj(f@*2Gn3&rHU<KT#R^c2N"@aKKl$YckX;45NYF4HMVprOWX[5S;u;:O,jEU\uCNdDV)HIB47OdYtl(6eSF!3Ec%W:
%4Gf/cAA0?mq58&1SY+A.H2?5[a*Sdq]hbW2%F.Z]b&99\3p,1".63F5,"]m2---%K=N6mOPH:0l-c[Lm0^e"hI!LZ604*$8ro:M.
%&gPK^`s0T7kkRBW0fe:a>AGsU1L^^KiKJ`MD:2bMF6P2`-ILcOO5A)A$/tm*TTTV21!s,AMG*HAM2B%;%Cj#k_3qDs"GEhKgt;L@
%1dgn"_ldgujXlaa8XRY2]Q)9#hJ>EkBW[7Q9MDE"DS"_g0kF$?naFP$9OQS6rC\m]Vr93FgXE7mS^%f#"M\JVlH[shS/Q%nrcGhC
%pBp?+fN[(]6+B-uUZBF]:BDQq`2k&LjJ16=Bhr(Fn0Wie-f1N9@<m26[S+%%1kg=+'+[gsVJs"lR%tZJ,!*h$$+?43K3p!cDY<,*
%@5KG+)O9-8KTTu;A6CQQ1=JG32UZ;_e'j7N5FCPNoPfV.EDY)sh_$iK7nLFj0SXXt.RP:-\is[pkLFD5Z&aB>=UC7G55pIKO[n8K
%p%n,[30WRb>SU'^-+GXC7kB-g%BfI<Um^!b,mVCYeU@ouVR`(9n=nUgJPtR`65F]i5!5u*ikPEif8J4fmg7K^\TW0-?WGp5M=Raq
%r21_<_V$]6CWNa9$`LY*8$GV"L\CHg#uA6(2>WKbm.s;af#Xd@-/BYfb[X6-=VuVB?FO0"^#ZVL\PoR$h:$85L)8acj<+'^[a)N>
%Yh5Xhc0fIOBst'N<W9!Rl8HXWXM"N%pKo3;'X#/:g-6HI1=%`u5*8P3Dtn;gIt[j(@ei!p)43(`Z*N`C_o$K\1J9gkG'@W3eshY6
%YLX`EV#Hje3<Xu\`(mo)QA`?a$]$i\)nI7e./*ng^]j8!^'hFZ4Ma0AjPk"o]CH<B:'Z.%<^l^B1a:gnehaY93aqQ*f\!?-Y:paf
%HJ#1q<6*&mqPP!"d]ci+U*<(YI.SMq^J-Ddg_2M83bDH3)Ve9h2luYU:?k@@*P!>LQ#V36VQc?&f!SqE0a&aoI*,^(E.(',UL5T[
%eFhb:pPA/4p`i5_8muN+@-]b[l,n84V0J9beb/FSEsQh!Y;d%Tb2Iq4Y0S,aAO\XJZuQjO5p!8O4N'(LCI.k4[O)Zr`l60m`s9&%
%d0cFF[%!k*p]l=-+T[dWbZrKa")1n!b]WfB9[@8N7qbCsPOT?h;mcNAZjt(\XoB*fSJJkYL_-/>7]%:\b=GJ#RIJSI'HWX2<;OIl
%-Tu&CIljW.SDr)Fi0?[L#Hq%kEb_K1++VqAFd\usIu`):7I(Yi;ma7O>5uh!VdMSLZi%sRbJjd'rtNtQ!k:g]_\B:l#-XO2Y>W#*
%nLDMY$,J-`i`1k;.:/iq2'I40DXF<GF\TMX^.7:i5sbmos7HI<'c@X\KT@LQZS996`Vj/@%M5LVQ,;)EiJONp]9@hePI\&t(9CHp
%nde(Q0bL>Q1"pG7d<]Q)iH1i;]!IlXmFB&(G>fYmlH!>a2KUq2HW'RX*"p1Bco*^-iS[.>)bqAX_8*qG3W?NJoY*CV3kuH;-4I:e
%Nt@.OSG7Yo6ZPd$NEQTbCrf&&=qc]qPVXEA'B=[Jl)%%0>1Z1pT=BoZ,&@URLgU_c'l(jpgQ7=-[3cKnE'$aP%;L_Sg,hl'CU-cp
%'$fT^0(FVM-m1\g6I+sLi031^6S;9`RR#4$mgslbnH#aH&r3<V2.<0>^d!Bt+!2)d\o?Ij]ggLqGsL#DM\NQG&[fD;`1ol`Jm)Zk
%nX6-&KV9/@HlN[@;+;CfY7kJ"AR(oE^)b01Efm*I"JV2,s)39]/(Ih"W-)Cqnf:IG)6,!6:`"^u;i>ncXeLFa.;2F"BVBps`WrkK
%_,UhGf+fu9`allB$CCS:k4/dVmq\8.VW1#r;UCjtd$"9]A#!Q'7J`:+'XY"N>56)gHrVNdI><)gT?2*'5#^#GBNYeT85X.8;/;]9
%NT1D/JlW4^f*!ZKLauJui#PG_&Hi&0W1]H3n,@Hb>bn#MJY7_[9?5-%8rprhTQOPe$68'(cf.bJ,^MHNA"E`Ro>^@;M\NNF&[X[C
%fbg,\l*:!t[B>?i%O4Z8=t]PtWV@6^GY70O!^ZuDj<@$p#t-@r-VVQNbTkPGnL83Y(U^d99'%5fe9ch8n+`L&nd,.XDob?S>*B4q
%H4\+"[(Q$1HjX'/"YDCs)(H1<iX*Wck>E02o)1RV<AF<+/+l3/o+rj#9d"\SS*5ooUrQ,(a/@j<:%7/,pbKGB30$Y1]^S'580gNI
%OFlIr*/@dpfJSN<L$msq.!rW!N-pLgf>T@t]:Sp_^$ARIDPJE^Q01s%ItW39NGIBb3-^R;f*$\l4ENVJ!Zs'Y.\D=EFhu7D*@<Ma
%F'WK[3BlD^IfG`5*jWSjAIl=B_.s\"$b$qm8*Ap/8*3b>\h85QT'sfm<rft-.k^ro^,"(*4BGu.G=g^'\O`u@!jPD4_e+;W5$iPU
%5/j[?@[B_)a&ea@3Qc`$p]U\Q%O?:MM^TUg_2B#?-5!o1lS,?*StJlql[%Kcqi/aJ;Cn8!/Gad3\gdu^-fS&9\ul3*<>62NnFFgM
%d09%AW_rnj8;D0R,"8Vj6`i'uS^J2A.;E-%[0Ym.:^7qeVsa[m"Ad*W<h?ooiG.B1$GQS6-.?@5CS`E<;q/B2C8E$6q.!7EI$A8+
%:s2Xq`2BPV?.;J2b4DO(QMi5XR%RK+(-Y0hl_7GV;4]uV[EM-d`WW]t;t)5N>naWoO7N2tTOg@11FAc[SpjI$laiaSI['#V5qV\*
%ShWO5o[nMJ>1Z3FoV4Nu$>S7Tnr*liV$GjUe@I8IV'"gp;aANRP\3ZT.m<*fK%;eF/,^mBT)r3iUHE#f>3Wlu'XY"N>3SP&rYX-'
%WtV@ZH7hAbXm:R>qGEhK"gj3uH;$RS4VjZAeoa8/r@#u6"'Xi^4QCur6$b(G7BL@"<r,[b56eO^7sW)W[F/RT.;E-)[F1-,r$e:M
%50>Z.TTu++:I4<XTTstjk77YJqb`q>!O)-;HjX33"L%Hm4F\8mR?-ot$$N.XjAYEV/p='5jnZg0bC5[g9Y`/A.\D=EFhoU,.*nLi
%?KS"F@fg!$Onf^(Xp\S#7sY(bm'7_p)&)@/:X5ljF\V3p5K`T<J_,,e7LdcZoI5#j&%m#!V'"fe<%Jq0&5#a:V]^(e$S)*'cQ@jE
%j'XorJFmlchYe.DXhEFkWuf+.8<1W6PSJbI@]7.bRC[?bf2G#B^ieb.iJdDf)S;UsQc#WD?"q_b1MM&@_05_023Zc'%Z66\Y2,B9
%m`6XiP7CnU)`qoHU"220>h&$6n@7'%.G)IT2cPdk3Q0Kni5SUHQpCH;KG!u59YDsD.RbBU1](SsmdG8PAaJ>NF0]00rX\n4s+eAh
%g8PMH]@f+j[;KZ,rjb3DbIIq$TSo:FIg@&"s1X,8T09!'kT>!=;5`'D8%fN'Vn`7XdF+R8Il#ol"`<Rp2<T<mA\#JFLH^_2p#Fni
%ZbpAqMu%oM*=<`Z*VBP@ksD`)3t!"`6FdJP1iom3&o^b/T<Z@m$*]Y<_fB$8ZEUnT*d(hVlTMZ&+T'pV>;)GqE5^!ORG!)9l4(h=
%=RL@e[DQ<0m$M!um<2XqqeqAf78Jd%X.7])eTTTl\\LtmKT<E(j+"X)>,JW<mkm-2hokE4$K)8q3fHd_hX@_@Ps9@[A8D5ol$U'#
%Sc1i$^8h`ZN@HcS-KuuCd_2m^6M=!&mYYZWQ';">N<LPP<7Uja>&RG:_ePo8R]O8E;Z(o4d#0t0fiZkKL\3@Kb"+;!2a7!B$C+qq
%gH>@mYV6ip]GgDoIo"onb^61Sr`c;aEi4kn+u1\L:%F_K?`Y3Fd(%V=\s@C"kb%CCpMj:^SU.Cn4YY/eCFG6[nNXErpE\.Jl^VGc
%h+:dn'%W(=&cmp83YlR:9[^EmM;%W49U^'KHi?`o3b-SZC-le_gN2$6K(4Mcl#sZC*c@_7S\JlTlj!iUHd,m/'':ns4!"S/nCh!o
%j"0P_X'f*/K$"3\?(!cS*BZnMk@1u5P05iVFWGLl6)NH**]D4/C8TF\2qo493GsV\ZBo0@>B`lQY2bPf8i)6"'.tjpQC!WU2mAN$
%6ap?=FBW8>mE,rQ8?J?FeG^6d.CH*qS!7MY[q'6EB"ct/iL-D3rlr;!"<E7/rM42/Q8Le$PFt7>5)q=)fIBt'K?l_3G>8B/VUK:'
%#P45H[@$cTgW\`)h.C9.h!'R\9:L%W!(X]TlTuCEH`cmbK1r?$$JWofB>(m8O!Ymc.u\\"*`:nkNm2BlJ*Z49pMsn"C(BWHc;$If
%K^J5:Aj?4&RjhBRh=>!V?L&NXP67P*)Cr&JlaEJ.VMeuk1:n]gDD0R-lLs'+4RASCG0B6-k@(dL4,a(..CSkZ?#;\;>`2o=;hA?C
%L(3?UfnaMm(AOTYG/X1q\&s]j?MQS)lnhr:Oc)XqGL;Y3LI:rghJ]j^5J$!tNI(3#>i,up]m;&@)iouOXu&'%AZq%5S_4@bL\2gC
%6S_0?KeUj<[76PJa;mW(BkOE;-!:lHVpjF5WE69m#/:Z&=:b1LaBTLco#m#1/HaNPGD9WJ<fo".(Xm]fG0UR[Y8,2ci!f[@"(^BM
%^YK_\Nm9/e]J&l%=.l1`pVQcjEYmH@eZ>#$3;OY`@5t=Bgb9LPHaD(c2u`\<HE[,-W%6(k@L%5[,O;l7Sc]9-SJuigJ&J8*W'P9g
%[Fb<t[TaTt2neZKMn\Y?[Tl4YhkAe4q86/^2_(.WV,FM)!&$$DnLm/N0m%(3H;!c;]7D"f\"OVc^_YEEVm0pA0Pn7RghaT:.5J])
%.]l`5gZLRbP<#5<e#d7eXm-erH9K9]UW\TX>)(l<$`p@F*@U[1B<+!uPgf='//?'oNXr=a!PDstYuV=7!p8!40Y,iT-$Ga^Y2$h;
%3[8^d)t.j:%7]LHl[%i-$,<tSF]d#nlXDQCl7)m5L%#B;U7++?OX[YGXgdJJG;A"m)d&^9=lE^m(M2i<4qjAT8"Hl2BtfeII-4]-
%[<W#[eu9ZKid<p@V^tX_8co:I?u^5?+)5HH_?\8Sc(eH*9Tl[93NRALb,pTe=Dqiu+qtt[/6H<[H5g$_V:gBmm@o_c;*-J4"hR.4
%M0hPNFuA#jf74Aam;9pi">G&JD#Z/_jIt71btbCUZlubA557*aOsH6J:K'#(>6ie0[&%&snbXUam8R9^b)ZpL7:iJU3Z$+fC]KD_
%^"eLSFD,Ao0F=l/IVEL425#)>G+&U'#q36.=gj>RpG$E+b%rb#]<uO>S-k\D9.8!=TbrEm!LhEcM.>ekW`IiuMjBgUF,8D`AXQ^%
%Cph8[o<Nc2fXVB*6H9SF%-n"7)X=#lkSG&=B[nB8EXp:[c:,Vl2%79AJ/g2b*Kf#dr/>;$[Zd$t-f3f%NS2Y#mF0?G[1hV]Wgt:(
%AL>2iURSC:ch_J"&XchiULrOQFN&WuhI5S6S"l01XJ(J_r4Cp5l7noAkR?]ddA-mI[W=/[6cMT?>Xg7DZJpDj)OG!7;g`?51sd*M
%V3%s';QbcAn=ndV>[\H9j9Dt8lE[,F%:kC6'_-SN[^,;oTO[9s@j8uS@(a)r$9ULRi/!>\JRa/^Yi3W]5a7Vrct"bWc&84JCfN*>
%.`d14V0"9c#\80_SP,SUm3RZ,%,?)a"k0W_3seGLAio98.MkepPt?=0G/=ZkRESlQ1n#3i=lo!j.npf/Dg/t=mU\1m_SaTDZeP`]
%qr@&"S*cc-F.)K5'Kqt;knl?5LY8bj$,O.&\B%F2,q7`[ffcU]4ed'GCZXp'l%Q7(5+pne9*Q*4<b;:@><\D$8"X.N!9F%J%gCe'
%id76#d&b;j6!s7]7cX!2B?o;#M+&R?o<(TQmj;]RhT56K`]b:`nXRMN'6tJgqBafUVmR9WqMgCAIE^:I_J+3\Cf("lXD#VhPYP=F
%e,&$/rNpj[$.`.iUM2iDgLs'mR7s_+j!a+WKZRU-6UmL!k(TMOrfA*(TeR=Ll\E]/E(?5(N_u?i*S&j1Ms?hU]<,RdH[W^t1+M%-
%6m;([Pg#ns\4a#*!%L2MJEk=i4W)^A'&tS3ls6<o0_]/7V92Ka?Rk[/*S-j$7$"<@$+ilt37qm6LUp>*H`-RU=PjG>7q"5mj$@lH
%!ZUNI(&d;h\P^mSpd$n+Msm^Y[]i?6[^o+L$X=\0f2]TV_piNpSp$Z4^?N&=o(VW63"\"bq:krc`4*DaMJ\Utk7$:bLp`C-mD+7,
%#sin2_e-U=PC=IpL$Q6a_r)$9L$o^J#DQ52^eYq[bdu[a[p#-[UmP'b]CV.(32-I0YFW?5nu>(?[0qi-j=S1\!`S6(/c<XSao2Sh
%6`/WK1LOU$[%iuhYeY>MS]j;G@3a5MJ&b;92_s%OF7MNDpLr]"arUC7=)B"qoI6$khHi,3WZqn+s)un?I0KXap+e3:p.VfT!CXh4
%A2R>[a!e-k2:R&BfRPVci5)jP#.-VDD.5er0N42-;U3e8lFn@MZNt&?Y>s)4=f5=]_$Y*=$8MZ#'rIS(T*K->m#+R/.&p+GPNar"
%;$W:*1"4@JJ<DGM>3dqZWG`&d0Ca"VH)04a=G$oL*"_s,RTG?HOhW^ggm<Hh_JkLV\c]IJH#YOXADM1UcJg]&d1rsVpUYlt!(2TY
%]+kJt0'ZoPQQ)E775[0Yb:U-(>73*-@80VFRuM%AUtn-8;tZc;3q[e?QS3$Ig*jtC[RPI2Gnl-E4&)*h56eZ=TR\QZG`@*bIcb7;
%!dt)LmX+GZ)_^)f*U4&8oTS#7-0R1Qj8UsjVtnO6!co_ckE#9aS>%rs0+N#-EB!l+I)#M#O.7NBC5lt[nWAl<Q[sm4_fN4lN\(`i
%@8!l6;*?jX$Rp;Pr8&6A);`]ShuLYk>-hiBParbgH#_Mn`MQ;@a"QcZS7YhEl%FE*(Ggu<WMj'f].]XRJ;)]Sc2)`f)tN'[e)++&
%$]D8%pbS_PcHR,rBN^92V$%X,X0e@OjmH1F8(bNsqEu$AEC0s2i*8p=%.$!E2c"TMS]L\Ia'RY3X/+)^$Zur;@`Jog=L3FRRP"^&
%iG`r`A+'""Z2^;QmOf\OU(4t/-#:9^CG8@le7*o82f?"YXSQ`tG$lsp#@K3O]A``\n*I8UY15T?5\Ybc@bir:JsW#l\mU65#Tt$i
%qnnG9%dQ-W;Z78tR[73p?oO@73F@D_oT@glE7$Ll`4"a"Z2#`Z$4m]<e19J.(.sI6euci(gt@)"\?`ZYp!$4g/V#oeQ)aWtrcn=s
%L\]IZ&+?]dh_%$6mVOW>f@h0V-d0Pi>>Io$(2!$=f?2dl?1I2O;;>;\HaWD-3Ie]Sp$r%Q[<Ab5Q&=q=5=7HG6V+-E[;`cDm]N[>
%c9>?7?"eB33mZFk4D&GAlW2d$HJ6Uc5C'fI[`ZM$p"I;RPsRBUs7kBU[]8fSJR5$,Zg>B_kSCm]b4G@c$b<V+<[YAef0,OO,jt:s
%"b-2?rbMK3)gG'8Lcdg?>2!783:^Cjr9uGM^Rfj:qPj"4bFd?d:J7>2Q93d+q81!BY;Ejg4bC_qr[N>IEA&;[HK4,QC\>0[8,8A:
%qMFs<p@ZLnH\Dg_qR3j/q#244&6-6IrqZ>1'<^bO.r86FDrhf6YBP&7Mg$)>&oYtD*]teE3]g[t<ns%JlR2U<AMlF,gmcX)=SOYd
%[XS6VBg(fGGkCjsSWf=2V0n/%[JAh0eqn]0,thgQ?+]uF\b>i52.)u$I"/Cas07pFg:R(g)_eb0o(9kOa,$#4T@S%Bb5J[BLX0%f
%]X*Y0CS&#b3HB0-asNZD?)G'O9&XLI2>!D_5P3elUq0f8?Rir9e)q6S(Djr9h:jqgD0WNIZaRTYHKS"B+`Qtj#)1;4im&ce^%lr&
%ol]rF1-</?8XB7P0`t-r,TbaW@JM&&LmJS;W^lm63O,M1kj.LLTqCa80.`Ain!.e8^Mi.B"TImnQ6NZNA'!Wr9eQI5IoKV%=0$7s
%cW'o:L#NnK)LKL_@0XImo8aq-(KfYdnO$U/Rtn$peZUVibL*[SL@VeEY'CH:b!3:6p_6_Zc9C%&>ToGJm]Clq5^#(Ob@<0]Mm&E$
%Ic9U?iFqK/[plmqs))-_^3[?dUi>fO[sq<?k'$/nT',g8K2WoUI<p)BDQ:E(^A[W4B7!3EhS.\>q(sSGY@lTcbb2Xb(68*G<S=3F
%DL$.!d@HO]C6Yr5GYIXXcG.Zr[nfY4mInXP^ARoR@l[/q>AFT`_$:A>q.B,AYW)HK*q+F(<GHKX.!WtYr57B-WDKL<o$gs"s(mdc
%.d3!SCp'o,GAl[<T6>SEHZNRO@pO"Bs)%WKVX5V*IEU2^K3d$^%DpQ[^"2!8M:d5`4=$s<$=UQ[5f0(I/%-e)7r3BcD<)1u;E<o@
%(Vc2RaZdl`2SXQLN<3iorOm,^cZ7d4o?U(q7o+P"T,gs*ld`=c&kRk;_a_?m*kmI<(Yu3Kn+0?KmlVSg"?ZnR&T/CC:1ln<f#q%r
%)i#Cb^M0:CmpNj:>V1%V>.5#p@"*gE)!I0KbtdkD^"0.h$(ZtrG1bT@bpQB#<l3sFB<\7WkAZSIT7?Y.rDW=;j,\_)%fAAoojFPA
%:d*"hI<f!uW]ck(W</+J57tI)kKW%pfDD'!;UL!i(*9eC:Pp62O0jcPbnmI':Fs87JaWc]b3?B^jp?(%eB82rmsV^\"^(TiIVuXO
%H4\EsZMXiun36Si:EF%fcee%Hi%ZrS2]3+Vp:Yh-lW`9?Bci$k\5tZ4h>c8#$+m%^_;).+fan/A7L2Z14WO7I9EE@Vg;c=\gE-Et
%DD[7Zqiur`OY>V-&q>7Prm=*laBs"8$Ytap>4#l9)g;[rlkc6VHa6aW/\6#o=4s&&#7ZrJs7tAB^Aa@-EP+J'$e=hjf,jFhf8!#U
%cBIG'o^MIQS9+/Mh'/?#qg"`MXDb6"eK^IGoH=MOQQO\1g%EBDm1DIXs!F"2VW".m7*'LrVu0K[D6]H&lU,s0IDS%Bj],0ge]!^7
%/f&W`_>@7FZ`G?;@t%*#fOs;#f8HRMob`'aIi3%1qN't`.l%K5B1LNE<WZJ-"m&]pYbeAE==rm4I8!k-V+$H-AIS8F<dNCsje&F!
%YfONW%[AuTi30F0O/(Q2RB^q8,9+ZR05W*'aY'u^=cKm;)Sno[Nc3pn(`3R(beRVbS$9Z%_IZ)F=7u=/6eSX+:K`p1oL;ddGYJ-f
%4rQ?L/fYX,BmF:EV4JV(WFsr3l&f@k@-0&qY%YNXc<T1oOo=rL[8j@Pdj#Bu<b(:Z@Jr6kADo8O)]oQse99#UIi4=EX0Wl'.t8Ra
%WYq:>!QO7rhp=QE-EkXPSWOksA6*L]G:\]OWN'0$P'ne&:"nF.8mF>iA?Y#-^qR1058o92Z>k&I?>VI?1!uQ#C7cVa\LW%g[k4f5
%&D4F;icXr#i;BXNM(m".Ek=i^cbSIdef*J-h#?VPNRA`AVsp(5R>h=4(3`ft/=,/9RFT_OGQ5M5$JDsI?[VhGM;bn^].k6LAgn/"
%;=T#nU![dT7LcTmI*?l2!B;p^o&;jcKQA5)\m+%6qlNcA3PG;hH3sOER[<FE4N;;'-!kS2iJ8;A4oWI]O3&Js\_Y9^X5%$*o;jpd
%[5?Y<CV@(jbd<>TYr`c4BBfem+83J2[b(+4d^%8$f3)J<J=DGI=asXc(5TFtH*s.55!IdS4Dd=X19?"rqrH4<mb+(rBLD*s]p^t;
%k\Q#kD%gfD4AbjoXE?,#(V:G!q\@Q?0WkSFk'=-oL!L)r00=MR[@Ih9;A[*M.q@@C[m+-a/WFk;i%]4i.@R3f39>t2c#&dS?f)j)
%f=m-=Q(t[R@k`<Q;!=38?T`89g;M\s7V7jmE;/XiU7uTnldDZRnIQ4Ii8@JkG]E/VHGW><d2+Lp[dUDlbeI@hW]b[<XN.BVX86(d
%;jdO:;WKDSVT$SakD:/[GcGfiUC:@AmcukOX2uc^j5)"<h4o+so;%D,8)t``qZa=*#,gFdF_FZq^@^OF;,Gnik8f-*?=\_+nE5Gc
%^:Z>tEPR@W1Tb=3r8hMKkgfS8TQ[<Mk,LkX'W!mLPRo5Sqn.7DFO^0X8tS=2\5Ok8H=,;uE9<W=Ye"dtl%AG)[[uVgm]8]ihOV@,
%JUlUhRG>t%H`p(r\Z5HKRe+dN`&m?,mZ=P`LTSX]*XkfJpSTu/lR*cm/^HZ83&iV`lVeRR1&EMOqKs=ms.,ounLe<Nk&^Nd4hMO.
%?ipUD\U%:(a=/dH_r!t(&TeA84T/>G=rU9kiet=3I6%?&FnqMP_S3Lfo'G1LE%t.+obY?5gY8ZUKs>pUAo"Sf"`bUD+?Z1]Yn/;>
%Oo,57mI<cG-V$4B#nRK*q-8Y0p,g6G(-Po,H$)=j$`YqjIXC1T\+;Jds/Pu,T!2HIV2oC%<9MAt`Tk99#KG6XV<61(GscH"IC"mm
%V'TBd:1"S'ig!3)aPA?dno4'GAK7`W0&pH3d&":DqF[aF^1[%uhL0]h^;pH)J69?dZ"9H_3]N7-MIZ6K4RElh]@Fm.jVM9"/SFI/
%gSMp$N[DUW>\nh(ed>&g=4U'3h@GrJ_TuSn909_.)hj%c:>\0UOni/ZD#4gm>+[hGK'0Uic?ndCh+hthJN/Na=>]no6A`<u^A2Qf
%Dnab&Nh.43Y:[L@`J[XhX^(e^&ED-Yii<IU`"Q9uN6cWI1(3Mt[fU(7I\dUa[^W&l+ms1:4.+"pch=!gNh5^QY&E\0o0'fl4<TVZ
%KqnSJ#)J0Fc0)d1]9`=jXR+I"#-93nbrhRX"`t2kH_$uLYB0SFCUbF<`UhVeSR$"a#//g;maA#pg1UEk7fCR6*1N>GU\O*4'$QiI
%#@OufHrW403E[8J.XUgT$qC*gf%RURPq`%8a/bQu%pR(WqW.=$:4ltE4)P#c\&Hd31RK-VN?2tSZD\1)\QJ)4Mu!2e3J'hDqHc9f
%hL;rBdL,46`p%kkC`oeA^MH(NR7h-pY#Z(JS^6kUYs<p8pIjhG36gh,au!K"n+_PfI&jA$DniBs6&UB?\[`u02]c#VIXoC9Gb3[G
%?i,"qK&#Ulf,d-EX=]cNb2T[N]<V?ErUjZ92@@>\hJ01`Ts.\Qh9#7IXF"jW5Ms!TA3sUgAtM9D$D)VrFgZe%#;Q\9m?q(%FuOVE
%355!@HcrPX3Z(Gr#>n@@*5p9c_C!RA&$'bqB+AmDY8.Y8hRE@+E`G&Js5)SFd_VK$HdKY*O2]FP]+l3l4PutSh;VlB_(7]\q>%\p
%+h,49moJ>1H+[k7h9nS@4ZBe`,b%"_NgM+gmZc:DT>5VTgVi;`WN`Vqg+];%DfD-qmcV5jpGh)<nn6=n4;jOjH(g22eD+MC@GdMj
%i2>tWIXJ`8qP],&7/;.]g`'-\Qp8:AI@B?fDSLMgn0>]?W3+eQlRQO)qb]Q>FRo[G-cK\F!K+93o&EXWO@"S*k72_Jmt7QtAa80!
%;4;j@e'1%&8#rnm5(*'u>,\"r$[k)X:q'R-rU&(o#`TQE2ntlmYpF2[4r!q?^M&'J*!K.(Ku4/'R:,>RHaT*=2f?eUlG043.=`@h
%b:hG54r0_Q>?t,b*.,6*==Vaog!XnYpU1si2mYaPqb,pW.JG5DAm0(\ZWs+_#=\<V3U!#0]*PLk_R%MA)!Dl?8ZN64STgnfdQN,3
%D]G'\4]nB8kJ"g&!X:0rq#]mPYobLJGq_=X*)LS2qeW^Uen,,pn8pmrP\)l#El#l<(O&K*S`b?rR2-$tGnV7&3ViD3>*R`%Jucu\
%OrJs4Dsttt%fUm^[^qis)u^\uF`.A7bTA!0d5etom[WG7D#RFS[WD3M0ng,2([3K`Q\,8gGk'VRa6[[)g"b!Scnah`Vc@i?TB2Lh
%gCN;HeO<,3c@5'n?FTuOh#;r]6,<#"L%=*?a,QLH:HhI@dp=SHGH:?BVSLnkBqNJK:2*(R[HE81p;q&cnidZoc-h6T"Td0dT)h_t
%XY0?!=2LX$>4:L.Vm#)sNQ3LiZdR"5mE!U<5L\UkhPqW^AtNoCnWB,9p>s=Vpd73RGM"rS%ODdtO7R"nrN@pXC@+UYRpDTthoNjN
%EE:9>b001Cgg9Fa4&7PJ]<HQ]lN!"-c_-/<;>Tj2-5^S7CbMu$TPOLOFmI?B0fOiA+#K<6`P^i%`Codhhg=so=T5UO4+B/<0?2[g
%VT!A7a"Q;dE7\R^!!Z&R/\lFE7=mN\J:W+=i#A'DRkH<a9/-=u^AkW`YLa-Q]U&k)#TWE&lRoN6c2%F<fj[,Ep$9n,@C,g9>Bi1j
%>Jg?g9ssSWX-_/.`Dl3\gUq)=r=l_BLY0"=_i.f:iO82SEV;!F?9U=KcE*P`3&j.iFiid$NR`Sk@9NbF94`VK`TP-Fl-!^_L,7)Z
%Hh6^d'C'"nO0J_gGh!H`jR`On`S9(_dCn*Od='So=?<BnQhhe&qn-kV,LUkq/UsAL_]>TL_6J"B)@dSj]U\$Vml(@Fk1NYXhro1P
%*!-t'S)q+pS[l5=$dYDnqGml'5MqJ*9mHkK37.@r$]sH0P#sp'^6eJ8]JfiZlcG@=62/i;C$gAZhnPp6jEf3]A,M'%@-b5>'-A:*
%Yd*`Thu?e@gs<Y_*4tr["%[#ibi"g6D?X0h=Gh,YnFQg#AZhYQ=T):CmB!^]T6GV+rb/#;he95uW2u=]$P-uF'lVVOL;imWRme:E
%PZd]fmI-=%X3*GP0mak7-6!T6<2],rp\)?a=Xk/43Ouj!'$QI7MhP%RpDb#mIkH5^ZF[!ZQ@U6@!UTN+qpjmaLdFR:kf__+GHQV^
%Cl6d)_JouFFb]iV\u0]F]uo_#\%[Yghr[\oN\u!$rr21`ET'jq(>R*YU6)PE04<h$2=.\?h]=m3*52l+@G*eiZLR@UogJqZ>t-&b
%h[Ya./3X1r?S("Fm?^TiK0f,H!;kHY]W@;+WNqks?(=oqimgeH$'sqYL!gC#"n2<LmR#msXWnHsK?DuDiq9dUS7IH(ba,_#:q4c/
%1TbcfrGeTOeGM-V"&2,bh\u=^5":h32gX0.kM3E<F+,qLn4:Co@\n;GZbQIWfajU,V^nTrL"FM#Xg&&s(RkM+hI"Wrp#D7aIG@3a
%q^QFjBSh^Ro35i6O,Rlk51SNGl.c&pTO@S0q=X?X$i6C\QXCas0AYNQ.6T\tIM6s&Dsh3F:Zq2VnOM3CGDha(KrR8$n:j*Wa_/*O
%iTMAV+h-/A,QHi,XaFIAjn@<>"7T!bi.s$<Q?1;U=Ggjk8o\Ha.r-Z-?KJl?jutAE3r[&O0!JDa>;E#UFR2t8+kB\fc$`W-Z#jno
%WtcXtb20]G]GBL@m9&^.^3e1`[heR.-]Mm:DK,NN%@)?nYPH>ip"HMYpMo$55H&r[OLpD[8bqeVo`l19L9oXm%(nXV^i8TJFoLjW
%hc>*H:j&5[Q84q)VBFc@fe5`5'UnDHm#-6R08RB(XKSST1"+`Ge>1C`iEK3K.c6m_2-r]KgBj4]cKj82_cl*-hW\W&c(<I9)85EL
%j"uC\15SY@=,%D.qmand#>Jh"P:.j)q`FLS'mW&JI4C$;0C.PG]c]\1T93KBagd_LFnk]<ZSH`Zc=OF&ZAH,8GM)5Y?YpROaX[#c
%jAp+?#E\nLIGGcAoDh+!,<tJbp)j1jTZ#a^6+MSp:[o<7PZM)SlT&277seZnb9'2\f?'XmZY*W&:^^XT*#n^M_rf2;GI!_Mk/Ot9
%mQ1@E08I,AiX/1&/D@l.R.qm)-P,l1_?]2oUO#Kj*\m/WVe3j)2h.PYeJ7k*0b6MF"cr:if&8oF%9LXP'/CRmrT-*Y9QI)p6^$VF
%nRM6R,dKi-5UB9/A1HkVT(P'c0H!In4D:n\A/Xq1bmZff9g+dWguFb9A6fE]]rpe#=jI\_WfdX\S1TrMKkJgS&"cY(1iPUCjE`F*
%&Z@\>.>5<1Tg!JHj*erYU+ug@W+>>np/*C,1'c!V('`92jJ+iWAI7:K$hYbP:V[[)%sN-]Kb&[T17`7>F-3._A:;Isb3A`)09b`)
%*&mA02$Jch4+ZZ1hfH?2&>XZ5mOFiMT"u+BpG!pJ8&uq\^ON;I#ZT%al?TOM4:U:]qS&kk\`:aDI,a?e,!HB6''8t%i\9+Z88"ei
%$$N\ul>niLJVO=QF/]Y(,cmN=P+-#V4\0*Hb(QaXMr!BmF<L]=,ElAMP,Q8tOq>5!>QHFVR(Mkrjg(AL*NDD%\kHR0,p.IT0"@E-
%OMh7A2)iEXncG@W8-!GF%:F"^YD/4U4JsgU*fi;W&JQ:`g&pTB9D.Y%VONDFl.f9='%$<iQUS\3](-gWND*eJ[h)"d.[9c1<Lq/3
%?UTT7j)dN_!g\^=a0,(,J3#l(-Cr&3PN>%K)2%A(kr:m2VF*]Sa'%iI`"s,G^ma<;K.3B$>Ui^9?r4T&0-4Yl-[_3I!E;lJl\.8*
%P(i`"aX!m`*]uK651WG\S%ZU]e2!jS'm,]`^FM,ZGoT\5@hV"ne%lQV3N>o`C42,XiL*$+eH*W-q(>q*`<5AO9Nd#R4YCE4*k9Qi
%MbZM;']9>ajZ7G#!uGng-8W(P-qbn4=c`=^jKN!%VZm/q.%!IX)ZZ0*GRc)0-7H$Ek[NNbMFgQD&0f?F7d4r)gS'>#-\SuPSI501
%\7c.j3W82%?ZBAA9BVDo)4fR_e>SUol-Lp&gaG;cYYZ@U&R2JMW2+5@JZcuBMeM?Qe"Jr__hZEd#sGBFGKobKhU*%VTJ.9Pl.d"Y
%9buX\RA;6taH_Dm5rEHNo:(-[d3oWuc,WM_]p!IePb1%m.<eRhPqi/PA=f1b7FNt@7t1<8R`O6jT=4j@<4dZP@_@]aVKa&q;"6Fh
%C#0Vck&"4ZR^XFhiba2Hc.c@3jDA#RR^XH<ibd:']IeAu[h4''DaTe!]FF+o[kV1Z[OVc)6^$GGf@@Nn.1pJc:;tuWp_[p:Z9eO^
%Nq##,:%PfH)i87Fn2>f[jDB.)k&"dMN434I.Gfe;/)H!aXa(k47e/G_fa#H?)fS192DSUWgPBp2mOH31LbQE$2)f!-k&&5TQFHBr
%%A$=R[kV%U2C;)Rk(2K.iFq)f,fSN*'_+)Y1Xi+V[q/U^gGjO*DtCd6[\QR>gB`Ok\"WaThSsZVgQ8R_>N-tg8WpP;8b"\a`H^,`
%R^_*<o/=$Sn[@athWCEgD+KQS2A_+W+^OUrkD$I..Zq3N@sAq7&b.cTCYjg!&`[_!f=[)TJ`LZ=d_$#\MRP<3U(+Obib_6;]FCDJ
%j)+3$hM1Y>Df]Z<)hoWXgJ2.$)ql.hD9"TJ%1Q=Mm<FApZ0%4Y*S9d=,fP#_iJ+fb?1PGa(uFDXk&!Z;]Zim8\)CrDgTX@]]FFZO
%DaUhiD20"c#('JB2AW;oD%PlI8CtK`-?Y9V+^O[t>&"Xf6b;Ds0X_[645B>6:GcuOY2O5jN>QSD^W9.RQ;P<^#gM+;+"5uhI*J^P
%n&K]8Q6*s^&c,l)o;Hb+BUj$Y3<SM*?T#1`V[%sLLF*NoeWqsOh2h09"?ai7JL#L[8liTa[Zocg6qbMRfV&mqj)Ru/%Ds+ED<)^3
%;-od%+^O[tqF-RVO_tkO,=PGR>5eAB$#f!U3H%R>dgPgGoA"jb*37P^]4AKhfSbl7gUkmT?f?Kdbj8Tsm2HqdB_=eNH5Cr<R3W5_
%%!DGs_Wh(<Q[cN_rtFi":hP9VX8`inrq5+FiD0AJ\G/E3r1@utJ&]#@mb7]"A,d3[rD,EG_d3,2E9N(ho>@-piNE)t8,d/Vpn)Nb
%LV*%?iP5tJhhO;^5NB?TK]>8OD'/2Q%sQ]^47'l@oqB\-:fi(TUH[I-ru!24\;NQ+62q8cr4d<uJ`U8h!QN"\oP38P"s!bQ.lu`X
%ZRrtJ-_U/Fl!b2!OK'^.J4j@-Pu6ZmfEO!)P,KL`CZ#m6JL(NV82QiW>^;c?$.If6XMlHAnpp%1>s]8\#*)&.j5CA@1^t'E(Psf9
%)`921CH3`(+U:7FfB+/+-:(TD,=4?,$NM/@JH7Ki_TXi(/<XBCp$k.^&q(ru9rKuqPfcT28sk35c97s'0Gkf:?(SFr'kS[uW:I`U
%n-G@;8kIsA>DYjU8JM4*Sq:U+8>DT7O[,k*#-abT$4./`pJV<_+2r1#o;GD.JKp@d^mI_<3%K*-"P/SS'gOlcU;o-+F%rIK&+lfN
%c_JRM&u'4e#8WN#<_<KN/3oTJ`sja/8#HLd:55%^<H1T<(b*fY%&PdMHUEAM]%V*G`^'rZ<BV..:aubh9J\2='QqO_b>&<E02R>$
%TFdYr7nsRONR70[\&+pAC/_)_i/.dD=&oEjrXS[5&oa9$DWhL?!.gp5UHp7X!tEgD#.''u?_tWV&h;BV9W^H%Gmoiae`.]1JLqK#
%b!6mU5'K\W%Q02<?,NCE^CnGo?u6#NR)-f6(%8\@r0gUI8UNiHae:12UeFmlYGVICN[-TC<IcU"QkbGhGOK&N!Y#WM6AGalnAIFA
%PIR&eaQS<RL0BG;f-C!FA3B'3QYY?B34S662Ten$bF,+tduF`0Dc^(sO=EA(896KDWF\o+MA+XK^.F!T"H$6RQ^'_,9u-h302>4I
%9-sZo!JMFqeYWK=.c?2m3LHk\>h::E1'(>2=7"uE6<,b+MJu)Xn6q-43?qIR(9)6=10[(-($D9tf(r;c>bKrpeG.Le&k8ZP>[Yd?
%^kAVTlQJAu&m(c\!96h*9_"Ak*+3Tu;]UD;Rkd-ISjtVkb'9oJ99*(7e`."fdCOH%aX3U_Cbb-oUA/;MLD6upB0!1cI3^JMfgl[d
%5^mc_.FTFVQLWmO0^efUNs%j40&VY-`HVIEf3D/VG`0;s2r>,SntGN*j<bl*BO:dA6q*.>24Oo#<hPs<?Qg=G<N%04NI+5GeJ(HX
%%e6n6bJ;C\UdlDg80g*God[uhP:.4sM$H^-45pQNSgOrn;`"Cc,'5:8GLpdTF:Zn%jpPPdB]')Pb<30'd;SXoec#e9fe]Eo[:]oV
%4$k9G1RPJNap95**&q;PU&fjrj95tf8K^:MQ4$DaE"d6a#f(KR-+Hl9Jt]i7^f=\S&>i2gUsfL!%B7b)'<Z*Y'L]Ps*eK/@nm#cI
%*NkQQj8'<W[n]Ef$p8lST^r?@9a#^jV$5QpFKnlX/mdHSY40!$MN;kU&ikQ;,]m*8;<<k^/H\-W'S03s0_c#\GH7X2_0k@c)P"YE
%2-'>NmZf2=&pF@].MH4l@#+h4-=D_V_5(YPoNZ+DklHOQE",03['ipF!UO^A:gajH.b,2+D--e-C<?rq/.U6Oi+Ws;9Ue*,+pqm6
%_SYjP[0]92\GdI8D:iiZ*k21ZI>sV%fXZm!]HBghm4JZsBdjp\.cV.WMb?Yt!7Qlsd@%"JL>kBqW<b6sN6Ma),5XVM'`!q;HDs^q
%R[p$cI6V-k1_D^=iB4+K$<WE#Q0p*0bL\QV/tJn4<7)q\hGej"cr/h95RiCN,g%-a/DstApi)ehW]5_D&:eh&ZD4_R!biMIRL#b;
%!j'Fij$%7A%tO)q/4C>M`)j++O1)1_/u@`jA-(2RUB+4A/l^[(Lt2K\1l>=rZ'F\3nPl$1dXpa[ASPq>8rYta.U[KFeDGHO)`_u-
%YK2_0U)XhBFU";a\?HP'P\h=Hr6%r^L%AKNHl*d]$N1[os)U#NH$H0r%_NmCg`1lG-@$N+W>q>t$tQoop!Dhh7h#Zbb6nXj<cK,m
%)]Ng+\;kUl"*)>kc:'Y<?3::"6ua6/[r:X-^la1C!1_+Ojc2)"!iDZSi)6N;?IUe<A)k]qPB`j@,p!^;75nIuL0us=)2+J-3hhH8
%R=RhH0H&Im$2d1DM2f"Pp<hbaO?jNMI-p5Z6G)uR&^5)$'I"*c5VI(uU;Ji++><RZHXn0-]<%&hF[VIeh2RI=`7#b.4B]_rE"+lI
%>CD/s"D+f2RE?qfU,ipS?n*rIPT(.5+$@Ss(9nCL8L7?`)QZKsN!Z,$b)7E0pRuO`]gJg(OZG`WAkE2e;Ssn+dK>1K5r?7X>e6#Y
%j;Cb3pJ%k);`t6+JdS'reUF"VE*\u0be7+3c#prI^FQZkJVeprI.[&!TR!&B[uG`&3NlCP>rfo<>f41*pnh7!;-a8m4,Uq'),l:i
%--U2?JR)cq%U;Bc%g<f:A<PR^<@j/2VI4^oh$gOW(c0[[M6B'eBX!J1K#OJ_Ij,n&N/jB""1G3Tl8q$?E31]'k.d[Z*(,%@f6kPF
%\,r(,0T=Bu%V07#RqS<>!?E-A"kK%0\YG#*,tu8d\M>\?^::0gnuLn\_gGS;RdP\A"-k@_#,#4%aQttnEn=K&<*a1'"Ui\gA?H6k
%K=e6QSMIdR(T"o4)4'J@Y0ej-\DgKIb,OF]//Nlr4!sJ%0U910e;)8H@eN'2$l4dnoi5r3G6)^?9$^JiB7[GR>fD4mg++"8K`tu!
%>0ZTq^%d7/>CZt"^W:X6/R.K68WO_!J\.NIdA'[O@Pu3LP7ufo<!r-S)JdH\&5SQq5dCH>W>([J)jqUo>#`@p<8<?</0"H6^r>HQ
%e.*bm&Lp9r5dOY*?OU"dmQH,*:n%0pc87o/FiYP^3YH+-KG`;OR"cMupOF-'I*gM:gs\)9^dj^d^cI/s+U._"ggIg)$q`8s,l2>u
%Kk7su,Fa,*#66?SFqh_dndY1&To=4,K7GFjb_8JDL+FH+!^3*mE*6.^8,?JoFH=UO6i<Vr4(/RYb"iD$p(2r(oF@=.G@kiMO)*Cf
%9l6Uf*mZ3kJ,j!L6A)\=3Cu3A-#tqBQPa[;#G2'):B>!$ce#/51%]uQ.5W59a"^_qhW2K!J-7f^iB<#Lke,oMc!H_0>&i-spIU&q
%:]lsc4_stq5e@R[`d]jK&\U71L,_'\5NkTPG<tQOpXJ^cTt;)b@#R&)-@N[O56bBQOPJ/:k(a%0Db:/Lf=8uIJ['_5@9jFO-+V#G
%Tq7)h;IaoDT?C09<1kJ7OMp4a:fT*87'L"/I?&3;K/#u9a;>\IUJl.s;:3"R>r^/1.9soA*K6dJ_o7)_R%EEN+he"a$!*Xn5N9j8
%K&_a)GtELqK?&'`FVWHs5S6(1&<,_\dZW))+*<6@jZlH_i4=*Y?=q:$2'_DE#+J;[VTutkY"[il2rOgjm4OEYNLNkuPQurHmV"pD
%Kt%sh2jEN8m*14-KSa/!Ar@8aT;F9/j!q4p&\5/s9lOXA%s^jW"d2!/W#[]?.TLOP[>-(0&f"DQ(cm/\,V"I$?_=kQY2q*HA'<C-
%kc08t\1.oup__,i,e[E40cQ)Ma9!BgUBF\lN$aSJ;n*$3fC:H7&J\6b/Oh\'M))m)j.;10]M[WZBF<*OdSX!lO:_m0Ge2CZF#D]^
%fFHr-R,n'X%hd\f:O@R@?jT"*DCoV[dttS4NR*H+D%?CN8Yp)E)8jQ1&5U6cP-h+_;fOGpSVIfVnV9OZN(CpY,1dmUTT&1r-30`9
%n[CcD7XtMOTltZgk'O,o!o+l\XQQOaHo5`aVe.$7#@'>:%.DWDD@l"V&&aUb7e2M-6$8k]Aq5gKm/d-[SLENBY,";O8;(M/Qra]$
%clj3[otZ$rkn.Pk#?a>S%H&qNMY6I`Tka^07&[&e`sn\=MYM+M+Xfu!=+k0Ki"$h4!Y^VeMA)#JK6kBoCrV/7K^Th6U;EGj5Ta$Y
%,?SB*cl7I&\;GJ5j*HCk4RRbl%M-cL%<T:*JREmF9G`$8%N/2a?1!.\8s&r;)MB,k0k[SKX6Ik<UhbOd4cQo@_.JTsqlXU84"=27
%-E7QbJ\,gT.p".u">o+mSfF*]NWrNAlpQP!"K*E)&0C%1'j*;V8Y0Rb!#Cs](bmY>@)dW53dA[)O?9_7j=nV8+g+GsNkQ;<*8duk
%ZFVd<EHF,!Qk<&V:a:C`UJ50B?IZn9.6$"GG]_O3c[kOu,'W\Y.$99>0M)LrRG+[i9Lle3FK)#S6+JhjKS1_UNkTaYC>a?rq%62@
%SoGAdPrkS3-I5a@<RK=7:q\AR2a+b!(&C/uL+%mBLr5(h=\/4NSVpetDL'>L@]Jg:c=E+$Emn?%)`a!0oZ7mSI7nqXKaU%5/9(!m
%(MZls9!"4!e=+@2Tr4\b\_?L=de4XqcjQ(PM63G%hP!lmEO>eMU=i,g*D%&a!'FZu:M-UdiCS4P(jjdQbIM9A13K<$pZc%jQ\PSq
%:S1(NEZ^CtI0'g+U0#1m*7\p-TRc_UjiK&pWe0JC*1%7DmJcodK.6Af$8T\DXn!#Z!f@uM!%fB04Vb[tG)jUaQuR"$_dhU7A!YOW
%&8H.1`t5@:E^S?B)=A[Pbj8Z)<*ZHClU7OlfuR-MAs'NeU(ZIbEdu(:##[067TC^UBPRHZ;$eIFAUMi=+HZ`Z$N?]n@W9%$%c$[j
%<,M'=jQEQ/(c@'o(g<<hJ-C(CZT%+$1Pr9<Ym`3fj.-1LqC5,$:]oodF3=Oi=geDK&W`RBc8lFE?FY5$<RRG]nT;VC$VP\-TH,,I
%46AO!fDuSS.CsS.5oKRU$Y2M#8dYtF&d3],2LoKt*Fht^h2SS<f/U.\Qb3>'^W*X2"Y.V+-BcARY.(h.!"mWH%Ub2KN!I(]Fu^Q\
%Eu0(C;^F+^:^P!Yc1)*^[rcn'D];Z"FW=XWO>,$J$n3;XqAR/bb`NmF2]aYjk/gO?(uXF88Np;G0/3V\8F5X2KeuK6b30Ju!P.?/
%4+OZ7A/X^b?1%J8!XP@<D5up&QlXZSMWV+?8<=*Iql2:!!$jL+N8G3Yj"k.%R.`=`\J6XU\U!4\G`"gnk*mW66Ai^KgX=Q67kZTR
%kp-k^+i,F"h^bp7\h\inOM__>`jUsV'/a!%2^prbFn[ugTEHU0469e>VI-9fNb(NhWYnVe=(EZ-M%-s+.Y6Qh%`s"+V'^8/(cgZ?
%hnYDM.\DJKXGeG$`cT%6E'mGq\CuRj4)EE/.O,a86/;(K,Sem].YFW6W"`!#PX&n4#L@>Ro-bG7BD+HF`siQj^*,EQ7b?4$+KX0+
%W$A*1(<'"J7u2?E^]bAa_O4k&SEa"gJqn=ln$mVJ=G&idPJeT>?!ll:A8MBJ=J3&T^2IO@_U0`nd2A]+T'dP!PKUJ&?B8h;#DG*_
%ZbT'a99g>*:MVrVi>$WC8g!Q"6jM\\4GPLDqFmkX;e/RqFol[47495l$oG!ZN]D.K&l8*kNXm+s.kEA,Xlaj:fO;j!)?WS5&P*@o
%3Xk$tG8T*X#J/Q(?E-sM&6Po_fi80n%n<Eo1l[H(C.jA\i^B$cdf$-^&Q;!BTrIR[73r@:Q)t&0haY$'iVENjMMf+C64O:hG]J),
%?RiQZk68^V*a"kWP7B\gHd7i]F3r/JqVX![]:K%G+l@s'X@%\-F@YrG!"iAVF+%;V6j?[?Pnu.7\=u)UShE9W@49Has49bd7V:Y:
%Qk$uj-p8fLoW3ks1EoH;MC:V<U6O]R%B_3%KWl(]cU]I<Pu)dhKG%ullQEi25Ugp#KKV=KFV)F4-Tr]H'Lk:N7Ij#!80Ia/M:Flt
%,G"HNl(mB0/Q=F@8R[=:Seb'./"@;>9F#!:PJYBfKp>@>,F]B:2X*Z98T[I]%O)N[b!Qr)mM_pSE33[!1Qk>]8g_5B1+@/7b_[44
%K5dqtdPGo8f?,C&,F<MS>gePkOtr;j*`P0+f8:k;,F3GR=OL\6*JB\MH8MLOYX1q-#UP0>8pWrT.BH@oUG3dBO\#m)PB<p#;Abgt
%CLrYQP"Ef525Pp:7O75%Oeg>J8_8hF71dp6=G`hD@QFcFOS"Jsd^9-JcNke%,EVP29F#"fOWKGF+KRQN@kf!WPt$(^1fB(Me@A=5
%&k5KC:?s$]/<X4?UhaM'gr^gH-`2O#U.A@D,.SFW\jdCUXXMU40cbq47!^&SK.qmJcNk`*'h!@;&BV$sdL0MF#V1]&8PB@t`K39A
%kod&AdPk&pDP`GGO[=(=Ka].SV!JCVNCF2qXUm6A6:bttO$P%EN2K,H6gSYAJfL6%Br#$n9'An_<rUa<C;c1N')S83miRf5aW@9#
%U/&B,7eA+1kV4cc7q"iI!K61bXQ7b:@QFcFGkAY9%`6@/4X51CXPD2ZElW5`A-pS+&Gq9Z=J7?$#V,W[\;<:7/hGmg5a1m2*B!"H
%jc5YS-SVSsi*)a<XZh:RI0-\M";^58E#b6OoLb_uEJNjaPs.KSNq)qH5!]IL:J_BK2(YoX-ccre1;)cgI=aRZ5ua#u-V0k/]A>kV
%I=`-s'2X>%N.5:.$'H3d]rpu6GdlCH^kdNh-ZGhVO;iSsmOBY^6"X3p"D[Q813@:o+K\E^OZpSjX?M2*q?5RqdJ=!Koa.d>oa+e0
%+T3.Z:Z.@!!UgccjG_V:a?pGBUFFdtBClL(lP!+T9<:4Loa*BN0S@Z(l$V7d[W$>G;8udf!qN_L-]glk+O@X"!@:pA+:4V&,c+:u
%iaScjj@Gn.N'9N[GGWj=q?14L$BM#3I0,ig7\:g4dTi?Coa-Z+-X]2Ekn>&3:CofcT>7NlJ].0ebj#jtd3gWK:EW-!^oT_N`:OA[
%l4[i)T>7NlJ]76feER]LUea6=JNDMAqh@S4+?_cnZf``b!hSi,q?3\f$/Drb";]H63*)[0(juIlq?1^.$-_TH>S5F4E32pO6Ye$G
%ac&CacV,d9!])n@T%58CUJF]A-10\HUJJ[8034_'(juIFkn>&3:[hYb:N28Ljp+AJ^o]eO7f!8S#-C\Z>+^<R..mo1i2C_3kk#0+
%)796n=DADH!4^BJK]/n$=&rU79B]$fH)UBBnPnE2'8E@W4jB9H.b0IL#maVtb^1J>5!_[9"!.?*q?-p^X\W=ZI0)/""Pe[:q?1R*
%$0o%*4X$Tn$"sl!I0);&"9`kApgnu2%,p15UYMCBOCu:LofU*edtYmoEM];B0SCfLCsi@$1P\>C9V+MO4M`cC"CgI!9Zn+!JH0bE
%_oNL1+K1tr,u6eadIIF?jU$`(e9HCBSq(JMPrqA#\M;9Q8tI/d!bpndQ7'a`'LF*[H%L-1Ke6*D'3HMU&?_9GYXk?.g!S?Jf9JH!
%BiJq2?q`i-'-&5m^^WIX:LHY`J=`Ku-P.Lu^^cLt"R0"`g-GiuEfBG>a:k(7Sq+Eu>+XYcH%P?dH%JoqW71E-]@^/U+?*EHJJft6
%O@L7Gp.1E15q93HF#[OL'/7Ne*f6",\A"4U:b>J)q#]rs.=$O2)gMLEj9[6(f(&rQjU&).jU">u'-s3^3_@F,>i3[;80gtrcW8.$
%YZj9H$nY6d#,VB[[6+I[e]8E6OXK&i;"=a$j9ZY:=7QK+j9`\aaV1&(-\rll:LHY`+S@KfSj88t!QWhoq>_a9+>J-C[IOH0jU'GZ
%'51(25cd)!7e-ZjP\GCEO5pW2ctRcWUZDgWrZ<^f?q-a'NBDd2j9a&Q':=n0:b,=\N')Y0Glelq<hA5OGlj&K':=n0aO>I`CSZ-?
%5T"bJea`hh;pnENFA0i<aV1&,-]j]XJQ[7"2t@*l(hnG,j9^j3-Vu<hi)ZH-.!YlWTTggsLSNo:kk$<Z(q@H*'4RrT<<@,@8J-]R
%!Vf(B!df,u.S`8]:Pbop<h:ur2?#.2^kbB3Os`ef@QJ\3j9[TkYD%p-Sq%*EjU!c,-fDWIbY'^m4Fn>pJi[[`O2YdXJipahki;R6
%<1K+!S7<[7FcMOGljs_U*-[@53j(MgM5pm&D9.Fm\oZSH@S_XIQo]e#FTOAa"Cfmf<3$\^JH1sEeHslbJ_@M1l3%8Lk)b?t-V1])
%g+SE7$/DNoGYF[DXZD"PFTT&;"E)]qN`@IrQo]e&FTRQP$/DNoBV\B7Y#-PhDCK]02]E5D%T)Ena/B[4k+5Et:npcN+&T$Ogq]j%
%ADgKCSQ7+o^oA&Qc_qLZUe\^Xj]\4jZoZ%rX?&Yj!2L.#eHmd)-chhn'0ihg"Sr$[ZN6oP#uW-FbfP73:;A.$p`W\/+B-N.7\rkA
%8`iR>;CAuG<@<l!SUbA,%IdSEJir8Bbr`V73^M1R2$ZpQ3l1KK3WYG'3WU7)IIP2(l3-H*V+qT);CCBGJ#,mODG6V:XZD"PFTOAa
%"H8$bFTOGc"FP`"-W$R5OL?dNO[cHJ5Za/==8eOZCNT\9l3(q*<@:VD:*;96!jV"n&ucQ6BS0qGd&Ia57]+]B4AmOt=3f2UVUPp&
%[RQfQNB4n\l3&#(-SVSrTLPJ;X?+0Pl3(kP#s>([?riiV`7,+CWY;m>-P3%JO=qm;MGf;e[#`]Cp7.?h;^YDB:*;96!k%:ra/BZ=
%1!b7)W"U/O:*;96Jn*=;bbu2b<[T$K.<P]<IEEW9C9ZuV=K31d+`OPN(nSlA&8;Mg$%8dn@n*F'ii0f[&;I%T4jB9H.TJn%"GA=;
%ha2CL3WT?^>+OSbFTTFN<[Wu"SUe%OTA&jFl3(SG$0n%c8Mo]8DU]!2WY;m>-_03A9748'dC$l"R#_JR(cjZl(XE0l`-9.l].h0Y
%$M6M(:EITTg.dCA$,h]7Qkh%lq?RIF9M<lo3.XKW"SlXjXr"Y^-V4$+)EP8cJQm*qNJS;g.o(%miWR;Z'-&5lE3)%81#`>VMA)MI
%35MlZ";2@qE%=[+0l[7RiWL_-o<gDY^P^DpiWNl3#suSK$,hW5jP(^Jqd6`j!@K6NIZP0ii%*053'h;3KmD.5&LZKs$S>,H>+FLX
%.o+G@!-PZ?l$g#!"M)W`X:HgVO@L;7G*EUe8B%s_,GW0`R,f0X`/545.ghR`Q`&Bb3daQ,35H>1S3S9<!g:!@GGu[@'BESGU>L!j
%`!MU_4mg$VE<6Ka<R;O\N&UiFJtg0iEnTc5-ujiX[5\1_V.aiMO,4Mi.o,#+S3W&n!H1ut"DYj]6H$eK`/#)&nS?&L7#M_S?H,hq
%2::Cd*+U?j+@_lOc*611U;[EoBMRrOFX'X(OZ5Y@b0)K5'dmD%9UHBg4Y\.>3.Vuf!k7.l@`/S5'do*13.Y7Q!\r[;@`8YtL_GRZ
%-h'Zs5cm#^M2;n%'dkt1S3ZGAN*IT&+@_loKM$Qc/35BE`P`)4L_Fabc^Y$07\%8Q3.VufK'sRs!]/g=N-8BEJn)b+b_QoP.o,#+
%SA8DV,=$"Jie/^W`+0-Yb7KE+,%k%qJLR6F&`ZJe6kE-/<e`:Z[I7P4KMe^d,YjG/AWEuEEIs/F.rbX>iWT'TC)'SU,&r5(NApro
%c%m%oO\fqKWCEC#"kVl:Tb8`/^krdF/P\9$7[E]K#NP[EpJK^/`!]ZXSmjiFHg;0PYcR"bgrP?$So5-oZ:LO:!cW"i;6<U/ou[`<
%.<U5&*2"icUJAUr<!V[L[[uhDDU\uuXkI2>/juL1E/ZioM5_/U<@9aqS\V<f_(k3XB%72=VG;*33e>6!$'%k1TU0QH$'%k1+FYb^
%Jtr&]0P%'1#umr=KSZT@Lf#PX-DPlY[;XP$15'H@+f.rL(kPU4\AG6ZW)Y5'5mq*6Pr\qAb\;2$e`m8dVD:ns<[Yrt(?8:rFTSEi
%Fb2_sUK(r1SY2Ja=!];<K!K@^+\-*dbL`gU3h'+PBV*`="IqA>W%3ff6&'p7-Df)S"Q=-=Jn/mlmuAl?![amK0-3Y=l3)K-Lf,VA
%pS$kA(j,m=l3)"T#u40b^oWa`(j,nbl3)"S$,ibUKS\+aGVE#9;ihcu!SY>f'@87ol3-q^FAm%Q:;GnR8t@+&8=]a[>+HdCj5\ha
%-q]8F-F?Vta;8Z\<3&d0E1'`SYXk<-h)_]e33>qpN&guDU!sCmWY7osSNs8;JS91X'3KAYe`m8b0^8cgVG<dbS\QFlJeM7/Jtpg%
%:12TY>cSO.^o.p27S+Ih:12QXGh0^2'8TL5i3o7X-P3=R?q-\PN&nck>+Ip<3l)>9l3(_L$.Pme*32hRN&lN*'`jIdUeZ_D78/Kp
%BH=tZ<:H2_l3)"t%C&mC4eksZnPn-*&;I%T4jB9H.b1rl":8,/X\,-,"9(udF&hK.F:a]u_%.`4!mY`9]M?SK'BG!HF3`%1'@<O4
%mYOgh#iDWq*3Dsq:I9g(*3_&\PNU*K2$i4thM,hn!eMYArkd$Q5Rk:h5^2?e.#ZR]Gg)Wr"(%r?KQ#?H''HVY9req\+/opX)q?B`
%\YhsJ/$cNC5t46EQ"8AN,c4=E<h7$8l3(_L$-]=]B\"5J;sFL#eHme(:1-P^+HIM10K:lR"G@Pk:2mR$6#-?"XaaCK%N%-'l3(SG
%$,V\O$$ZG=WtW!D-b,aF-cei]EIj?8!M]lhSKLqK^@#a::;D8jDH!Am_0)k@iW$7YG!4F<`dR<h!I]a;Bg=F/11,rME]"cO5`uF_
%fFa.'+D<0aKNNdp&emol^4#d[2feAp\jm8gp,Tq93)Fo\ghUnl//DBiWaF-:"EpupH<Bk("MSBNK82rEY_,<kK8)cAE3-FtPNW.6
%89BIMDQ7u1k^K"^>3lf'/NSG-!b0]SVSDff"R'R1O+XmFkQLU'O/ack3e?sLfC#!hKN^5o!DY'ZS\X$EWjYTX:;HU=F@*G"KWNQ-
%H&GFR(7gO<3[&`i6It@R1+YJ;;k[rJ!aHth;aDNWDKXIm"IoWU3WV5fLGi;0'2Tn#$.N!t!k^#%)hm\ABfW72dt8^4+R-:UpGeK1
%^I9Ng/NTSMF@*4qKWNQ-*!OSA#19.Y(m-##5H?/<K:mBJ3[&^.:'_K'OLn"1Ub+VNG]Z8Wd0Y)CF@+DKSD:SQ7M;6lkXMcZ&a$Zf
%LIERI>1!Y%=EFUkHKo76LIW^[MbXNnS^>KQ'7rY#oY*aA7#t(K(7gOL3[%XJ6MBVrZ:-.Bd^mC@,`P1$0:b21/NP&%I)B!BM5[Z_
%HYN"0KY,Zf\+p]o.kOtI6Lj8mXO.?nUD'@k-V4)YlTC/%i67(E\]LT[fI,2(gcRUuqqYkB\jRoBpZR:+d0WlCj=5(+K2ZN^f%F,G
%:9<:th&*56e8G8)NMkm-`j=aYD1a[,6Q2CZ)TX'2A<7"98-:G7"$*0.%+7BNBcr$bO@'q"K/AZW)VPC0+GVd1K/AZW)O`r1a<1q/
%K/AZU)JFa[O?jduK/AZW)TX$1jH'RD8-:lJJMp%d2+RfeUnKiFJIKt'%FRK\UnKiFJMp%d2+RfeUnKiFJIKt'*R[1lUnKiFJJP&T
%3i%<8dSLt45R(r$%V_RFdSLt45R(r$%V[&<1fT5ecj"3_%V_RFdSLt45R(r$%V[&<1fT5ecj"3_#&,341fT5eO?jeb6Q0Wj1fT5e
%O?jeB6Q/K=%E0J"Zp>Uf6Q0Wj1_b^%O?jeB6Q4#g%E0G!Zp>Uf6Q0Wj1_b^%cj"24%V_RFdSLq3:cCp4EC`GO84.Af6SV,!EC`IM
%+:[!I%7MELfc^gT+:[!I%<[:[A;<"K%FU=Ida/ENO<)cr%+:4Xda0mC6Zu!fgE6sY+Ur:@1h;@uFFuD\LGX+*1_b^%oF95F%+<K3
%dSQYC-Wk!OP!'4^K/@D@)[rDc%o0Vb/R`-?P_FD88nm5up/:'.g_;rbbCBOukltjpm(iu4BqXJ%#mP)dLG\W4dQe:VBH*au*7E1l
%8-:lJTc'YW*7E1BdW!T$Y4(N69$"3(EIEf`F53HfA;ijneHpW\&VG<!LZptS2>]bH1%ODUD1a6u6PN'7$KMa%15Gul7"I7P!Z=CW
%%&,us;':K>O@'^qK.)gK'\\-eO@'_N5nqB`$I'\#j:I$R5nqB`$FE)5a<:nt+:@0@"Ytl83CJE,U/2l)5RX;_*MPe';5at%+G2(A
%LFCLR;5at%TFIVl*MPe';5at%+G2(ALFCLR;5at%TFIVl*MPe+;5at%+G2(ALFCN$-rbsMO?jS\6PN'7$Ip:,Zp>D+6PO3d-rbsM
%O?jS\6PRTa$Ip:,Zp>D+6PN'7$Ip:,j?+<8.*r/qW")ZIK.%Fh.$-_/MF/(kK.%Fh.*r/q-k9)sK.%Fh.$-_/MF/(kK.%Fh.*r/q
%-k9+I%AHZ=U-KYcTf>H6D@hN]&;?hiL#NYtU(E%<&;@DU'XC(?MEqr^6PPDD'XC(?l3:,,##T%AU6$CicjZY1%AM2`U6$Cico-\H
%G)/K>+:?dE$>kDDA;;RTK.(8c.!1(iA;;T*%AHZ=U<j@D:kAp$=E<tq4<.d^-u>_!Wh;`j;Re62g0-cL$cB36dXiM+V$iW/=8MDE
%J&6Q/)ao7_#:UKXJK1E2'r!r';<SreJK1E22M_Dp7%nH/"`fDc1Pc)m7%l%tiMqZ,nWaqP?ffORi7&hG#J;"KpIMBWoC,EOmLRor
%0QGYk]r.Hr[%S2T;$ph^"`fh/)+oH"V*GtlJK1LOL/K-a.?L5;aAE;OTbPRF$>i-ZOJ*AWTbON%'Uk^0WhU9^67J"k'PKi_OJ<M'
%6Re+l'Za)Xj<t0ePX9MW!c9?>l6lfkPX9MW!Z=V(3_FtG(9?@A"klc[ePQZa.#$q7"]CROFd)rE.#$q7"klc[ePQZa.#$q7"Yu</
%23\/Z.#$q7"Yu</Fd)qF8td.qJMr`ZFd)qZPX9MW!Z=V(3_Fr3V,/2/5T<=h3_Fr3V,/2/5`U53PQEG$6?/4k)+pS^8q@DI:`Q;s
%)bQe`8qAmb6?/4k)+pS^8q@\Q:`Q;s)bQe`8q@tY:`Q;s)bQe`8qAmb6?/5Vfh`$p;$t9=$H5jL`D?op:^Uc$.:bpt'LO<[7k#->
%.:bpte.&79*Ml"?8g-8gTc$HG4%c1a8g,-GTku33]Y(+"PX9PX6JG<Dfhi+$:^YlQ$JeMcfhi+4;$tuR$=-L9-$ZMCTbL,kW.YVV
%Ya$hU5m\=-E%RP"Z,J1D&AqO@$[T%D/ni+-l2E;b^cR5h8qE/G.Mtd/%&M;[V*L&=kSm-F%&M</PQEj;Tku1]Eg/mHPQD^pTc$J]
%We"F8j\d$mDp[/?)^eZ?N_H)F+#-Wkc<kPAc0%;bj`*9V6cq.S%+_ct(!)4=A4-TAU&l30JW-Nm)c;0VW'EgO+=AY#&J`BD$FCB[
%WY6+\,:ZY?.Zb5WWY6,gL^M[h$FCB[WY6+\&J_;Z'kegAO:rAML^M[h$=lPYl9kg0L^M[h$=lPYl9keRU-a!s!\L-5251.h7"sno
%"Yuf=FeSpT;5$$JJMs5hFeSqS7"sno"Yuf=FeSpT;5$$JJMs5hFeSpT;5$$JJW-O(SZ"dm;5"n*JMs5hFeSpT;5$$JJW-O(SZ"dm
%;5$$JJW-O(SZ"eG<2`PkTT,mHS>]8DW)0"_5Xn^$:/mmGW)0"_5T<Ro3)P6kW)0"_5Xn^$:/mmGW)0"_5T<Ro3)P5bU-`jo!c:>Z
%i^AL+&J^0:'oES<MA$_^&J_Sb(!9!FaA,\_7T@H(<%(48aA,\_)c7b?;1UX"6?]()),VP=;5"k)+ZiPpD+'(ohG\89.V'nV[#M#G
%SZ'noW0!RKd#FucSZ'moU-a$t68tW**ZhXq7"l793aj6_Co&)[+:jN9\1;,YXN)kC-GrkVMgVaq/p>*;l,29R$1F-s6j8GhZX?0)
%EhYlZU&m>PTl3=&EhYnTL^N32KsldEj?s/,U&m>PJW-OHeOQbBlVtHspDSB=n8_g?P4[[\LIdY)*67gOLFYW7EBYWj,L9pq)d%Y2
%X?Ztj+9sEYJJH8B$FG@!aMA3o?j1ST!Z>+63`pqkYX3K:!c;>!l<jcNYX3K:!Z>+63`pqkYX3K:!c;>!l<jeL^^AW.$=mOul<jcN
%YX3K:!c;>!l<jcNYX3K:!Z>+63`pqkYX3K:!c;>!l<jcNYX3K:!Z>+63`pqkYX3K:!c;>!l<jcNYX3K:!Z>+63`pqkYX8#=@5>&R
%Fg(ob=J7cXJMs`!Fg(pa@"mlR"Z!;KFg(or=J7cXJMs`!Fg(ob=J6X8JIJVV*NW'rYX3?66<16VENfK^=J7]VJMs`!ENfL]@"i&t
%"Z!;KENfK^=J7]VJMs`!0sC^r@"mTJ"kpa!`PDngJJF&p(!6S.'E]j"""Rme.hi(9A-XWL%BPX3XAB>,O<(E!%'5O2XAB[7+ZieW
%2R#MkYQ>\E+Zif")-A%D=J9S>L$ZNQD$);!#:m.b<lbJGBEhMY%T_ct<lbbOkSmVI4'80q=<Tb.Tc7+-":J/\^^@,]itpe8YmYcP
%N,eOC"Xc*BKsUgcHg*jFgm((9bb+B2klt02#:jlu/!,Au\q(U;_$YSm/!,Aug'1S##:n.*<ZhVtOF\.f_$X^\KrZtLm0D6<^>PJR
%%L;+WJJA19^kNGnWif<+04"T3ji:2kLMUM^WNBmp/!0?;aS6,'Hj):>!]aV=2SK5Q?\+0>:n=dTb#bO]=.kPV:lVYD)df:"?\+0>
%:n=dT``K+a=.kPV:n=dT)df:"?\(,L6?U!D).0'U?\+0>:lVYD)df:"?\+0>:n=dT``K+a=.kPV:n=dTMm#sJY<^*/W6SHej""*h
%/(!9+<9GdY``K+a=!6NR<9GcnnJ/(q'klVX</V\BjXX<j/!099Wq-s=nJ/(q'klVX<9#KjnJ/(q(!-.WebKQZnJ/(q(!-.WebKR&
%p^5"9$?bAZ'^$uGj!ti,.obOZ'^%!n``FS6=.kPV:n4^S``FS6=!6NR'^%!n``FS6=.kPV:lMSC)df9u?\(,L6?0_+g%Yonq$P+9
%$JG4^`V9enq$L]n.qIfn']U]Sk:78,.qIZjP`;l.SZb9t?QhL<JX!@"SZb;u=3/ZgBH(;%4("[uI"gp7KspLdZL\g"nJ/A$'tWrN
%ZL\h-``L7,=6RY*aNdlN``L7!@hgo9_H+6F%!)(JL:^=f\m##_5N/<C/e5`n?!&A+]@)JDq%MU8?$lfR^-Xcm!]aV])de/dYL#5B
%!]aV]D0uM-^&i/!"Z!dn)..rbY<^*/\1/Y#HE^`V#W/%)!h]GhO+<LS[9e`Uc(WI5\CS9HX*]#*g+WoqQj#7h!]akD%'r3Z=eH51
%5`Sti_^nd-/<F9UWacfX_^nd-/C9,SW/b"'_^nd+/<F9UWacfX_^nd-/C9,SW/b#R%C8k?ZTs7JW/b"'_^nd-/C9,SW/b#ZL0:I8
%=WkU5<6$Q:L0:I8=eH51:`Zl-L0:I8=WkU5<6$Q:L0:I8=eH51:`Zl-L0:I0=WkU5<6$Q:L0:Gr3)#'0W/b"'_^nd-/C9,SW/b#R
%%C8kOZTsCNW/b"'_^nd)/C9,SW/b"'_^nd-/6'M<'ZDWQ%C8k>ZVV+;:`Qf<%C8kNZToIATf?Y82U"L-bQ8YoTbqBm%'rbMZToIA
%Tf?Y82U"L-bQ;XKKjpDQg+Wof0ahR1/7cdP'Z2J4_^lM>/7cdPP_E8]N`dcb=icV+.#M0KN`dbLAg'6JJMt_=G0C"*Ag-=hl]DB,
%3+ej9bX-Ks6JF1%feEkO_^o?=/2Y6qAB-6C_^o?=/G'CXO<([S%C;-:Zd9/fO<([S2pB,g*?33F2\0H/.g=>N_[uA?2/K+35n`n>
%"]Vu^I<\t%5_[t@^0qeW@huXb(91j[\mZAq0aiD<(<A3<D8Rod@hraq/<F?Wa=n"_Qj#7h_Gq2Yk)47WLMK+$-EKEuRnB#?VK1f4
%i:A%bq&WP-V73<2ZTsOR+N#al@i!->$fmZY>*t$/Qj#7h6?UKR).oR'Aq;ka6?UKRD4$%BQj#7h6?UKR).oQ\Aq;ka68csgD4$#l
%Qj)1t$e6s>A=/)9Qj$C36?UL=h(T5e0FQDb$e6s>eM%B]0FP6r(5cT;BYuA8_^pmX(5cT;a=n"@0ak?s(5cT;BOM[6@i!->$cOh.
%A=/)1Qj)1t$cOh.A=/)1Qj#7h6?13ND4$%BQj)1t$e6s>A=/)9Qj#7h6?UKRD4$#lR"]:BL#SJRC7'_7R"`+[(5cT;WaQ[#@hu(R
%(5cT;l@rFiN`i"aZVVXJ5_`DiN`dLB//5uQd"Y[ON`i"aZVVXJ5T==/3+d_"bX-Ks6J4%#feElR0FQPg$cOe-feEkG_^o?=//6&S
%AB-58_^o?=/<gUMO<(Ym)eL64Aq:AsO<(YmL0;TX=eH51O<([S2U"L2bX1&<$e[6BbqKOY0alek$e[6BID[UH_^ooI/7cdPFN\*a
%*N7=DbedDli=*#%(2cd][du`eJ&4QeFj.]iWF6S1$6S-d^ONG/_^nd-/9Jc\<6$P3_^nd-/G'CX5`T!?%C8<[=eH515`Sti_^pmZ
%(<A0;(Hj#Nn+H'd^ARBeIf,+"^\c!RJ+_:Jrpf+-U[7kbrnumVro&(9rPbu>f?<pgiLbVrS"K`EQTtN#ci3@1^\d3opu<I/r&_(Q
%TAQdBhu<D?T51S/JH,H%?iB&4Il1QHs+?Yfr-uHT=5X&KB>=G<5CYu<(]MPVq#RP?H+*Uj^RNd:Out[\-&*97T6[LIIlm[EoDdrR
%i8L;kfAH2_&-'lqOgJj3\,ZB.r\K%AJ,7XC[JF,Is7Z71ZqB6T?E\*N7/ko=)[,"Gr9Sc[7FjW:kPl?)r[YnQ_gp8J$[Bjb/oHWl
%WT!VJoegJD4%)Bk:W9h\6]u:Rp_k9TPmXtODe-0rg_mi9.m'mQ6at=I-;Y\R`A32s44THF6#n!^GIaJj]iXW2(5eD(N-umYAr>88
%gp-_H3'1-D(J@WCQ#:n&A#[Rgq-*"j+WIBW*8Bc>_`Eb3\nhOieqIP7P8Ml6BQU>k\-BbFPaX5]Xou#*oA0O!\npTB=NPgDY?c1!
%4SGWXdncQZJ!\!"ICgMV=aW:H;LUYFGhLbpi0VJ/Jfim/M%h%l$@[@^0!B3.K$8ZCb?t5E="j/EO^62FCDeWBMPW4WlLXM>68jEU
%-?6#TdHm;;Y(h<2*G"2.e:%lrm/aY\*Fs+m'j!kp&%eDuF3sPn/Tng('a%IfF@1:e&haTj0%'mY;*;[sM"d1U[Z\'c<G#O*m(\:(
%MfsKm/^&iH'j'g`1o0CCcEXM6o"Z?F:Q4Rb$q4=<D4qYbDjIQ;p?AJ>?.<`s6tGS%87W>T%Z8?fiNUNJh[L!Oc\H-3qK?i=WMdZ*
%/90cSi\GmVi($`R"WT-4=.b;bKu@@,=Hb<W>hGeu+!keq7%#%.i$A2ZS4/0Q8i's4b[n$@U-%$@'c:O"gGpl+?R)'UNUe)iXj!;q
%6aC0?:)+(1C;CbDUN#?]6rmG?lT%+kV'olXF#g#Vkgh[2E]#`ddA)^?P5,]E7?%[G[Ai%oB^502Xq+Zb>,iY,iYZts8j\;9a%/,b
%F['dK9+);%:V(Bg44C&N1$DEhqAK.sG"b_]2_%^S3\L4#q8hLGG@MlZLSH(7E&p2RldHGlP.NRMeMJ;9*kGJgcl4HYAWV(_9%c#5
%NM[".4,9`N3*aF:Pj^g_]-l.+PCRi].X!O7osg]e/6_U5ZZ+lp".-=DEl+/$aR`h=;G0AE^mNj&Z^ABUB>PGnYkgJuCaJi'CuF5k
%7<kXJC0J!];)mJM?"I?eXm%,uC/Oj3*r'JMdE`PW#.[>t&qe5E&XLK+YtI;Kk&/4,AEu9#-pJad&\55F&])&=$d+N#7TZ+dZ-f^9
%*1^_*(M#WrfQ>%UruXXb9hj.<&fafb6A*h2W3h]U[bs_P`eBf7$$uE"g98^3'?(T^;+37!ipBh*rh2dIp\.6I0[%u[VmR%u$D*gQ
%`S/e=UAs7j'7\,fnFu_'07WTLXs%(TcW1k#"Fd+X)tl2^d]`CChp6\`5N0=uJ&7g/89^'1^?r(+HhlNOrAj>35<e7Mh<m1^\B"X)
%/X*'lo[EqF@VZ@L12m>iR[N?+l4LCDdKQd2oKFt`h'SY^an1_V/&O5(l)d@9kR5>;fG4-']?4SLKc2aodF/8h?E2D#$UQ2Fc)0D*
%H%TqS6gU+C:JFqr3io\m>U#miR\]M)L"8lTXD')P,^qbD"A&Jq)LDu<HsTBI$)Uns.(sLT'Ab+oFR25[[!\4<8iT8.dq[D@Uk6"s
%O<i=9<s"o0bp#8o<#MfHVrMII]<gZ.2g_^.[V'5C6*?Jq6qc!J@cU\=>SDqH9+j[^22r1`;8(Q3H[QIWU(;=d(3%HT[p!?6'/q$n
%2lk=e>)p;7[UeGt[VW`:>EfNTL6LAnKDQgSABj=/F^UMO%>0i14+lT43eX<c8VQ39i'>i2r>#mul<Jm]T\L9*G-_`cf#?.qiE74D
%2qjbX;R2&(9ntcsiU4!@i>`A"FTD@ZA^QOtG_^+uA2dLcU):gq$CCFU;79]caJ$5ua-lEW]CMFo,fP8]4@7TiR3Y;m_mtG#p22e1
%;>bAskrJ_uUZ?"<3@3dbZV%<#Vt3O,,A/gULAk_$4n!=;NIgpf43HT>Uf_(c6H*P?Wl\mWWMH'PRW1t2LJph\EDgV_Aui@fl-2hA
%%0r4f4Y2=%9l\jc[,A5l]kHS\Cf.%^@p!J)-`^4@6qZTT+WVFq<h)<+ZJB%,%8<BiE[P2T2Mp([5epISE](crj?fC8=23*!'[L%r
%%(MCW3q'lCWu6DO;N`^J:;jD[e[81;mn@^A&D_1F%Z.7hLP(1*h$f2UT+29YI69@]n]g!bpj@>C3Q1sYgMVn_4$eO88CJ.hE7FbS
%8oncP+\I>G(nrEoP2DS+,sd;VK).!0j%L`:VfFhYg_D3a8;">sV#gi`\iZb,X"sUI\8P6CeKVR_e#$^SMHpjVNG+=jXUL8P:Y"*3
%$$q1dEFRMk*fZ^>fh!mM/Lude?cdG0[%n5C<(FL-,iasbi=mJl-?&^ZVk/5,F2[Qc32HIk5k*g?+i,i##"9%\LVk<*kgP+!]5NEn
%RWLSMVa>XBl"=A"1:4G(-;E$?FdOJ>90(=@QLJ]mGD9qF]&n"`M`K=;=aB]Lh'fqc<^dND7OZA^44bTL#@%U]HqZ$X:R)r0gWcnS
%YX`*QXPVGEG(;g%5$XlkD_5^SW1J&;Y$OX&^_<]Gfqj`\"H=Q`I+UL6c56SK_75o@%F;&9MqOu=5msGIe*^N7e>FpDmYu0EVQXpQ
%a8bY%cN!@Z(fo%Nf7B4Xe"IL>H9/R10e^Ep`Ff9(ld=Z&MnZh6ZBUskoBR?B\,>;q#93[X>V+IcrL`4Zs*L(1b=`6ss5i@Ws,Z[?
%ZgZ0=q"LpkFW;Wd8u>T'eu#:VMFV0tc^.3M@d:DF(`rBVSB;*2lUnaEbDP,>-6c3*F3lmYd"-(F=W@1dA-!!N\8*<\Y[F6+IWVu3
%MX)sjh)f#/<Nd/E*Ff'H+X#N94Q&:kaf\nX6Y)t1CUXEPF0=?_Tn48C/%7S!T8s(RbthX<e>N="M"g;PWd[,O>#ip>K.AGJ1;'=k
%:BsuYo\g@^K"_Z!2!K+L^I>fqDED\q,`^>*A[Ej&1/@Cscn^W06t3Ai49l5!<`Ho>+L(7E6iIiea1'XrCt<J0SK?*hD(C$V[BM%6
%QQDR&mi!KQM/0Hknn2$V];FCJs2M.rY%I'j9+p%OWe*c4@.__<1qBWsC^9`os&(NBUW%hnU`"Y=iD1(Vm6AZU8<9Kar(VLu*"l(u
%'-?>PjQi[PnPX=#eXMbs8WOEY`SO\B/c6iS"#RD26"C0XWKeKGCJ,s[phG[<A;ZGjLh6@6m.3iV*I3r=L7#/6PeqE7@[-3hgep>q
%r]BH+,(+Yr@TVA_Z6WQIj'D9;AqtH]Q`.G)qJ:g5-6*SOEj$,=LI!7Y8U6893ooK8U;9_b&99/llYh6RXiR*.E9fPad*6P@*[]S.
%WqmPFa^A>?flZ;Jq;Z<*Iq_j]6V#>)mEts&NUh/5,$PX3-WB)IE+q`bp(;Tl3j/tp7L7cbQ7D])nW-AiD5*q4kt[^i1Y]<SV/.jX
%MA;KWH]a32=*deb>o=\U'B`qX6W"Y\,4$#%A2il._J.c/-R+6MHNM&'RGBE%<p^ff<$MW#F4t^oBP,IB]jOEpSZVL8msa5,<4.Gn
%k7u7c0[rC#djJ@028)Ig'/)Q]#%5'rC";4/,5`T8'.]f&:pH8CQ=r69,>:cK(5Q<CIpa-0SlR]-,UYA`iNAB*Ii1gaOui)VjR6WG
%6k.[9l=rrRGc,G=La=1#R;S0W!8$401ddU7E$=*bdW+LT!b[DO;Dp%`[5FrPs,b1ME!Qc=.Y[W^Hjd_]B[e%K>/m5P]IhrBO&=tQ
%IdR\&E3KQWXA<`U&*!/^:[IX?m+.A3s-SEd1!CW-)C8*O9EJ'69uFc'3dEJ_Oe+$[BQgT31Z'+GBII:58_t^>*:&oU,B&7o:9rX5
%KQ30_^2fC@U7j[ogBg5gET/AX/aef#@l^Yu:7>K3<0I2ZNMJk+'N^I5\\#q/MW$*tPp=-;(t5c+Z2Zu]?qZf.(;L6_3GR]NjVio-
%;cNmXA$N]0V-?!+X;8?M`@Mc9Pue+U.+"gSPt+0F*H.m_Ub%hD;dlpGF(+&RYF6<7k%6>N.B_GS_9tbq9,_*A`Pa&t[`?eD_'oB?
%4Z,kfk%:qb:UZ2PFQlrZ(bL`1r4Q0o*.4sDCcYL<3Z"W[D)#eE4%=F>=LD%.MN)O+;U%u`m[`X>%m-bme.u)<)^94`[esH5D`KMi
%QQN8lJZcq"XmHs.rCpD_>PJ">CjS#.j;Mm3$jZNaR2nq%d=^'<.`M(,nR1uh=qEF-l;ct9#H&i(HIYZt%e#hFfqA!>*l0bF8_WB1
%D9Q1bP&-so%_hD%i3?H=(GacAc9C5d?#!2nA:6_jYbK41EZE5<pn/IY1QV/c$m^e'!3ZUM:J*<hE)ANSo$TK:K'$#26LqE]cZ`<g
%V2^di@*ic;gak/uqf\'t9$NfN$0#WG\qCd*Jog3lJWqYnX9-4c>=6q+/iWuo@>Vj!Y_3*I_Zr1`(N3i1;chWa=2FuQQ8Tj.rJlnX
%)((nS[nB$!Y\>jJ_?NUQ,cDVLJ^`+NC/Rgta?7248]>JrW(M*;6m5>E=-D671U\`KfGR8=fX/gCa49[eUFc\h81WZ1Z7:UIJoe:a
%&;nE]DqJI)7G&'sg`'`[EulGGh,8`ChCF8Pg'Yo&_*T6&WZ>k\=b)snb]%[+[HgT<<?VV%0cm?0]$\qB9tok<+%F[@$C!C^ObdM3
%Z!.NL.\gn7<?Dd9#^=eN9=6'EeP-X2@p2X8OkKDBfN&(<$t6>?h8hnM;Ms_WLOrs(*S'_uX9t+?,?e3L+Z<^:[*V;'+"[9R`e9,a
%O>P/Ber(@^QU-,hMql9!Mk;&r:'H8>78&I^N</pU\trhD'>*BEdG=ZN<a'Tu47;('a9#YtK\7Z,Y8"eSWK$/2A1E->0(m;;TF!(B
%Kp&9T-s<]S`5fCYDC]+]/F,W!o#OXs-9N2;]HB&1/f%!rC4DBkB-@e"*ECmb@PuKNNkG2S^7<7k<n5t>%*rdjq>!'>>uJj"95G78
%J)oRj]"O2E!YhWi'RBGs-P\7:_ZV.g8VWHU!s?kM*]N5kCTVKJi(W7<E:XpAkP?-kW:bpU5hYfqZI;@=%64IPDI@4&Y10SN-19hQ
%H?a;1\n`biHk[;%qNmIJHk/&;EW.`$`PJk4mEg_OG#ra2Sd.:/8*`Wr[lr"--"q=-c4c^L6thjm]a.^$>s7Q7Z@ssk"j(C.1"$d`
%5$&,'/OULl`;</%@NhEUm&mM=:ikf:Ds698/s9>iOSgRB$)%g&PrNV8V`('FUEkheC42qjBOiBAO>LB(]:p.sU1@!5UkX3^qI7nj
%P[pc3"5N^Z246"*Rp:1#/0q,HK]X'3\.c43oFC18fL&RZ\9V3J>T$hQ&VB:PV/(/ZJ@iK`e+@IrauOg[-N]E40:4uW4MnWF%@sA9
%B2Aat6W]/#7H<HE4u&Rkge;J);@Njk@3]Vp<o-NJXEbR-K,IPt&+fbj"g`Eh)8R%ah)d]Mg$,JlZ6k+V9)%qgQhohto<Di`3,UpU
%<qOqV)h$@I?MCC-"oR\YI(ME"SZBrK?<8:m0!5BOd<R^qN2B?Y%LBD>3T-Kms0f_RWOProi>9&;Z6$7FX?3o:fZ20H/,HsDc8dQY
%UduqWh#iA:m9gl.X:^s'3D9F)OKe),q$W=I!VLtl)I5,<F*:1%2N_q]`]9ol"M]/OW'M6N&sJ]]e4r7KD1tm]^ZLVKIV.Zj'9^0f
%E2N4>Yo6Wg7j]r1o?`009(S3&FVH>4IV[UcFPNec$-3@Ng#qF``M)Jdli__<,"35]3d]#iL1PQ;jiV10M:/H#QC3f7\15GG;S]P7
%1/cF?<Q-$gQu0DQE97JY9=lI'kX_6EjY7S``WissaVQ/BlOoHi2kD,u(/chl$_sT]\OlnWZ_kji$`Smanph)A!H()(F-^6&KgCJ_
%(2)8*\Il;<=>Gsc2Zec^fUN=sn^&p2A>dhNqZ8kl(CRP-Nc@g$,<lm#$qSH@C;dYnY.TT)[-O]]GJb">WMV%hSn`8$Do,S]g!hl,
%^j)pU9bV]sHmA^W53QkZ/?N_o9/oleq="N3#-Zg=P?GQ:PYJP5eba?p[7[1O`!Sl_]7>D<^<;L1%".Yt;\!nc!Enij+6MfGMG]`s
%S*9Ao6q]/TaWGMD)R*Z3'b?ZN:/MR1R7_5)M++6,,2Q[VPW[k3Co?I;Ub+mJO+-`_Vbb)-k3mfu]:Yhg@s3C<kAU,KMY>8a1rV63
%OEb^+LpJT7!f'QM]Zd71*Tf,lgTp0O4U]\pVmp]0M"<?B#/MpI"El7nQ[I)(VLe)*U5`S1i5?rsZ9PrJH"[3gi/sF6XOP&D<=@_i
%7Y7Gf5X0<bQW+EY!1RcNi/Pd\rUcY(l!M3+%6jepn$p%^`GosYdk/C>K!d(a2^b9G.X4t]DQja!8a0*07($MNW6qjB+mX[oSM&Tu
%O^Si)68=i?1k`h(F(Se9:<@g>`C'U<'#Ne"/tkGE4"_3TQtO;DIN)Z<[hDl`rX-CL37"mdb]P@T6N0sOoJ&Q_"O[t%j7e#q/]3EN
%?]9L"&;Z#I?Upm6G>psRZ\W_Z%H<ij:6lJg<&kLN0bp=[=lkaX=$%/enj,49"_k<9Irp%/OQ.n6\)jX5&]Z5=T7Y8&4(;k`/CQ=1
%41N)m*$CUL?6PWgOgDl>T*@%I@/EAHs.ue3!S([KE:^KpD4c8.,+nV23t_;TlR@dtm_ktP_d+4e20..2!:rrobhcUWOlF^c&<JtH
%OUH5lZ-e7.ni#CBe?eSaY_:#O_QW]#;(9klR8`Q:s82Mb3TfBfg.N;AgoQ@@<_1msmom0.Yipg>4BQJ"KmSMl*X\sXnDU=7]"1[[
%,Rl?>cY:T:i?JP[QIrLm5\kTn%(34Ca5ON.-r0Yg.@EE<#u[.#?B+Qpfn8EnJPRSXqOM7MIYS(!75G'i(e:fuZkH1:[:g<=kC)>R
%dBY$^[BK<[CmO39PFnuUemQPY()ZiNpYL--:kG"]'j?E%f#:N3!]u'+-;Ep*-0V6T/(lC?cW)c%i^qq?n_n=I#dh'T)^oRs<h^]1
%l#)Tt?C#h<&u:*R7?`80XUq)RF6!o[BacXa9u4+X4%$eZL):2)7d+-AV,V!n/3uF3@E!uEg=@EN+u>lRqb!l2fg;hh+fIb%/)(Go
%eWDCU0=Qj*X-QnVS%b0O(Wm8jE:q=R=QMN]cSs07[Qndf]"5,s4F@?k?N@7hB0Y@-Z;0#N(20?8=sDdfLBYtC+jZ+S4c$^qeAp22
%@'m%5gN[GM[urW?Y@IO@)XsI,bHtKXZ&F(:Qa&W(0K$=+&dPGZQY#kR3:MHX,*SfIocglZE[o0SKrdrc-W9\=!QNs=3W[F)AF$Zj
%"9f/.>+Ypn9d)6.0/WIQC)65gWU*@:9(WMQLK_2g=kI.uI]mSRSqfY@d(oK^8\HP\1B$`<-E.M*++rZ29jF1CkJ?=:G)HEYO8Yh"
%kh,+bTiJuuM6oFGEl-Z)pdV(HQY">Y#0LU58`7TQPZS0m_PM9*oB1+R_-!lNAsfTPf,I$@%P?1/1C>F`+?Sd^"bCNM,Xo]X+t"L"
%iT/FrWIrB1'b$BsHsISF4KF%'R<M*<=(Dh&#<rXZTA]=FgO]Vu"QD&kl33.lks[5)peEO.HlCYk<Rm;eJQ)QVOs5n+%p'p5Hud6_
%$A/Zk*0<l8_;Tt6mt^057V:Re.kfFP+sG5"Aq/!0d>/2$Ggo7MdZrj!/R/,n0#bVT,X:mQg!M'2!I:b.XrlVPbdS[[4;J;A'Ad9f
%7ULt[nW(=8JJDF-@."E]qLUZa1>Rc@]U@c@B2Yk\C:8&TBS:W=*cPl^Un,SP`4+%=&t&luWn=<P25CE2(etHSCmuP@mHU$,NHpa/
%[DZnbT>RGf"ZYYaTg.!]SJ5H"A[ks6o+B:qMa%Nhhnk3cCr4`*]c,g/VrA;NhAj#)EZo$F_D^l7_?%Eam,:iI/QpR`((NG.SLeuU
%=?)bZU2OO-@Rf<5[$49D9kEfj_?0c%DA@D$-!8jB1<!JG`YgSN>)''3^DGL4OH%cH/*#N,:1DHhp%[ukZ1=OB'Z%+*9()PX$$V*h
%a6Qs\,5L_VJ%AX*S/cb&"+1!m?`Q]jZQ\<#/]$/[#?R:i1(Nd>]:'A@UX6&$b==C8Xr"=O&rL(/T0nu<OPPh]YWHo8/N<N4P@G9!
%\`J*XI7QO.p!juRQe91f1DVm$L^ZKS8Ui_)?A/7hRUNn`9'"Njh9-mT-DnT5j5r+Do?kbERJ4eo6-+u2Ym:cZC"BeWKPY4iIV?M]
%@<PJa`AqtRI_fZ[Zo-)8Uh-cBYcZ197>N:l\,IoqYMj3V09mT8\5gR$1(;0jeGj`nNO,=h$ZD(P_&fa\cc$Q#:`d2D9;I^L0rsI5
%@XHnq)L_'UemfGBUSh.!3q@(TlX5.c1L\!4B'RgoIp1tC-4!kLE0nQXMj(n#+rmCLrsgR+=hmrnDtS?=A'"IK2;'7rp/:bpSh2q]
%0bGq[Gq)a-NZ7?UI32fJcq2Q)PdYlnOnDT8RHoX2Gpi:urh$HCbJ-d<9rcHb?N(t"P1R1f79p[Z^Bj]`m(\_/'*%daaM%EL,6.ZY
%o)E%js(+dsE-?\<<W1<hS5^E$E-_J+:SCWlIl>p[ce8J<B(q"TP2#<:>(s,['c?YW=@LZW$5^%]!l8UmdONU(OEIPnH6qiK`QuCf
%Km8ob1Mg9n@'AU5C'7h>3+3GcWBmudfLopcUi<ZZMj2i22$p`9kRr%6d-GiXhUjAJ\3+*@&L'bK3;Kq=,t&`"jqk:$FP<0p"k'J+
%FA8uK^A?r6_k)SZBj"j1V;*[;bAu+M-KqKg@MX>O>*#5+-gQQ&H?<G&]]].*)#:(S4o\c:QM6<NoIK5[=c4>iGjWK9?:;dTbB_bW
%*hFdI(.d],$W#'ZnA%[f()6(Jg(tfuS9_0U',\X3cbdOD'-Q%&m43FU@,[fQ$]duY=cdblnTX,DiK:ZB><SChqC#Zp/g'rGlp]dc
%Hi3nKR%G/dp:T5VMgYQjanL.1rtggtE,'j+fD)KL(AhF54fgTVr`ERoQh[2&r"nt.qq+j,1NEcV+-->ZUX>]T0`!Sc7=W=NBWh<C
%qsMp=p[OjPE6!C>hmTT5gI'l_Omi(\GC/,W4m\^]p!+(o\&Z/96f'S<I_-?d4$UD@RRM+gp?heKj1e\cr^=rN?d@_^Yo*FhcslWc
%BG.im7"0XO?5=a5SA=\-H@GVk)/g'l*,khdmT2+:,I@7OS4USZ*D(iAk((s%qSpNR5;O2q:4`T9LFI9OK=2NZQ6``!nu@N(^lk]\
%Y08oFGVi[VnnTQ@3H=P6kd#6Fl'WUtQi"jfD>pI#V,jB2&p=dkob+FAZTkLWQg:R'IKXM=:I%G,BQ:E.2@j+?'(Y2KLNPckZr62?
%(+[e0E7]@el-*m<)V1"K0?hE/,E_SN+h]EN]]GpH+9sh.\1"Ep>)@A]@rAptpLCR#c"6)7M%;Z\KF40`O";65-9+g9#"2od#SZA;
%5Rnn2QYrqQP#&BOblp/DX2UaU;L_Y6=:-Zqm>^miGfMa,^``b3G2&-m9b,#l<i?P1n>0qSl_SRV/tb&ho0eLY9-PI_.]tG4Vg3dU
%426qB@Xm$ceie64],QpKq)TI(?U%6UF4i6P6rVU`WGp"7iD;X*%A*s*C_tAboPn#?4,"WQPpRQoXgIRcEb.e%A66h37!e<K`V0[?
%O[eT/:s13Y8?Bd&F:i?B-X9&DM@YDF2@;t6/Nn7hn=,HNC_QLo6JRLUdG)27K]Bn()=WCR#ILiaW-eO(:2_A5WenEIF.'Ak"s(5D
%\H*Dr!Q4%6UnH]gOm+-&%a$8*&SmN+"Q`VqWE>88_k)TW<Y.6l]X>l(NV!ACh;\+&-/P1;F=QkHK4mlW&$OM-<Yoh(`pq]^@RC"0
%W;a=%ErB+hg`4KCEU4<NrJ`Y3Z<qlI1`XINrAIPH?:\:1X@1f0SAWdU8Ui(6'PU2o+o%$aU?SJmZ]#4-j$g]i@Ki+8Z%'HP=J)@<
%]b^?QZNlb^lN]W;D'Y90j>fk@28($``H_HR4K!du0bK`Q3#?s4\$ftl-eWq[a,"uJ.!'HV<.M#Qp@kQ;%a:DnKfk0liMqY:/@]O_
%T*DQ9j^l+;kJmcKVJV>q&M%_qJlQf=VEJd=L;$WpG!J8U[-kKZ51\Fd!d"AmXaMF]=?qp9;ln#p_C:E&WHb/n`rc*bS>pGjmMi^%
%Q6&W#2"O7]ARnQ3=,5o/jnJ_&EUA/hCahL[D:tO$#e/[[4H$Z_57>!"mR%SqgQiKr(F=JAo:'X13TAY6UVBn#4$($_^ki7_#tRK#
%32tb2*=ddoDZ7/piG`;h?$6HM78@.q_<#K66[C:<X$NZcM^rF>68peJkY#+l.hk<rbe5'qc,mkqL06<oK<FEB<J;7-$tKt7&:*#h
%<!uD:KE-W%r_b=Wc-_XRY3m#<npJr_O+Xe6oikFM95>Z!8:X\#7YG!j[t>QsMZ0>W-F[k1H%8q*XMii0&YNHi]/'nEe9nI.UtQdL
%15&lUlN]2u5T]!m`*h0K9XrrX-._1Rqdl`RIG+!bn`BV,%pBsPrXjK@QkS:DN?_tcmtsENR'QhFQ4dJaHSkf:[cV8F-eXB9'XpEM
%C1b)I4XhN4!`iHNiE)0R+S.o]@.]\B#?sp4>>%/1ofS%<N\B^`OPE\/_aLaRf&QH1X5`tNHeR`pIHO\+Z86gtTll]^qbWEqOq>k3
%3K!`(3jG!Bb9p9/TnLPqGq,S&p9Bigf$*Q.r(_L5V+9OGbrcSG)42W\eknF>iqL()<V_Vr9C\-lbBDu8_Sm&J,3)RKO`Jk>B6#UW
%-"iAn>5KN0G9(t,c2514miQ<9H0ijOU9R-qLFHe3;W\AtdD#G:?CM2QIO!^KRkj.HG`_;<7^!:MC6^ldL-%!Z@cWb=?DNH)7Th4B
%,$[nJ>MJpmfO,mbB?)ls]X4(b:U4QPk)T2`K^6<"f7]R:;<t&VU?XOH8mA^A]:<<UWo>T#n=<47-fj1]!kEoonEJ;_)#0D7XtZtX
%Bh9"[(POje=$s(-)M5=ZWuC^XhTAXZer1mC6^XpSn\?T_4*$`T(AO)tK12"<g[Nc%[D[C'o#B@_8LIPe<9c-g076[X.C$W(Uem50
%-]U_AE<>H^BnKq!:70@\O7LX;/Q"Bs6JH5u)$X`Ao-_B1LKI.3$X&H6(oYQb5.3XKNGHf"M*&0O6MgI`<8Rua/PMYg'[[Onipm+V
%D1/3CC%[1on13`GiY?TSg83Cbf&6^#oZu%GcS?r<i_V*n<ufAZBZ;:='[:kJS!QQam-=HlZI6f-U")%BLoh*-Ol5MTS;?V1*O@3`
%MbKo@:oZs0T?+E"m9LuAI9W=T>Dc4P>?(?ZHqSZh,lFe]mkjdKfA,C2brrPO5`!>TT,@&1H:0)(//=[F-/\W?VmnbAV)[6glijV8
%a+743lF9a2mKK"N8L,Ai\g_^k7Tq+>8s!/VQ`V0.L7GAJT#J=`Nms;!h^M.)fejKq-XK;XkDaQ%bube*+3A*OHDq[b`b8bmNP4?L
%KUdkrEH(#ar_uhQBF\pR3\pY7\P8/tb8rXL9Zj7j[WlqjmT>IR&o.m<q=SLNS(Sk5Zm@^*FJZp*-(UWYLCrEK8:u:*Z/pkL=Di',
%'(,:B4;Ot9pLQ'<?T:>W^@=L;,FoS#;TN9>iff2BcPQh*]Im;Vd!Xo-CRfhOTfH<I8[]cDNppfQ\S]!-[7:CrN<jO;OnCZ=lH?H*
%:f0sS'p2"sALl9n,tZ7nhMD?km/=tmU.)0"m2K*FoqD)deK=Y9YG@?dYH*$A/j8s&$;\ak=$K?3haf,P:ZW6.j&A@q>Q.GgZ2Ph<
%l19d(@B&c9iK]]MM6Ai/7"AiRN^R!(j[b3bmi#9g2q!]F6i!&Hb)q?E2d^-$o_V)"eQ;cEc7oDr-!e+K,3sG9H)&Sbs$%oQ.t1!V
%k6U5YB_;?`Lu9D134/?^7S#IfghCg0&%Nns+Yi%#(6K=oLgN^iitoUkLH(o:gc?aWC6"Of,$$9!=S91*6u![L;"2@`]6AF<>63V/
%,gkaFP<Ol*.@k]*?#X.?@f@<o$+RZJMcbNAi(4Fo,Ng)mp,IZA`Ug!r2Fhi,=gjFQ(t:HF(+$iC;nbomZm'ImX!q(Y/]",r<TCg#
%k>Z.a_s)q`-f<4/NT,"H)8[M',dAa4kt/A9Bo2P,9=f&-C=8*Z*gL%aTD,#!$S5)L;CHfS:mfW0n=O-r5semRJ8pZ^"!G:Z0j=->
%[Nh<mIT=;Y.q\qX-R#7)Y'mu[eTg//(7CeWf]R$!e='L`>`Hqu+FH`X]AABS*^d+).FOc6m@UWJq.KQA<c?&0<J`)0;tm_+]'WuR
%hCDP"5!t1a#UP@h`=hIq:bZHh4;CSlrPud#=XiB/i`DP5L7Ur<2Y+39<ef[+Eb.L2AG?$tEV4`)e5CZ<f!7k-&o>tP(X\Q.BAjWn
%I43qhq_J6h-%-Bq]5G:1h=4fq`t*<:m@@1G!hBuLs&">L@,28cID5O;:3ToIlW=2#R#r"'1G!o4Ob^tZ>]-\[*g=(s\Eq$d<j,^)
%m]cKBC@Sp2DR"3'"(Nm0[oiEC$l52A?Fg2_&NZn"0jZLk$]D7ihTL[,c)jhdAIFL(+OP'mU;_^PRg":F;q_QkeS`N6X_8lPh*ON)
%Ko#F;+tDts'!j*>01c76Rg"9;qskL@BAoOjX'0a]Zgc>b#<jST%E'8kBUm-/>'P(qR,2H6akiI$Sd\3>a;1fk4Gqd_'Kk/q"Xg'A
%j'#L=n#ABK@.JX%YY\eY.>1_G<RrG[>A0OT_Q)eVkn!CR(h!f3Z`)ruFdJ-c:jji(o5iFUNEh@D30R#aMc8:CX`u7b:lM=CH!)WG
%Y.QDs.kCCOi/74l&m^>43"TCnhac]'I_T^qq]aW?5*Kg1haas]Q$ah4;LFUF;<qj-NmU(VETs`dPi$WESH_ma)E`GH_0^od.GSIN
%+SgYa*kjuTeFrJUpBk0c2p.")MbO:S7b;mM<'=P6=hIAsGa5W>P@]eUZ&4'iEjQ0<NVAZJ_('#S-&W\A1)CU\<66&X_D?]e<Rr\d
%$720YP;j;\LS,0<;rL5dR*,#5Ree?=e0nNH=gX!L?kFhj,>sV#>U!(I.9</piGS6jdZN(O1oqit?`9)tdU$q%O_>I.VCpFLNCNFS
%jt2`I>:bY3j'I]<./$A]rko$FSptD`[O[LlB`J@$/NN#?=O9XHTG)6<>`iR%>KDY$_hBV]LA7N1eK>KO,:i8X!@N;s=KPSEX@P*r
%i!:5@i\)#^!^0;B[RHA48$%UIV>`=?O0M-:AIUKL>PHom+7!j4d*lXmmu(;*W]1\d;;c)].>mXd3(86;M<AH<bY*<?8?F`>88b8d
%-^#uIE[87X+=GV7Ia>P'^5DULgTb/0`plU,Toj8H>P.YY]VYC"^dWerM7E317EBC.nkOVrHhEpo;VuOR-,/H#<"gM5@RI/5X;4X_
%Z/#7sVnSp[ET@j6(.f`P7^Kmq@Y$&O!`uZtO/+A)/:#m*<NJL(<od[%JuDNsGmc&/)RBK+S:msh%p:=sZEde?[YV6K!@q1_JKGl9
%,#?Z5#7hnk$G9QT7c"3hJqg*q1"*:jUgY]C>;'D6Gm.NUJ?kn8.:,aF1>/En>JbG*YCJBB0Y>_G84p.KP[kpdrkc#GPU-c0Z!,qD
%boThjXrmG3^68apYRji6h\(SC">pFAJ4M"a-c)NP]IdOqPf75h-WU\CXW/GBNs\>88G%>1]HuP?E(1?dZ[-*bPc^hmN=PJ;1:0TH
%:"C#P'i=%"YUZg%[&:%O(gB7.eju"<FjJn;U%2eSo_;S3qaMu@hp043p$H!<AQ:i,c.BFGiOg_*AZ>,;R?_q:8ZfAj88`!<:*`o]
%jRZsWrI/bJI2-KG4VDP`U)XHIW:#RW9C]?-Mrm2;n(5$i!>cc)&b2?.]MmYJ??MSF<Hml`(p]WA('`F4<P2S)6eBN++*Y:X=Qi4\
%_.6+'(GqJS`i<R1<J_KlP!!8#DR!a",#t^N)&fIu&!Hu]%91Fj8d;F,LT-5M;(Btg</O,DXB1]>Ot:s=MH*'G#KNe$BbI02r10^r
%MoB>)'hH>=k3K<jOXSU$;2Rf:U_ROI!m.aeTia2?au&`f*/>.X%OJ5B12_%C*ug2+aVKRC/IKJS(q2c9BJCo99mX,"UZ0Ji)]uG2
%e-Lof[Qq-s@2GIk32CYUc!YSZfUH@sT4A<Rd2lU'\#aCSZR6pmQVSt%6It$sK1qZUCk6,'ZYtD*p:R("+oY*R$VGq@g;9dNON]pt
%<F"Eq:KuZ&[m76p_'OHo/fj\k!rqUD/iSA2Y3C_9q>,7aS?asmMWa<[\U\"Pb.?*sNSI,fO!Ie2Gp9jU-qD^d6ZOBcmrsb,n/K30
%iZlj:?-8"C6S72O[hN0P>ZCTgLqgZp$b7\OMjWCEjIHpepI`)IW5OO#?9q&M5on6d.2F,<!,lp3>O0NUpI\]N2j24C`@B7b;m8,]
%-$ujgY[EaW0dC*7+c@DA@MP#oO@*%CBtUJt(9*Ht"<"._fVX^A@4K[B<3h7XXB4O!5aFQ(7B7TgK7d.u;,pO*m,,>F[t\S7'gFV2
%+e^;XhIAd@W1bWm6;ag)<atHX5SU9=^">oKe?'VJ>O(`gdTUXod4gf$@49O?;#H#eM][imKOWK-$`cIKSWTMYn4@t"PQXXP`K(03
%^$&Ik6`*gRGQnct8u.;$a%B<XF0p_SR_p9L+oWb*r,UkS]o]XGdO:=9[eMS\fs^Z1Ipgm,&:5cUZP$]0[Kn@@+7g$4C?m,38ZOMu
%(-`Ql\n#a5V:Rn1h+6YuGt7>(3/WkY'1gL`B-JcSnO+co,G'_QASn5KCL<l;RWp$[g;F)MQ/O]c=WNJ8WI;Nk2P#7.kL[1QJJOf)
%,1<Z5[mDZ-q]aThHm74;Z&_:W]'CQqGJ/7!Yj#J&J!`DWN>uutGa+$B$iE:VnjE>Z_<7WNr,JL9_luss\AaICND1;@6;s&&V?@?&
%M=.\l<p3ZT^_EmTi%#&0n=uHC$V3Di4`UrF=H5ukA3hZ\K2Rj9V6!aq/T<7d8;^E+770u6Bp)r`nM<mRB+)b9.rJ&7/Gi`_4:)dJ
%Ot?+@g0uAZ'F?k+C=8=!*n@VD*-Mt(\?Vbo-QqkMcq1O9P@-[(rl21]N<K\MZ"i'X-0_2W$0h7)+4PJ\GR+SK`Jl$@":&*%WhCP#
%#]h6qnd.onM)E=G50<Lc@QV4@&.T][iK'ER&h%4-AA'!0VPMZV2s(k0(,tC%CE!63n&1Vhj%7fi.4];[^L:,I+)4SUrR&'`Z(S?I
%Hh/jQpTa"$&U1LPTtBb=oC_KQ2IG@%V,N]"6hu+X4."=;;RnQeh$L6ko13u2PpaF!@r`j/1+#Kmr-m8-#/?;ef=,8CQAs%LFCR(5
%j]`Gr7Dbnr:rZl"cD=dWlltV:4aEsEmh;tRLPa[Sr)>\"cbA_LS^2MrA<.IX7Yl\7rj^G:h-r8$(,M7.32K_r9%;d`0e>4/W:.Hc
%@%ke3"&lkdlr8g7.2J85/1r6OJ?`6MU/FJ2TTo6t$VH6kPS-)^+E$^Yd6gg5@a#aR_G;E$2=U+#VSn\<A:t[M-7tP%^`7SC+!nBs
%)L)lqCrH_tM\^JFe[QRc3E96+@4,K;Me*>YC"7f1U'@/2J%l,Wf^#V,]37Nr]UEs%YXbOVbNJ9X)oue)M-pA6E%rVrOLUIJYon`G
%'SDjnQ$?fm(+rWE[_o0)G#b8/lq)8C,Yl9aW7kHb8p]=1`OmP"E%uiKZZqYmnKcfI8_+<l.pU:^@F\SSBb+F]5q?1kBIq9^[S+)X
%W4N@]><XQmlCC&O^)]l-r99nKb(=jdQ*5,hEd:e0\"me@EKt.-#ctK)ZUInaj%*ip1eu!_rD%@Nh2ONinVKZWf&TB!7;#u'>)Js6
%>'0J3AA>jLb-n82Mfdj!j.43(:UW_7-<nZ)^4kt7Xg=LBlFAjqS4`RSh>D8jYRN*>2NCrtOO>hC;DO9\0K;r?:'pPHZ"sgpY>l")
%1lS),NM&*dJm'mVdP,uFG'[%?-Bc'i93=nL43?eWAL@pS-XFH+WG<gHD>:JIJ>?e-UhkRWB&FnLM%uu'ej'nL'b-5R%$))2O46(8
%=u83:1H8913"d,$aPKE+4tR]la_MVY,;hh5>s@aL@qu@gL/4j>"7!lW.Y\?Uiu32Y2LJ[b"Hh:CL+2[@"lgKn%A+DpIFL2@frDUA
%e(+U1<9,]d\7u.<=><\p,NbW&lE0N^LTU!sn7gF?7sjPS*VZha<Z1fDSUD`GU*WQf&k_.[/4CGJ$0LR.Z"RIpa0BFHMo<cDI3Q"l
%ZB(e^63.SW<cn%tjM'M)S'o$,o]t82:lEac&o5_N)o7j"MeJ#$583J:[r_)**kM^Q>t<bNmJBRmoO4W).CVG`j*@5cfnB8R3@7jE
%n7`IE'm%>B#j]5#j'I.,J4AFhA'qeU_luVPYXZN,7EN=u@j@"F6Q16X@RQu"5bi'ZUV?9<MW'MKdYtKZN.NjC(.N#UN?r'PH+dlB
%UL>RGb;Ymd2OI:pBOf#[7Eqc"fr.?aBgb_Yfk=keR71F4)RH@[ZR?ZsW,8oHBZ-WW`1ge\+u0^l^Q:A-=>jKJ="D9@C;qd8I,]b[
%=/&IIBOfR84l'4,`CN1']V3lENA_Q3%HQ&knUpa:_*CA9@>UlN=;]0"o3+"1g=U_E!JLBIYfB@@a>QaNg6dB.WjodmT'$!VdDi3&
%M"]C_GMIuM)s6_j=fG<fA5`'=O]72>5E\Z:NCT-\qYNfA0D*::_:jmi8gBCM<Z66-[PAmoJudpO,.d7;N,.p`9Y\:^9==+)O5q4\
%p`%<j%=XFV.6`u6;;k%9/Nn9>n=,HNUQXJH=)/mi="?"I^@.Z*7bej=O5:!Y8n(/c=K13VEMpP\pX;(r=>[nB0YgOb^sOiL;)7p)
%Q*<_4\<0iC`\n`i2QDKil5OrK(t`L=f-hTiBK3'6hmbtmU+qY?=u<&&0VZtV'2<lodALj&Z!uXcB&KD"i1f?rU;!?N4@1S;[`GL<
%_\P,I('VSk[1,,3'jB)q=qhEL6j=n,(Xe$XbDIkA>"+QBc&bA\%t%41L=GGq3E?U<dg[U&N9*E])d7+3OCQ]%5[H#Z6-()NBpRZg
%V\5[o_akR1B@YauA*[jK&+V[=CaX3GhD-`nc0[>3YIHdFT!g[i6]P/V&T+Y^FPFj9)trjK8s+EINj!B!!XVS@.$Ck_*XUrogTaje
%<lckng5WI3,ELnc)L3U51*.euX5iaG;YtpX\DFrWZ]lL;[-UNt6s?tk7B!'X=fb&+*t%`-gUV!UHG0[Z9fLpCmJFP2mDHSO-(!>)
%P+J9]$"id&+`a0?q>V%J7-dC+PFk)>EMp7)maF,O=>ZVs0UtusSC'#[;)6FTQ*;`8P`aQI7PYkd1+EJ`l3fIM$tD,Q@[)j]1n78#
%n(Tg3d0N3J/K2E<(r,;*KrVP=_0am*)(UFjC5+1[L++=E&%*-;iPAsM+@TTg)Pj;LUaR(UW,7d(BS`BpLn\R=+u8`9HK.I4b6BBc
%C;g0AblC2!DgYC:L<o*'AZQf6V].Xp(q>>00!q(R;9#?(J?0<6.ZkeKUc=;_e/*`CKc3+[fKNNa`?/:01KomT&n3BM+Pnq.@b'l4
%+g8Die"4"ZA#"u_,7eXn]6;tb\skL^Hrak/4.-f/o-:5fZ8e"?=W*8GoC_KQ2D<87b,KP3ZI6f=U")W(Loh*+Ol5MDS;?V1?/sZ9
%7]*$W8?-6VE['+3e2NOB`>@2C[=0IYYA`Up/W0BKiHH;fVnhcMWjNAdWYLom=`7)=i%oNDTk*87Q]-PVcIa-2rVX^L!gaa`^(=dO
%@7J.:7aY=-_tZXA:bPkD.RbOY]NR%Kd4gGT0oAick[Hsu7`,d,fapWj^dS19KbfT$0="3tkXEDI7F,>MFLMB\ZjeQeN)A)`;3[>C
%7#i=o<mV$dMaf,cC=*;U9aO8)#XrS4MacY>2<,?=itIP`LXlhlYZNeEO]O&&-Yc*u\pWJ#k11B*%4kP>ajU\<</fR!L)*t;ft_&o
%0gJbD$.Wu*I1f.//n>!=i\::,?Yl@:k(4+\%l@OQ]b;/a%L_fm=c)E\M]U8\lQbdgX"QB8=>fHlf!K4rIB9m9?N+(F;/[^WeAR1p
%MO$5b7a[$a09;h;%j^_O0'6GL?NaB_G9X'@_?453JN+9D*JkG\ID98MI=77=f=,6m(4CTTc-X6bngsY6,10;9,1E9gO/,sjlQXr)
%]m-HVmus]X&!NrW\PoJT[lp5$ES>[\=93T:3Gho#Q\qp3ooD1?D%N>R;8n,aMhXNUU-X]lU54uK>fK*fAHN]NV..*3@CW%@\>$\<
%`JVKhL9ZWAZ&4;+LXu>\RTMCAO]MpF.2kZ)\pU18CI@a$N?qU67aqi9PRU)M`Ye94=GaG=_b.RF0GIA?'N$Ou;;52^_*CE55Xa!b
%6tC\=ou;t;Q464BeV[dkRUM")htWkLNKM[KQ<6$6:,b:30ffg_6>/5h@u3Y7rE(4R=5uC7;(0gWO@:(F6TIM^!IV>5M__Y&c^6us
%c=,M$2+oijR"'Zg>@2**>+MpL`2^Y-[^KJRm6d/`.+$:4JpJf+&gqiFP#)j*67IiPO]]?3*=M"@Kj=H&mc7@dGpKZKa:ju,d5[:m
%)36#QID9Q&ESh&oleA[8bPpQnW1f-Q@P.HS,1oe@,hfG?a20G,FV4)SDS4HRpGpaWLH3j62Et$j"_gcQrl8gi/mse<+]^Lp5Q>`$
%\ddKE2hY9e<`(eV;)D>$0`Fm(Pfq\Z@bE_0?EGWQW#MV4(oF6Mr30XlU1'"TClG)sgnFDX%3?:E:ZU&XiJE<:M(YE6b$4[(D*s'n
%K+Kno&7pJ*Og0VQ*EHY:i4ou/('HqQ$pbR96.?Z2//Wo9)1X+RJ;B.7ZsL58_m86V]NR&f:c&$roB/98D8YE+%38IY\^QKF<#!MC
%L(7CHg!F0D3'UFL;3V=sHP.T,,=*)R#_a0SZIh<E9rAB$kB2CXq)a?4K@]\I^gZp;?H^+2T<u1=EPneBKsl_Aqs7g`rRhKZmNbZh
%_iA7>>2i3oAO/GAa4Ie1M7fpM.rF""TLp/!6rf`Ofto4+E?q\B'INtZI]']i^6)qT5*9F0PoNB%W9]@(9C]>VMn2*8l.<C3W>;U`
%OmBVC]MmDU\^K2e\^G5W.l,mt1PTTA&_c$nE67<p:YsEIgaR#+p%44](5tr:ND(%G9Jd/:PSDk-2I]cH.Zr=4"srO=,q9*Fl5MFY
%(m8PLOXM02BGb@&?b"M#U="e0<_sX\0G`'t".-%=@#L!Z<X_"<$osO]3CJT7Z?B?$l=u/(nQNbZ6d:-K_14mi@tb*(%?]V(U>gpK
%0LGcQN>7`g2WV9'_1p$=6^J=2daf&sco+p,282gA$;`G_%iHh;>I1TOJjFgd&Fq94*VQ9h3#VkH(/G3i)D8<T4f`1%/>;aPDWi0l
%kqG5]:QUPMjr`Nhr$2/3hA8=k6"#EYg7!3P[<M<:leC<Eq:jg*p_TQOpPWDYlDMDqj3,2-g%W8Z_9:a6_s`'OMdQFdQgasl5QC@7
%5QB+aJ,ZL@rS:8!pWrm0a$4hEG?j;q^K]m9rUDg2f381Ts7</T!,f_ZeBWo$6gG_L\7jJ-+b+o%(%]V#gNNOFOa^.0-h8o0J>3iE
%6iT?"%?MUGd44X7^MI,)bOY0!G.Kr[(>rk_J6'Ef,c(4@9ZYN;A>+6r4'jD4].T#\>qb&O!Zj,+r#74,nbMSLlLk*/J+i4.q=>F#
%nqE_+It#1;L65gAnaGW/bP[S[-"Th7s/42&rnl"NgAJ]f_S\SaYJ98H_qdOKX2`oob)aP,oB5hF5<W;Qp[FrmIJsJRd^R!Cc/(JU
%gA'MBl[E'hW/&3/Ho4>fH<4:44-$j76S&^F"n716]Lf)BOX+jgA_RVfWE$S.#WZaUR-T$.gQ?Yg&aD&.b5<6s[;;l=U1L/JcctMU
%AU,EAA>Y^d;TN^Sm8:Sp?s:"X[ahD)%\[]7R_gc!JCY*&bI/!9>#oCl7sln8'7$7!l[#Q'a/.Cr%1g_gdT-.<DoBOVk9+t_!H(Qs
%N80RC-[gB>(4;8f^78]gC6^N'Qi$KPMIT$.<irRD(IP2G4XQn6et]I&5PB#%rTh`!>2F@JdcCSG]%rhQ*rYWjDf#!][gZU*a8sgH
%Vd>sPLXRgGTB[*EC)VfD<MsG%4$OnAN310[>/t+X(W\t**9pMuWd<E!T\p?,eHBMt0BD.6p%>D9g1s!jk5AF`n;$t%?L-%DJ)ZLA
%4%2!\V>6i!^AS/`mf'>\Yh/d9,PLk\p_g/+Cb<uHX;E9eSp6e*eWqQ[4K9&049BXe`e=]ZVU6[[]#FYFU*%/agBs'Y^.O384Gd";
%a))c1"Y>2q@sY#S<p!$_=qC1UrH50f>3/QNQ9TlVIVQ1gL:BU`<kl>W(fql(DuNTYe@_&/I!].)'\OVkNro%ATeTT@+!5Rh>HM/]
%B14VYh0aWRI3e4N7sWj]^[PYH\`gnY.J[lR+Qp(,PTJG=<J]$k#\q4F(N7Q[V]k3)X0_k6S1qOJD7'?LC`6(t:Kf(AfN9:.KTVHS
%fqVaI@H%8Zmj]pI(L"/XQ8dWlFSWdLgrI1m`4?fc_>t!bCBN0<>gu6bWscs;!Phq>_9oOEXi@?df!bG-MlUg^V?V8#eDQi?$F$A:
%Bcek`O%T#bk@'W\C[0hKAUfl0Cq]%d83n7A0;Uc;aX-8er)j(#bZ_Dh=j-b0cenK=(A5_ulK3JAgG]Y^T@H$,Do_hJqKCLYpu,?t
%4_]j;^;XKR>N0Y3q1\%Qh(mYm/srt";BCF2LbR74p;Nb8gKY/=TU=M/(QQI:aM+%"d17\)O"/SLUA6P7IAu"h+SR5u9eS:uc&.UP
%>=s'K)fl2%Ft,@E;Z.e![PGIM;j9dl-*15nh\,L0$r5N:lgu;1_]gSu@rQ!POua/Mc,=4E1>a4Z%01YC>623Bf*CAH_\LE4aOusn
%.PTU]EC'Olm6<.tOV79/k&+u6&6\1ZL0MqeBGlQh3OD1W$4G,W*c*>EgPMYYYV"1fA56kpoEkeg#$_I*J/\p9=R'<=5h#d?S&a=G
%@2CrsbhULc^,dIS4Ei4AD`%.We>aOUj=l&,/ZKN1AjpT0d@1IcAD+sc)cC*N`Z<)^m7DBbljYt(.%)['XeEo)>N;7=K6n_r,W<BI
%Zfg^>qC2t<P&u`*b1rhmbQ^N^a,*r:'BWP5Z_[V?Yce4J6BVJ.:T8r/lg2sEk-E-*_s!pF0cKWmg6hlWNr5fB)KQ`@Ju0\f0hJSs
%T:R6>dMm6"?gDMa)I1o2&!N-=3Y$^+QT-eGS@GoEHJV9(:P^dH92(@sL]n\]VV-)Xa$aUBR/.,WB\622#e1IcgskCu`rAfdQ+NN.
%A']^OI[Z^2dp?X6+(p'O+KK0*C]7OecOLUqX%-(*#iI;2Yh(F")fW6BN8beEdiQ^L%V^#:8tN]:Yh2G&Z"SLcNbY2MA[>S<kXT!/
%qXjZ'rr1Naq^F!Z><9"i6d.kkRLQ4]p+pk;aPb!;6"3ErU_VQ*-EKLr:2opf(NoH'I'[ZS97j]mIeY<[S90(mk8')iOX/JP,.7QE
%P6a[o&*MFMK*3QPeHPuEUY\LQ*:+"f'I:q!1qNOE6W.$0,Baol4_s4pGAs3E7']+mbIi5aVsguG5Hltmp9X1qKruX!X8L#Rp([EH
%<r3.uX!Eqr3RL?+o1%fnSKuh,bk-O4@6_])?NtlQ+>;:c6d.g=)EZ:A=Q$s0[**h?4m-O11Y>rc1Ac<)m=i$t(V#aJlAZlP9LG%8
%W$r.7fBO-P"Ai/n&OmUI6'u/G71=DPj'7'o7gbQh&qm\u.d&XZ,/GIJo9E[2b95(6WKcqNG5TK2!+l$rXjF<gg^sg-72D"rBJW<o
%F#i]G_mBtQK58lFr"a**5=(1(n98/P#9;!n0_3AC+djedVckX^2/.AP$F4(J<V4E2H=.epjFET)*:$6qS/8FX1P1T@MC_7lekHX%
%RkJ>9STk\WRiO2Sc_(!gG2pWKn9N?kPD.?9>!3f>HQ*9\IsaI#,m#?fE8H_f5q!m0M[\7g)ZMY?[<%n$N>7bS%Z,a4=jp%hHXSM9
%_AP?#6)ER!Rj5^<&A&$4AlSFo_IX*5*%XTbX[?!*>b<<r+:1Ri&.t.f$Zn@/ieMS8XoZ/g3bKS:(^WTn#_@P4"(tqV]/ji(^-Lga
%Pu0`k@e3e;Ds("O15!??;n<7Hgf8r$8M[E\E)+!!Lbq5./ur+=408?b0ORXAb'mU7nBVBS!M.12Vl^alS2rDR5Z%CUE1LGAeh<H"
%_DFNtM'??0_9d_j;8+6A0:[o"4#H1;*=sI(#9qq:g)MCZ8`R<+A$\-ZE;0qU@YuZ\']P*ZlaTR=^Ji4^?'Gni<tR=s>N3G))3,sR
%;/CKf0<dsb[]Ku&+I!Sc0*+\mJ<6NZ@#adkraA;tg9apkLELjc)`r=/?jFYh[+I.\Dg?\e:N*bl"3i0'BmX<1c!J7/Tg.$nm.'%i
%Jk+e0JWa9$r313$&1.m!XT!2.:2LbiXH7+CebM,40J^JNFC4%VL^nWG7;B5`m5EOA)'``^U6C^P$57'<[!C$(iKjJC7A_jPO),?0
%843`=S\8S/r:31CK7_0RU_1F$!f%!JQru,.BApOF6@:0\DQ]h$V%]'$b",TY%G*Tu3)8E/35!m:ZsVnY?45UafT>#W'b4=S9r_*c
%8RISXTu3IU"WLs(P0/Z\,'FdR&<q8PEhj8od'X?i1ll!4)CX8V@i$7.Ip4lkXej33#<?-7gNJlS;rCHsSRjt*?\C#sCg1@olnH("
%/gqRhXXCJDV1>:`ZrEN#(n`l>+'au1Pk)O8HU+,GinB,?V]\='M_<9N,J@@6k"fl1K-EiOMok2)H$GoXk6ABc^ONrs4.d_Ym-;@5
%Z<odYkNdn)jFE.$IO$g,Q/1@RY+qJ6iBTb-OCd,i3Q`>f*73A8k-N!,N#Xf%BB@!]E$pn6d\RU+#<boOdqs9'DV.uI:89-LQR>N<
%_<Sh!V_P^!Y#E^?E*,S$i^<A)e)"5*]OXc#qj!ItBs%?rA[&N2YD<o(mom:\J>WXfRO#<`[$-K*kjCVAHA:tMBrM/]EpG_KBFONl
%8G&oObd&"D!E0+nFF:\_o90SXMbP!r9LOhJi7/+V3TQ5oUp&p,fW2`kgK6kKq0jp?cma3Da9_Rdj+puK%AK?]mhs\U<j*r0qkOdu
%XQb!?dB$Be/:\@>^<makj/mua#i+4.^"Stf*+qH.k(dJ"M0pCs2B_KaH_93@%0\?u,r/$_HP487.tM>dGa**"QkNgkPfuq@![eNI
%ZIB$D1q3u?,&K@KA\)t,IP2@aU+Z@<o_^W1RqmKFN@<7UXWXL4A7^lM@*bQ_<jb-R<E!3?A1/?R=sC2-+j"'V;)X@!P.m6BDnLb\
%Q!kb4R[!UtTnU7o><8@AQ=r3_Z?g(%DV76U<h\p<V_1B3+YJH?[/=7(rXphJ4^J)9Xb5puG@bhFe0q2sXVl>:qlfC6f#mjYNDH1-
%Mh#EV+=Ss"/1kQdqg'dADb8W*#Z(L"n=-)OmsX/0ZSu>Nq70cA%W$XK603/_1p:i_NV7/k=Cks?Ism4T;6hncT!W(-cOiq/4ee/'
%Jr)q)]hCG@lOOJl3'UH^l!cr4LX$]Pig]*WZ$%q]Hgn3FS$ffFZZ?+JS4?P[;b0P6r!+b2T?b]F"E8W@D[mZBc!a,K!M,0Sb19&*
%+Tk*/jPH9kS(l$\_C#&p+#+;hR"Yg\jX;pP3C^ATTsudAU6O:jlV)doYY\fA3&\0Sb&GZ\!:he*hTPi54!)U#`RoO_Xiq1AX5GrP
%OmjAP$eql+R5j1)d4@R%m_XXBJR%`LP2dmAXaVr=&@S*JChQq1i5J`P7e(J70pXQH!9Qb]iOe5U!])b.&TBr&+IceriXB^,5NJ`P
%.>PTl8Yo7tZSrOYlO-t4KeSdWgqiD)2DfK<UqIuL+JO";aR8R%8#nmQd&U`<Kp)X'Ru7s.aW^Cll>1YTY^k&V!+L,lk)C7Nh-qHM
%3%g`pLXVcS3B.W0?i_(B*%D/"4IA'j^g_<4J9h(7VK\9@R4#I(@j<7kc,?ihbbOaP<<Dr^mi+?;oGtPt9qhLVrQ?A;nPQTSE/q[@
%VKeHod7pibWdnJe7k8UcPK5UVefr[)'Y7BKO=!kbh%HN0c6eZg^g'uDK1WJ9n1Sce-;n^"F&c):/mY9a7?_J&WEcH[9WDak=K8?h
%<$QNJUjCThW@$>pR[Qi+%?YC?-IoUSL/d2B9;Hm:&50$SWthUO9r+548Tbsre[T`7WTM8ePA6n-&ugVa6)rVRagQSmf7d1&=/h4-
%5ZXlH(m`%F3f$`KWDmC,Z;`'8,"o=g>aeV:eV$J9#U7eQk_W878Rl1GeYLnkChQeJ]crkD"9/M'Ag9$%_34)o_PgG[@[:c1Pq:FI
%q,DDVN$pGE2jg(.O/sOb*at1cZ^aQCOrQc^EIJOO`a.(,BRHJ3M[2.W(dt$$<.VbWr,322n(Q+Zoo56ECLhPoHMJ3Ro8inq:'^Mo
%qFC2u?N/FOl[R7\p+Q$<?N/-kJ,^VLj_*J?s7,QmpK+hmqp3[Ea'/@BB-1pU;gj(qX\X*4Z)0_9e#-CG>Y"fS)Z!Dts4_7#3!GRB
%P'+G#LHj^ufn_eF/q9fVA"FmF^_5o<E%H>P7%WdTs+0)4\WCVebD*lcRtSZa[8miFNrpq?&3u2OU=942*RdE:d#SKkB8rubpf;*(
%IS^/,0u'&_b_$++H6Fh_Z@[/Ei"UfM%5a#&G-M'j0N3l^.B1S/2Ag6[c,[g-8s)njOP;3AI"R*oT4OGR6r=\_5K"OQ]W6nl></?3
%RRUSe0GB?def#_<>9Ecf:`2l8n`ta)kK5!69T4X@_`3FkNuqkN26;_S-(,ul=M6S[e=6XaY]@Vg!V+/]G7hBFORpcA@Yb7N!6BR0
%*\ZNt\(h;g=4';X=1ur;_79/7,"#5+Ni`k)A3O1;#o5NLdfEY`9)'T&j>M""$PnVg=oZ_mPFk&e&GnIQChG,>=djApYbK2HORs[t
%2Wna]b#)eQLABU)mQulB;.]D$V4Qe_JL>H@9h,>\%QU)\O_XOi/(r0H(YRnM5#b6*Ql3&>In7Yg3'KS,iBkLLfagE7@83`,5Kf5W
%!_Z;NO27qS+kU?Y<CJlM"NqlR?t"D=X=+@'1pr]A"Y-PK&d2W\\@Ur^f^lA,if\lh<e:W31mZ5k@4[`H"Q@QBg5C]6o,F/Y2fs:X
%"r6i(Z`kU&(b9=qm7bpVh0#(P/6u.ko"=%em%!u!@:H+MP\t(Lb>djKccc2>KkmocYql`j",XMYZ1/cQdfI',FBW>'$!om8Nf#hL
%YR-!^NnIC-amN/A&pn"Q[3OIWKdr803*sBLM>HFa0'[M^qA:c1fZumg)(-n#'pA@<iUJIF@!m^K3a*42jubb$k%A[_&MK6.BRBjC
%KnE+#>-6^l$JH,ZmS]5CGG(/[>9La&M.SI[3c\DRJ`sCBX7Hh$`29#2,/M;bU*</6,5eF_N#QR]jtMjf=>tD+f!4=u==p,Z/J]4_
%$5%s\[(o<m/n?^8YI!$'WOBTK^2nWWGCBBZ`5O*^'4`KHr*eRflqVC.i\ZEMG$`HK$`StF+Wqum?@2Atp'A0B*P0q,#k<X7Kog-f
%.=kgHSQ]TJj7B,Z$oeC[FoYc$i,XPVENBcj`5K8P.g'@A`rb67OY%'CKOZG+KeSe<h_gqL=C]QuF[WAh>SaR/CnTM-)2XFl:78oC
%D'X*_%>R_#0?=A+%pI2(;?i$ln):",i0%^)B"#%H;rf6tbJ'!DaLdqe@ZpD;a%HZjjH_@dSGTh&#gD8oZIpdb;1u[&`_CVY24,!d
%bi<,][PjIr*)1c3ZJ01,^CJb#BqbuU'V?^qTOX\50Fq<Kk'!H_S>SAn89[0;8n9VBDL&F?PBE">L,;f0a)]Uk-oX':8FoP=]3XsX
%#*U[?2Jor7_UbRfr[#'s7Bd8aQNcWlN[ZeeU=c5P5*\CdJNsBAe?Kh:ge'\_AKaMf+bC8td7LehEs:tb2\Y"9We\_b\>cAoC'#\0
%;+]gP#EYE>>bj@0f98`O?J-OK`)K.#T\F^__GrJr2%\]--C_IGD`6F-o7E#$>nE52%O-:G#1;A9M6fQi'15Op@0_&bN^N.`lQmCe
%XrIa$A@ht_S`')C[m[/-`b"ZZMkgl!ls-Hoc@1eXN\iJ_@$<NN5r^N;&2IcG<(U-0o9.pm3hJisf6ud%nOVk;/R$"o-Bc[(\H#\K
%_mp8]kV^(LOF9W-Bd)?479Mm]rif"0Au$c-lSA1/Q#pZf]'N7=>:&#G]sGPdat=af.?uqqp]`[c(e(A)RmVo7`A(kKaJCb9S&cWT
%)S:!bMTeMC"(!pr,O]u1$q=!;WrnEaTqW1^3MNkOh%8[,s%?4?MCGMob]DH_!HTHE.#N*TkSa)EjBhs5Q0$'r`RV89+?[;--<r..
%QXdKLfa%)-+dOb/__]VH7YbD/&8a:34u]dYopDZSqJnC89qGsX'bZ-GEHk^OF0!2&njE,Aau=g;36g8c)"g1bjru/?[6+bB13&aW
%A-3EE532\Q:`)JM%fp!)Z9dXGRl>Q5&&@NG#C0e9gt<XQV'LXJ\$m70L!'5K]ECUS1qC47_C's@"-71fZiXMGoS(tOBf8GW]Wfqg
%:tCpKpm%V/=C3!0.;&nOAknWXVci03JT+0]iZMcX2PuZ,5$TuPi^KDK",OXtm'F"c2b%1p(kpJl3*-Rd>n?:DN-p2te^f#XT^rEg
%$!J#j3SF!L\YA3)2!ak='j)4$\Vgtt)04=GL6KgoP$P&D[,Kek*B9O36Bo#e5UV1k9RA1M;4o$=bGo]$LJ:<ADaT#Zq#W@]Mgla*
%[XiQO]1BePfd16dALZRX'/7heN]GbWRnT&uoE=M18`j4&;6<EHF3u5_OK@TK_ruAH%TQdDUBSL>af1Pb^"@GEp\AE]].hJNKN/%B
%/8F`GKdf_/6^JD5bo\Q4S3$L4RUAF[]TD_IjP+1G!]A(>L&$)b[[4pg"2c2JMKs9e:)gjRdmi=r)YfZg!epinotU!L_prnf98:`[
%RB/XX;6hfY)04bq+To0%5-8=a(%fjA;*oCcBI0^mYlR^W\?F>gkmd&WW5E>Cg#k@e:'Sp7[5RO-J/)08Z0<t34N1k3DaE$H;76`S
%A?l=(Z*IWq-q>iP2Vtc[9NmZLUYG.t4GK4F)'8@1*jLo;R@62ppASW1?Yjt=3*foDmBX=@fl"HAr,GV%>_Vr1n0qm,LdO^WD'hT)
%6O,O-Yd\S!#%i5"#mQg0l9bjr9&a![<GORe,S_!DfMGis9?DR>lq6CH"WtqY3s`8C"@gN#5t*1hj8DXt4sJoC9(nS's()sRF@CdL
%ZIpE[2=a_l'g4d!aD)4^Lfpl*]3Akb%Z[38lu]dI!2L7ibj-6mBnG5&*.?ksqD%O_;ZM_H'6q=gjq!Y&NMClc-F$[]Fn:?A5V;TW
%bqe`HDj8I$moOFM?+g]^GcQ/\2XKG*l@%CUMmp8MhR[(+=^h&?\#S%th65Z"\oqk<ksg!`f)3sUo[9l;V-@/jDU#?>RU3N^^N/Xd
%jjs@PXfj7ajqho@0AN"'\95K(COY5#eqI?"laEM=D9]9=L0h>H^MY!>h:A#6k4Q$^OW3HUZE;ekRi!Nk0]2f./a?>?pT(a$2e_$N
%g>]\Yl[I7Debl-nl:"pdMmg,Jg4it@7D3:Pc0b)@m.,>G2Yq$PpM742f5,93:qOBsZU(>0/g!!`]Nhdc]4QtMc.;9Nm4ujjSEBX=
%H!dh\#n_Yp,nSYS*3FV[LJ&<0Lj!LL?;ul>4:0PE%aR2@QNIXHp@@5:ngO3Pm#&beN]ir%bAe^;CH9&:YX0YBQEs@8QF:5QE\"s+
%<jS*=[:IkZg=0:IbZ^#CWjNggHaT.e[?_W8QK&$m/fq-`.CP@Cb:t6\>2G!9bPB^FX&6Rq**)s&h-/):`b.nM!-$`YAhE357Uqi?
%CO'l7H0]?":LYnoc)p(rXQ<9RCb<[_D:W`6:kS0:figR(8?LuFXQ>Gc>0aP_Z'OG?.W[tYjh\(\;6As!Xl[s4ja8LSa'Ob\=rud-
%a!scaj`+GHP?Z4_=Nb.?'4Z;B@sM$`3Thc5@sN*)GqifSEFX8l@sK1QQ=C_=`cB:20pZ<7`)n)9=<>soI\#XK:ijTHHn)uuEBGm0
%"_WZfT>JLNld('J5d>/Z4pY,3.q3L&3S]Vi>M-oFjSW]"ngLqehAGk4NEr*Db&K*H90#?3fMWd8;NAO.2M$(YPZs""WN(NhX!P0<
%_hf!q6L;"r;U3*h@OVOu=tSi5/`kY:jga9h0!&'ZPdfqDEh8J8+4.u)hT.;15qM+kjQO&N;bK+Y=].mD>KX5*&kb6'3,lUrAguo^
%6S.>dheFT9@OZ6?/`fDPjc.bfc<3*V;U.obkq5d`ji&h5;(Ugge5FTT&@%J[nPLkOCaj;?/EK/Ljk23H@9La2>KX'KF\?uk90$A;
%2q<7e.?A3ma8I\CjY6>+Tfeg<4K+rYEjM.,4Lq/uR%ZXSTfe4+*%oXESmr/$L2oso0pJGmCa_g3Zl7)>)Tj^3gdNZ5PU"4aAI7.\
%4"IScEQg[$2h/=g4l>@140%G\]^4]ue/(2,n7c>Z:MqNj@OL>eEOJ#9['Q^"aUtMgB(G.tntH?XmUl$qbiHaejAme"R2eL3YRV#&
%?-c_m-806`%r*FeAgYQp1RlLES&ri/P8?$=6TA1gWgh+_R*"$h84o&7a]ZEJg0e>9k?XAnYF:j#q)$.g=OmqeRB:)l-t[L95h/Q"
%`Cpb1b@YeOn>MbF(K7lZltRk#DC,m'-AQN(R`UJWae@3`igQ7V@;6B13@6lC^U'?MX[E@\c/`35W0s/cr*^bKAgU$)RE:)La`2;^
%2'gCnC*cYb-&8<PA@62*,C+AUGr?mm<[2ld,<6MG=j=2T0I&S"Vjc=J`CQ!s.l!4ICs#6<lR[7"K'?9u:(6,M<ce(&:]QDPDOf2@
%nqW(NF(T:GMlQG(/K6_*kf$"$\rkXdPM+#s9F=Ab`4V8>90W/[<))FB:#s,bjB6?Wbt[8ERE2_(aK8W"'7$]h+r<qY$F$#@Z^]#n
%'gPE(,"H)M2N_W2OdBW'04lCEpH.@<?OYq[\dbZ5:#s\rj=FhN+tmCLDe(28hJEsm'K)#rifWnhAg.ap,0)$0:#nl>jA<7!+tq,-
%?IVB'rK3JgZ^]$gR`LDVaKqAWU"!'0R[D0)C_7=@].1%16;?NEn4B08nlDZUM&^7#>*So+0m*/$+qJ90%p_oj`D,Dj9]S`+bnb=j
%e$>&?[u_uDO=.AroA*`=c(A+ZEFq!73PJ-<jFo2H\>p5M3KBqP+hu<B(T*>"-"g^N@X.DJ"hC#^1G*6_HN(g9BkkWZW1:rRLM<0t
%&`6LQ(.V*[d7iW*Z?:/1:^]:%lB7c-eO!T\64R'4[?,#YI?RmVo<OH*[ubAKDHYLV?Go1U5,S1nCpKiPniGDi*mI"]:,cCuZWkNB
%ZB/_*O>g&FGu4r0B18'<Bbp8I(37^N/f+"/(388=A_h%86I+aR;Cdr6a<<BT+V/$*a50`Hj@Lo``@^.^=idpQaK[B2$[GVX3Klqc
%G`plLT%lXBIAXkN@NfA'$erSXT"q5lBGPV=O\np_\Q?sd+bu#\KtNe,4ES&opL+hXA><Q@H$0R@A.(C;7FaY02?S4Y"*l^*Gr,U`
%0(d(IT$9OWBc5"f+P$-g6O`%cV@itkp=a=*^Wpe^,oj*W0d2(0;_?:9Bp/s`1m_WGQ1Y!0aV*S/p;+KLLK68R`m$bTgd#2q5T\-7
%%KdXYjIGcskV:-Fj2p]K=mY2<?r?fG'%;&Iqfm/YG]N\kPdTKDnKR[H5mlmSbO+?3m,JB=r4hU3>L-m&E?4gl5l[Na)N]UqQ1rJc
%M(HJn4CsQrNAMgfUHt5M,ML\D5W(.ghbUBiQcsm'l0ba!oh].K-)#T6C@?6;cHM*'N*%T^naYQ-nY5RDjRMcIj5\8@j1T2T4Bm1Q
%ZbTRE4?ag0I(WR/4@so?/saMt$fg80`bE0=io=.q&g%>\SFQ,YnaWRJna,f9]]8$Dj5Wr_`lF:_a/'1%j;qn&n[.?:`T#o;CV]O2
%KLOn\_YL9,Pgt]QUOkWG+8<sA`Q+YtN/qV0O(79dI!eYp`lF4>AUHUeHosrI*)T<;O(Si]9ClT2gM(al>'-8p]cs?_NK,5)ijeFA
%dIF$[ET25$Gjc7cIpV'99$<_;TpN>i_HV0aCiV!4rq%!K>a&-9d3K/?*jG=qYk=ltp$&FJWi5UTT_5l^ldITS<AEgW0^I9)k`/fL
%)m_^JZYmYJR.[JHp$S4?\hWO,1$_goleO;]9ekti1$a6tf"5AA]40@'A(J8$f"5GCqo5^]a/ffjXEV^d&&kVoa/k>]=mqAR+,X4i
%fgFeW=mt$2j,R:2aa#:l=msa`.#M0rN`cl3Zec_/*Ybs;*O?e$N'85f*]@VY3+gu"F3Jr,bka$;HJ"VXiL';2R.Zl;JYJ8!fdnnm
%&aOL_@,(bJ_#`l>!:.H%lf.uH#6Cn:"0;_4XEOcJ5HSnVUii+u/BShkU;Y,8,XcMM.?CF:``#>Pm-*tlBb]@8EBt?D8(mS<:`^TQ
%h@rdM*D]uV:Hfdo?8nC%3h!\gRX@)`]GaK!dH#GFabQY5:"UI\?562k*DKj!R_1_N]IKA_3L[SeR_1_N]PfWPG;OSH1jO:%GulhJ
%2`,g;B_(S)ntBafmV)0bB_(S)o!-U'h9k:NdH'-2j?q>U4aDF&UWIlTppd'?];!CRTk4#;dH"`2ah+=iK:p>uUWJ/*`4Med_a]h#
%8!BE]31;rXRX@)`4DZkME&;i:2#1*)3>@A@n_$#e^9QbJU#\S7jO97P_iWrqOlYOfOp=L?%muKb8!8'`P!?-i;l[,5=ZeRDFTV:V
%+%@'87M?lJ=W,H(&$AiMpb)'1i(2V2n`7OUjA#1*e)B@fiT/J8jE76>Vh<*lK#re#afD,R*DBcuR(PMJgk=M!jAj%Wh8//pK?:`X
%afC$8RtJhPK#tWWanl:+G6a=U"d=-8PBR1oG6a?+%4:NR-6ERAmg^Zd$7>3O-6F1#hAo9R'MR@(9Kj.ahP5kI2jh5_&!8B0]G[)A
%aH=hb"-\KL-LV-c%gjZP"ssif'CQ,P%i\4!*DC@fiF)5L@.N8ao&*pH@:8Z!@.J#6Ee8WM,+mC1j;U]T*D&F/8Nn.c4qpO/*(W7O
%O?>LaHl.r-30:clOSig<]/HAF%!J2S*h+/to6MTmF4^FK;DtNiW.4_QlGOD)"^_r`B%meXH#Plk;`skt3-eL`q(spRh.ZB<B_&0:
%o&49Q@Q8?tPF%7UmtN/J=a)]J<A\uF1jRnjo&aWVWbCtcB_&$6o&aWV[aF0\dH"T\jPA5E?.%`hdH#_Nah+=i]:d9XUWJ:cah+=i
%a$u8:8!=HPPBTN\%n2]Vi*l29-L\dgjGG:&L*e:&Q2sNDP=pQq_rQh)%uM_&N[>8D'CUr.%i\7"*DPsg)4EZ9RX@)`4DZkME&;hO
%2#/s^3MF+pP8=anD_1^+./?[fq,AX80I1p_,l'E]jM?u>h2p^6OlY>[jNgKSFUIMPW(QAHbj?c2G:Y9ABfTSJ+KHa^pq_([n\+jn
%;]82C#G=1=TY)_HHodk3$D)W+S@i`!q/A<=;)nAj3-d6K\AQG3L6Hh:PFJd<S@g>A]K;XrDE)o_3-eL`H#krj;`K&D3-j7to&ao^
%Y&NsoE:U/No'UJf^>\//iT+;'jPAeU6fI+^iT+Ldah,I4LVh0F_o[\Nah,I4a+feel*58_P;e,X'2],pC^)8R=G=c;*DRXi:>R!d
%*X!tL*DRXq:>QFTDV$k<4:%Ii4.JEL3;IMQGu-Kr0K;(tXc/NXO-OW?q/e=d:b_]e/GW*nq(sMq32#?KU#]LPjM@PNh4WiTle</S
%1B`BZMT_-_r%M7c@kIK$jp&4ml$r3t_=Zuk'g&a8&km*HU-(E0]IBS&3hX,8TR8el]P]k-E'/DC4S`qYGqku%j2oKaPBY'2S$4uG
%]I9Aa)kO\\T"I(T]Fn#s*)GE*:Ym'ehDUt<3M*l6T"Gr4]ITSd3M*lFT"I.V]ITSd)kMF*T"I.VHu(ojG<G[t4F)-5q%,Z6F$09N
%Gk*aT>-<,@eid3>Gk,HkEf!\)hpsVfY'BO*Gk.Lmna:YmYjpf1n`5.ej2lr5ah-TT_o@lNa--bIP7PQp'A5D`51aKDfPpCqB_%j1
%o''QQTj[HU=RpH>ab+*F]4&g6A')>kae)YDC"&-iM#9].A0IdN9mg-_Hoe"7$DMo/TY)bIHodk3DER`64F'ddq/AHA;5h"bac#3$
%]Aq"5ef@Om'MmR+:L5uO]K)Rr.\=:5T"HPE]K)RrD*3)b4F(!jH#l)n=$1bL4F,h/nn*.;Y'BO*Gk*J3nnr^CZ16o2n`3(-jN[2T
%6h06^n`43?a]nLa\_tS6pNX7.ad_82V8)Kgm7cR%MC7kQ-P$OumuAb+)c,<2:[XQ0SieEm]K;]ICcqN44F'acq(OoklUW^9mVqaU
%E:W7,ntBafl!X(U@.NPano8'ZK4E$8@EF.1ah)!'T,4tPduW64pgk2<gGPMh<cGWU^Zfq7VRs7*DHC_e>IWj?eY_(YS*j<n\m)B&
%G."3Z[@2PoQ(%^!JFc54c6&t]d+-@67@Y>/=o3Iu5*R#?,u<3jettFaA[k3(+b)W+B-;#)L]N;6amD4u89;h9>S1`*Ie][f=0s47
%:Y)h8iiPj%:'`;#E$qJP94LnH@UHBa6DK+6-Oqf(p@6RuL-"9U=!],PAlkH*Iif]g8s^SjaIj\]6t%[qOWHbi2@e`k6OL!5VDk65
%,$Y.#40_IkOp>.(]tjJHZ()=eRP`/sd4`K['?6qB.il'hYk0`[*_I*_OPS:'BWX`QU09jRBpAH`rs0BC(D'5+J:jDGA;3PkdWMI\
%"FDn1.K$+T,$cNs9;S`CC%<KSbI*NQ&Z#mcIVA)D<'l_BKX/-WZVp,!Ye8T\fJ@9\U,VVMn:l!</;se]=;N'T1<oY3>aq%$aD8[X
%B<-`R"8]l*QQp[OiU2r-<%S?/F`>r+^m5]ZTdC/,Y6SBT)*$Vd(3-N^^P7bA+#s-t>ZBr>_i\d=hbL_/?-#I^J99oc.fli^hNSIS
%kt<?mR,/G*83o^(]#Y[W'8=7cGJ+k5.^=f<XpC&6)cD;([A^^K")OhC+lTgiX;*"MgpFBj`dW40r>kNLAu.Ucm4f<_],i\d#_]I8
%'p(:O-D#Vo5.o>'n*EMs%*dL]g(.pfKW;UX_8pF6p,-Ee/HbQq_g4\nD[H%?.>AA2R<>eYd1.Y]T>Wg"kKb>@N06Rc.adFA,'Hos
%5GL,Jn,eTr[-Re(W<9@Y;\J:.X7\k4i(ej39gJD`9$e4SVPOEL*PR\M)M.ucDtol-iX['Jn*%FT6bhoA2^-=Bb/e?tgT5cE6TMo;
%Q,?N70*,p`YSrXL.eEp$Ob?Yspq?4aP8J5UjMCANp`sl[ZssDn=ur!(k3A>,HWRP"@L.ueO[Q7,16C8a*XD$>O8`lJnO5N9_+M%4
%'mj%?UCH2kp[jX+3Ia8Eo9Yf(rh'`h-.n\BB&7dB/tdBTA&s@`c>6Y9*aOL5M8u3h]$X3O#ZKLXOE`a9IXoCK;[rkhOOpBn/Jd;O
%UEq%t#iHUY7QQbG%%*58>mo)5"G*<kk'-2bL^L;i6uV<V>E]fMOkEUU39%WiGL,aRist3qpEBBAht@#]5"(g`9]3?Y.>=A@pI>/Y
%iV[KbZL?F?.fG:W6>9O,#Du*ta1pYVBY>GQSl[\SK<_`NrY."rqqh9(.f8l-Ib.3]lpfS$:IN*bTFHpFeBC/VN^d.c_,V][j-=<1
%[[QI*4oTjoBW:^M04i$/_!ad<.BEruEj%W47YRHUhXLC4B][`WUtBESNPk=tM!AuR35m3+rB^[Lk:lVeVg[$C))R$Sl2&ilf"`tk
%hFH*+\jAToHD1q^^GBBR;&<\3j0u4;7ulhqiEN(\.CdGG$J\BFo]aoX>t9Z"[f!0gjT./"<8otLU&5rU#k?I&pR<DLf)'SH)ABH"
%b5c"70.ua6&X5Pt?7tL%R!duW1+I?$#lLI6`B%TB+%FAX#5sc[EFa'a$e^_R'Ll5Ocum95\,u8%j^\<aq8H6+-kD'6&;(+QkE^Dg
%.2(Tl0<*c[YRell93T&NX-&"%lrT;t)-$jiCjFGWl)0sr)M)OnZAsjMV`H)B`qCp_Yi4-nUim)$_A/_#jJe<V:-OcDOm#Tfd>j^1
%I+oS3,f0W$fTJ)UQO:5O>^"VVdl#mnV8j`!lH7_'QpT"RRsiIS"eukq;er%^,PqQL%R62r/hO/oNgW!g])T2).b1=ra[HgnMR8(;
%Xk"Ws6$]FZh-n_edGY2HbSh,t])Htc']1_^Z'!3U?#Bb)-"3BK![b-%=4%M#ccU?Cp[O=1HnrY\1Gpb=</#Yd<XYb@Q38?SRfc\-
%J6+nu2$kFBH#@>`aMj/a:.p1WUdD:Eks](KH+"9/&4A\U=#"D*bOLK]DjP8bV%:"f'cj"<n2&A-RNIh]-'t;\iMTaEoYP&\6'1^1
%boAIWR^VJ;Im4@(hm58dbP,7kL\R^Ur<642kke6j^QK"6:3*Y[)+ArS!:Q_7aruugOf`B%rk>"IhfHkn\Djf3LP.@AVh.`?_-=G<
%hQO9Crpkru[g,E7A5bI)b;IsL;sangEWL`gRmNIU>_r:B"*O(UK`gfqWoXn].qA[93Y0YXM^<LV_%6"X-(MYIM!Vc\L4k5qDsa"U
%ICXl18Q1=Z9#OWJ;:U,SE094RH;I]idJ@m#R;Anuk,8ZUD7RZXX6si8n<h-YY^JEm4j:RkPd90^_WL8?=^/&&LPb&s.76QrQXkh&
%jR-<aa90`8[`]iAlYP:oY$<MH:srA2ETY`<#i:(>';dD*.j5<(RKp,=@o\;:IC[-fO(Jd$0,GtID<7+IpsKZ_&iSO.*'uh7+1:T9
%4g/<,&='IO(TT&f[9D.I$__jS/JD'k[Q,&&Em8-!Y!Wi8/_;/id['3\'^:I.03?[(ZlRh$+oueH[_?!?3=aR^p>m4;XfcPNa-pr'
%Q]%)fd*Kms*3l]1B36tDMJAk0/1-H5fmYSn0'_:;W<6?8X7,&'0RFHcG"\Y^q-'/u2:l7cP.0S"2BOlH4@tVTEL7'&*W$sld]2KS
%UepZXU+X&Xa4=2I%]^rdWrq2m%90u&!!Z[2a/_f%JTN6e@$>TGF]+nD7Ui80'[RdFikcao)B2=IR<2+'ghSQ\A@RA6=JeDXftK0j
%E1XHr5s,EVlo!p%"O30qPWtpC-YSIb11QT;'US83m:6k$6,-44fi._d1SGYf[NR1d5pem5$o$I1bd1=KQmE]I\@&+]X-s*2JDB!-
%HOmn'_RsGp[^$!&p7B#I-PM0Af<]U+es,].UVJQ*VEuIEG48">"S!`?,#]c'\+ClkV0*'7XR6K287\#tSM0!*4nbCB@7>gKW(bpE
%YIPWNZf7hr+pf-HFT?Ib2^2J'E_[Y#Uhgn]J.$@C`QAQ"QB07'#muH'EB7c'Z\\ZaAjV=g\3'>98@21>`1b/FOJ(trl;RClUig0>
%QI]os`MP*[?tOlt\'ZN)85'Xt5&+KG@j[@kUh?`=*1Q^3Eh&QHWXPWX+S+)T6,4.9<b/[T13d=E!sD.9,F:iY47_H<0OI'c7Ntqd
%`2jU)Wcum^=06*JI;D1<:YsUoa"6(M/CT:e5:ce47M6I?%%q/6YY*cbMQ`ZYU"BKR'#bl'kZb><aNai8bshcR;Rjt*8L6rRLo';A
%?r@sRWfa%8)G"\LbmI+^fGq(NXf]a5NVl=eP!CoqX`CAm/6^D4L1ro*=dXOD;*p#YG.2P75-O>Iqm:>OpQ2*I>/$4k5SmnO1kA:&
%l(:Pq!Gr%$)F8$N_!]^T8ABtJ5$!-4MI%\_'sS<9m/\ekgc0Z3<L88I"puL]?k0`k6%g^LFjm_A<Xd>2X7.c=(20*sEXA/&""aNp
%4oj2D@:?aECn]oV'eKO(Nk,35c)aa7"FLWnk]p@W"pRHr'A^I^>XYfqZWfU;&m`\4DTo@@3\4(<4;-d@JC-fV)!_r0[`--`WC3Uc
%@dj1Li9uP(c(BNYZ3#u-VP)',.%K&IZu\aBdZr92^aKgX"gL%?X]BT=k"sW#DMaU0&\F@(DHY[3Fb/JFSfi27g$VaKH4_u'EY51b
%__DB^&EIXQaiYl-Tgtc\GH:_tfdDBL@KDF>i%_*`6+GX+jEQ2j(X*7l3&l4GM`%*-M+ZWs:<'@(o;`;E).d.*&L^WnO<(Xoe.M2U
%(KY*,%*Q],5=W#hH0&dK:5g_CnCds<>=Sb&:m2!9)E.`6mdL.1R)3Rf]@lKf#%$k-i6!pZjd!4\BQ6@c/W*mS5jAAY?F,qWRAC3A
%S\<(K(1QoN.7"R("(Nlt85c;R@(MF78nY/c]4:(tN"Sf:i^kliIVo9tAkJXb5^)r&:U^"sLHXVp%lphsbsHXq0NTr,YiM&\-FiW&
%WW+"3.#jm"EJQ_iM,\&qO:Qlt=h"lZn%lGZ:LL7"HLS^9r#>:Z[A4KaHEc=qQ9W0Yn\(0J&0=ChH@h,mJuT8`:9XVe*>4_PDi"@U
%3s5(1VXA"/Fr60fAM">lT!O;c="447=E:/VaBAGA9^Yb4=WM&V<WUT\HYDQ,&2ARY@u*n<)A$*mlt=T!N\Oh6g5C9?N5**i+r6gU
%)/Gn>@COEGRF\b[f%]U9.PJ.P"8uPORSC>W*@P0lRbq\]0/%<9h;Z!"Kg[L%=kZ]f7ac;a7CZ'RJ@5jS=a7S1NEWa6:tF>G#T!Wp
%cJu&O"DIka^iCGr"g[0XhM\EZHRM?B-#u'+1e9OrNo]qK\W?E*=]t2#c(+>]\1O+!^@[WMgG56Jl<<pf+#GjUs2!T$@Eb^L4lJ*r
%`>[9^R3PEXOPY]3KP^lF/aC@@%U-hMA=X(to8B-EAM1JGdh'_Mkkl9mReqstgI(7i^(Y`ENW\aX%u1iB$)71h`?\te^,<1UZZAh)
%!dB"@P,,l;geOj;8U!sF"Cj[:Jt:<u@S#S=]bD/tU)Dn4FdAne4:&XSPf[ZFDM`Xj:!P2hP<kh6dJkPBf,f(&"eMu^>V9Y,GUP?G
%_)4B,i/2XjNP/7VhsOfZ%!JK5F9(hP[*VC"g#:=.WW9`a4-;6A(g=gig5nWZUgT:e58_$O[;tu["<N"7r\<JRR)6%,88T^.IB]AK
%&;V^Ni';5=@Hu5&V76)g0_1[6IM%p:'FWIsS5h6M8bW=KS!+T[$>NYA;E[Z&S\n"&1Y#oI^#uc#Bp&`l*Y^T(,ld)@'juPW=tTBa
%On-;Xb.<[V5?7f.g"nP87*pGDEa"4I<_b9u;kOH)&;M_\IGni2WEWbcRn$a4`kR9.p0P=H$rNE8'F.aN3DF(>Qp'Cq"$8Za@psF,
%\IYMC:d$tQ@V'Q1;0JdIKu(.'mA1`l-L_DA>"]3m-\I6JT65c>fnrZXO>fd8$nate8tBLcK@$3h]ZK7==AcLP*##^I!+ZI475HkI
%'d5H8r<-C03[j8K[-nmb!_nQdoq=(u$9fBArhei+oaKcdC*f(L=RhiL1<>ii,&]<jGoRqtRJJN_NBM4fQY=Lk,Y]a?7cFn\3X;_+
%-Jo2AYl.B0^n2;mQ'R\WIt`=ljZZXY'<DDkm=>[hAUY)6HN\VqY[\]ZE=H'<_Z(cT\')&V-W2)"0P%*\#pskPXdfaFilj3H`EfD,
%!hkV7^9=G>U(5_1OStV#_k>3"\tE/em8!SVhLufSAdR=mr8?#U+Zd\c*E^?6)?jZg6!qrEVfr'<.G5*;R`nY>.K1`c%)aojF:,-U
%bg)Zc<20pO?XLIM3MY)?W)b/q)!>-u?>8)/,p.lY"IA&Rnb^<"LE`)O\%d=\3PPBs^]*MbT*4B[cZFFCLZHeCJ'L.(oo9@mpt^/T
%lQ&s>n%PQ%mhk$F;uQO(5Q:+9qobU]oul6@o;dB=h5A$`k-r,$mpH%:QiHf`ro'>rqQ&NQjr]*Gl)UHTqVsg=k-tAb8=oL[5QAuH
%5(3HJJ,RpL?[_l[^\[>!"I?h&oUC@+h/<a,?Jk_7?iKnk+7pT2]`67FIf7M9g@6e]k_Fh\^\DjLLW;aZci5Hoo8)80*ohG)>8%6(
%*o,NZF,1;h?]1;50o2\&:/3)-;$'+s:=ToX*@4"9^ld"kj%COAan1c*_[eWM$2uG.`An%%U`<P$\K)m)4!MiXYOljL+k]FTlR%K+
%R%O_D(r)OU9>j9&Um\iN1*TmOW`?Wi;be+1r6CO";]5DiBk"iiMuGPBFFXnj9A.Ag:?*B%oO$jql8iT,lA4.3a7uCu-7M5E#n3f@
%A$Y`5"r6VkXBE9Gk_-/En^a*c?J7hG"e*Z)\%Ig*]=*^C8f'ID*$Q_L%Z10?MN;2YpQ^l:__.[?oI<=B13d0I\kgSj]/!j/`,N`I
%.blgY=OLgWU44OlOodJd9+t0ojnR82aQd9cQ6c$U@sq*@LdVqg3/8(<*qX?I*d-io2:_AR.O$uWc5goAiuJf6Sj&,<0^,GOFBk4Q
%P&'TakW0<R>c)>.kh"3FTC_o\Xrk>5qY(j:1C.4\bs6^IV44DJ=G/n@KKiRls7It\YCCKXe_tTJn]u[_RpRiCHC,<?h<BZA5,7h*
%h\*Q82GW>f8tj]lX]-)XA<+X1'[-A=Mnn`m/&bbm.id8PM3UDp;fm)JPq'm4316$eOY6QB<pI=sXV=4.;@n\MJnS@;aJ4/49iA4U
%fgV];MB]N-+dnVTmnC8kXjm/'C8ENnT%LE%p;c5#a%!=32A1ieVKp^'clcC?A`K7^b`l.#-QsY"_]cA.P'blAQW=I0&6^O&$>G]k
%6#*<NXUO#X*V(h/PbaX_5"."`3tI03F]'`4>ZoTL5t!5WOV')Ih)_X%B%iST7Q!>UAoPQB<f4$B@ASuW]36Z`;R'+Nl!0Fn`CdCl
%5aW`..tqR;Zr.GU<XM!2BVk4j@\qHGNE43Z0se,oGoR8AKNP4%AVt)G?AZsa393,3[*<'VCgNaaonW;ooC,NST_Er_q`j<Cs5JA)
%mG>sG>p&"s:8Snk^V(JLnEsrhbl?ZeJ,c^4iHn:L]K.7qh1&P!rnEV7lan"jrPs-^q7hT,s6rPE+9*6)W#$h\qrap(3CSAA)<s"Q
%:nMfXqOH$`rNjscS=De'h"3V)VRN.bhL&f/SFb0AS<cA%XE=K<oT.lAD#MbB9%Wj];gA'JZ'R\n?N(L_q*XN1m0;Z$o('C+'o6nQ
%?m:PWq#FA:+Fs"$LM%,&mjJq9i"6a$s5aYo>3hml&]GJ>%=JrU&of(WU-'fG-A'IpClas:U;/4JJ8SfkLdc#UB+*l_.GEc*\caF[
%piKqWoe)+%I@r":e##[G7[+P"74Cjb6c9V).`ikPa[LfOU6Gg)jU8+oW+PREOAbnWQR?D@S9eLtQ:J$C^0_t!`1&<[A":o8W/H53
%!=_V9mHe6lg`+Q7TeA0T_SX8!G]Z9Q2qBn5KWdOpOK^?`X%<[J)Q8FB>-sX2UIn2DLPX:2!):e+$NWB8<>7(2SnNQclIJhaPCh#'
%>\?C:i4D8cfQ0nlN.$Qs_`l/.ldjdHA9dkcdYVCp:plE!ee5EI]cnk.cX1C2!g)seAOU(k"?]Z7(E&V[/h3?Lb94S5U#O@?&/%5n
%V48?r#RX4!^CZq\InFj@1+FP<Y#1b1(]*?5$rf;jLXY^31S/_-o(uTBf(ttE9DmqTB$9!hF^&atWSP)[^4&_Bi3%gP=1GBm\G<"f
%j/MM5\HEr0U?T2YNOk.HG@0*EpO.H+5NAod6fi4O4<4n*!;a#,OBM7--0d;@J(Y(+p++A)`t,@9J>e/ZYp@.Bq-*.?-k^*#pPVAM
%&:2^R*)[PjXc;%FiJ5eR+d"?"(_m*uMA&)5"Au"T%TW``aD[2Yj"ZBj3%cJQ<CISTO&CQmWMjN1!)h<Y;^mS76I`XGDJLEs;HP7$
%cIdbK*"g=H%'G?F3D]^>07,l:,'S=0o0RP6@uH-@rW-RNABp6e6;t9=JP@(\:o9&rh;aNuF1!+]UVR46X#$4KVp;5QB.J_\Q3ur4
%;hQ2UEhg_`9'!i_B%E3Mr?<_Aa4E\S@@%jP]Ng7`qFmmr,P+ICMC%oZCQ\-UTpJ=k@Ss1NbX5h%Lc+;*s+A(,?C8Mn87R.CDZ:lI
%p*Xf7+C\Oo50;#2MQl@/'N+03La_J=TXl4rn\pC1Up'5'9C+H:*_'Q%5XeQBj2)5'C8rpUHe_Db:(Ib!OsmV1ij17D2h)V5rk?YW
%KfY,0];s;);S/pVZ3B,cC,rf\;err<VIF$[]W^&!qmLN<SD]]Z9A\j7JkKY8QAT1Rhl,VAotNr?A`ph/kd^N(WoNNZatESj9m(s<
%pZL#>?[En5/X.r$iJ/8JmebYtdu+a?p3i%e-)*rMB=EjbP,!cY=N==Tpal0+b;K[WM._Alfe+TYrErVjY$0N[."%-C;Ai>s(O-Il
%$$Nq"M/M,qRQ7Uq1:r<=!r<6lBdD7!:d_]rPNW@M;2deU\[\Sr#U)JK-/\GA>8##<1bgSEMrB&HOO%"TD'*%$Nm#dK&g^nGQUa_(
%bD[O<KG[fS#8;dV5*$;2lT\"%a40=E+(A/-Z%:L-AImk$Ai>(r]j$/-Lpc!G0@I^hhNHWX5%Ik!Y#S,!U3h>/&i[2@O@Ln"6/X<B
%;R.1+GhB@WXriN(#7LA4NFNkL$E-c#GFF(l=bhE6!m5o?iu>PrZ[7V1r`T;U$Okk#-unj?,cDPF'<AS+8+r2rCa=n/+B9kDYhq":
%)f!"q5[n`<Er]$#R\e)s-0LYf;OnePqIPD)9]6@:]^5H--HZhihmqpb;J"PRmjbZ6S*m8^CqM\A>&M'TdMh>`V:;g4hc+CEnS]kb
%m.Y^(>IOH6at<Mh:%aems%Nj'WM6l#\,['-.Cj9ipXEG'C%i;^$@#q.YP\8(:]((rQ#29-Bj\=@ck?2e8s:f*(4,N0`I<l$8WgO>
%;T1-Qka5Xa<A:q^C`nK&dAKBHM^hJ#We.upjVL-Poe)mYYR4U"3GlD?I!1`F69p@oGdch2"GET_biQ]2@PC77NX?@['W=Q`c&e(i
%.ajpM_D7mE":eK(ZsQobk^dE5#8:gO]J+Ce>TP33bA2&I6mIuDc3r%m<q%b#!XS:X5(+:uTY</l90T5(MkM3p&*jc??d*+Q"8;&0
%FV<A9'VM>2jEN=]V=7e-O\lqfhCSo53D$`#b$8frHGsja9r.TA_CDP*K`DPce"p4TD1`O=&/X(2quC2/'!NK:]'"^N4X@61:=D*i
%9T*9!ic=;Y7W/1k25O>fAiVTM73G#V0U`HnTg\`RRS/P60M0Ae3-^R?oIH6q;NuRC)kr#!4UseF4dgO4K]U7L[_b\Z*r7Iq.>#%d
%]55/AOY:hI](rZ=hY1jc0D/M/0/kam%-_'RQ6>[&m?YBQlF-tjDecetoks')U-3F0\V0><l8e:HYN_4L\?"qIY^M_DCF\L!qMlkH
%>N6HcE)Yr='tC17E!:.FrIZI/+$G1b]]LQBMT2AT@Dp_8*<?q@cS%JpFp-A\2=X=D[YR.?ZO*d'],tL,=OUHHTgP?L8ud"$XD$aO
%X2$Jq:m$9-%jl5*jO@V&WX5sV6BV&7ME]0+EK5.O%f$^6a=(ekU/<5=#],\GU`h<p[$9iuigG]MM?n2_'pZ92dO%@**CuVML%@T6
%\@f^L_=CU6D0@)09(Fq?rlC9H(3gjuJFoM*ZnS.,#1DMV7ic5n')>]h4aMX^A*D#X+]k'YlRjT!GQcmh,4lGl?16TI<2G0sapqp/
%[k2''j`ZG:>1)$jn[K/+eRj\l,(VS?D5sL=@an7E0fod"FTb;1F>1poinEZ$KP^HQ]o]WhkOFPH&<PpcAcY4?Ef?r5KS68f6]VUp
%W`I#]r[8Y:`WkLlIG2<o$R>B[Il#"N=]Y#I"Da&LXPL08bR!GgMYp)RL]3Ch*5NTt*eetg?YJN>%7hn\;8:utGh-U5#i=$GE<GWD
%[[[kHlF,Jq;nFUsI7q<YB6RFpEVF;jQ]q>Q/]Z]Aoj#?MG;WY+R;^MrnH%LBm/f_hVsfd0\>f"]n@G[liWIudq?JAj4ZNOY=9/C'
%a:bHeI&JGR-p?csX7c;+.kcEp*mIJTj;#F1nD:)N1M5*:fS4O>0'Lq)5s\gg<*B)qbC*#!LA<7i`l5i(rg%=p,u2nd)674ljms&J
%?CmTroSs:m4'"_%Q[hIjG5/\@X<D)I@Z_j>'s3(UMM*,d&\Cuh*$1cuXd_-T]4T33f[#,;>aK[0-tp+FdWlkf9/2jpYE&\AjJ8F.
%'\F'F*<QW^+mh:<fPqnpJM1X,UBgYCZQ:/;ZBbff(>5DqMiBSH%hUjp-Rk@-9%!LJ6qKVK9\(@RPsl1pM:;t?lrJI<=Ab>ReH+e.
%@5qICe"#j'UPtjF;Lii0%/eh$0_>SUnD?eq-HDN,(Cmg#kf5W^(U++mSFKY@&2@;\(8B0$>!N8UUA?p6*U(o)5YaQmCR-8n=?;e"
%^KY1GZ,]-q-ukhF"SpVYQZ!K'Ys5$B8VdT5da+n?Tp&PB?k(XaJFE"1?Knl7pMO`SS>Yf?[VX!nZs.F]X5=hh^8^(CKY+5DiWn8h
%E]MG&eT9Mo?dlt+\>eeGR!b++9;:QCqC[64?&b20_Hi_!1tYO)(F\]W]moMSnrkGOdXET6)c8,L'nVd]KgH4#pXcA<r8PUE:V]Mk
%@rndj(_f`.19QfsY.HEkP;B@g5Br.4[r03pNm>,:7U(nu\$"s<"ZkE7][6FE&G7Y"jWgUSa(S^n$5'J!cF'gp[>rPrXm+au3n(YY
%dlKP=qKrq9+ru^aS7c,'9"$F9Hj#&mXO!RIcEal5`Q>o?8BS60`j-YT@gi0A/0s7Xc]^@@/0pS+E:=^Re4J*6YVm*<Rb<59@s!1m
%^<ZQ);u+r\&`m*?EUXftnW/Vam;p+ZTCWnXZ]F)m.OhiQDJh<IPqoD<0rq'*X/@\QUGJt63-^D-X.I>3:<op6G>#rV50"d+X4jc#
%:6g8S$3uX^UgK=.PakZhoD#DI(EYmm:4J<8n3Wlb`HOtQoe^eiX!L)[=0L`RS!pIql'o790#1c[(9ZRYr>#q%VM:!2E)Xfbm_hgO
%(C/kMHELDF[qN>Q#4Lig+q!aP]7duflFW^/mqM^;mU)Q/s1t!3m$ff#HpIR"DZ7h-0)<JAf:0Np&(9V?+WdRUTkI,nCeQ!Qn7L0(
%)cN]EKDuaI-\O)k,fmp,4J?G9S*2u.Gd-G,Z\4>HN?o9u,numr'G(1MFH00SN_hQm:c+2/FH00[pj^[/6I?W:d253jK,?u>G[_4f
%PTOEP![K;o+FAM@!/2M:N"`#0%^H,SBu&@e3pa'\`XYTGs0"C@W$jSQ)%gO=is*&-L4fN8V+o#]bX`e)V`?9e8%4-N(R5eY>Zd4,
%"@Wl.cnZ!G$PHfNq0ug6.ju5b-ork,D#Rdb:68i7PnW4cp^;W]$6t?2M2\)ePS"%\0S7XR]LiI6+8imHHm$(XnputpJbH^l63pEc
%*/%:U%C@cV%rJ0<]F]dLs6!:L+uoSA"d4.YTo[gm+.7ZOrS.@Y:+HqAVH3"3lBYaLFSN"NbM>+">6E@KZs2I.GP,/WI!7GQUA6`j
%>UgoQdW,Y!gspI3:qfBI28Sl">o3.k?#<Xc_+f?ErVs%?$SqIRc9F8gp!Ee20dS1C@q/mO*<?^rJX+#_O$M[QLK=sNEt1OloY9C%
%TjV]1Ci#fQR$B7fN%Mt_s)"C1KI_^n"m!bCmTcGnUmpRQTlABYU,.L`$]QSLN%#I2.239g?Z;T50V2*[Skr7T:iN"&f^ur:/>8^f
%U#7IFIu`G<U#U^?CJg+R>mRrtE.mTV)>Fl*cnS?V$7J9_7MP"$(d^:O3!U9f-uSlg2L\I\IS_jV&6aPj5A5tPe,N[-Q<LMUGRS!c
%*MTP"+;\b!6F]<67As%m6.CQ2$n64Lk\;Ud0FVLs+]PA`+J/mLnXTTFPo"OIfT[1_?`:TOY_)(h'+l4rZ@_Qk_?tmO-kc5hS,S2Q
%@@F4mapEsJ$/.%%hN>bJNY,AS+H2tA@1H')Go$4cT/)rYfE("7kp/IYiaqR+'-Mb]hZ#p5PmMS3U%JD.;l+%1^8oa%:qidWEpl`A
%(/3LheJ:RQ:$%]$q^qK\XnNQ8!Z&7E>`b.f;KC%H]KseRj1hYYMB9:,lB:_LVsL_Vhc0?*D8/5Nqs3s3mW<FWoL9,qP]]7mp4dYf
%M\!#brT[pHGgQJJ0o"&`6l8;5(dlm=9G8mLK@PVR(Q:##k.7A2`9)H@TZ!>XI%de/J&0f)q_DXh"_.oDB+'EGrYM(T'T=OVS1>;4
%.hnL('FstHE2HGcVGM6/d!cU;$LJ'&\OCd1H5Z3$P/=JjB;eVq9#i?b"B[ek'E5bNKP\Tcq&;sT*q[56*2-m_TkK*%oE5tjck_Un
%ro[1DVeAsf6l86p16j"n'&E/5+(W746=[tk8GGJ>q*F"J/,_+0AHtNEPo\r7J=N1Zs,qDTNXMn.KDZ[<+YZ2j#!j`_+;C?FqTEat
%P/R4^VZ4W7]HBb1(DN)MjDRNIOjse[qHm-$d(X<WfB5_GN;4pQaap4*S04B>(M\3NoA<C4kG9LU)="(ObGj`t2Trg];kN16],Ig1
%k?Bu!48qsVf$]"koNJ^#]:(<5r[lt*ilfZpDV=O:Uu.WVH&ICb3:NN".n\`cQ:l\mSt6>^p9(8WD"mmB]5PkeB#iT4V?Yt-.2I%"
%j*%%VRYO%UGdZ?DB,lSWrKiKgKEdg\&W4^C>5kUDKVEO@b,2O#ftnG%CW_QleJLVa)L5p56c_Y;,oj#aT^tM3#=1b,:mf65U<&5S
%9Oe<)$?ctK_@@3@:fW`#7$4eT&=aAN&>_rk>KLnF+%<_+QY4U`$o09=8shn&!Y"NH1M@:6MfB%VaMnpS^[ctmi"N`CNcE:)L?jg6
%'TEhAS/#"^'spF.@/mbOV(&F1&M[%BMhZ;)MN_FMI7tME`>Cm4)*q4-@0@<V"GqnNkP_Q2+GB9<jKn"OOZd@W7:cSg$W4:$C`rbt
%?O/KmG#_;r!l7Wn$NuT2JRBk"`;/\1rulN`9VA+R+>Ah?$"WKoZ;Grc"P1([*fs_gN:lcf3JRMEl4h(f2\o4H(=87??M8g^qt]+/
%r[YBWrmO$L(-?hD[3Ym%=1RG\]BZNGkF2f2^pfd_Xqg\K._0^T\>eW=Xl6FWCSAS6WrBu(DcV&+j1Ih:"WM\bi>!q`;rtt3\>Ss#
%^:gN>&!"G(\\I5OL0R7RMWdKe&'HioiWqs=q_(.GFp+%Pd-&7E9?%T2K4SHt"_.l3W[sk%/>9^JD+qPqeV&CRjMo,Q*2,-H5r4KF
%A>5-*7MLU(^2=cTLa"O+Q:Ml[&/k?U;W.jXWn3)?/eVTn-pNM3AcFJaAO<\T:ub1!_YG=s%_=cA12`1FWE,1qZ1j#*0Q,5Y-s#J&
%G1%"8:bcRDNB5>dapbT?dIY!?Jthgfd'$`#6!8J!LT#.bhj1!K7Fp0:`X6``G?.O`+q3e!.46N^7Zh\BMK+6REe<M!)uG\=6nNR0
%1nQoOM"3S'0.J&W?b"=3n:CKVIj*0(@0=n,OUVFTTkpBrC`lcP;meOW+&36e"j4sk_I5`>KD&n&)l8<5@*'@!!ni8US>W`dB@/I+
%Vc;gbp:to<d<IoP)L6H-ekn&JD[bQh<\&"TSmI<sE*'C-I!AT!jlW&dD5$/tqCUp?],Ij&p[7:USE0-R3BAPDf5n&RGZ3)+q!u\@
%/l'3OZs<Z`p[h`H#<+MHnm-H^?CZPX>6!La4;Im#WgY1Q:s0]3rhgMuYOhnM$j^u<IsC&YA7HUp20JV"1lbE$`XrQt&OK]KEeKf\
%)-R0l=`$jL0_*Ym0nbE=KM"0)bqOm6M0(CPIaEA6nq36ar1G`s+2kou?(GEj+A*NS)TE7"d1DGEK.'Xk+6$A=%AG[P$PDJ)mH<]Q
%%D"Z@<+_3uGq>%^NkIUYJBA;Sj2>D4_@*XMKo&W4O:=:s"3M"Wq9];XZ%@S5K$\@.=[?1n6&2CUp>;11?3Q96Z]E68E`%$U:i[0W
%bEFA"-uD/114ledJs%pAb%C[YTP.6UZ&jA,F<L5=m(]30TRC7mc3>a'ql_sqW#->L3#AMA(C13.PRE^7q_'j?!bGpEiNStK+F?&Q
%NQ/jY0U+Om+`$<kl/u2kN;Y3U8O>8\=?s])5YjFdnH0]0!I\>Jhj8Yki4YVK/I/;f\h2\,/a\j.n*7AOW,HF\i8AM<\<c3fWTA/l
%^T6O:"R^':Q6Nu>lX,&8Ao3l&c("?2r.)Bt0,]JU3\P3ORp%I1gq.l^o`XDU=hs\VPu[i_+,'ZlZ.oni!o3:C^\I<@&[3<HrFfZ-
%X<C`u?<GSoP'(Q-'tkbn5<AC)Db&B[$!6bBAE@LTA^+8:Ne"s8Oe!:lX4=?uU#=2:b0e-]==Z-6)6`U3AAq`7"`Hh1N[BLs)j(kN
%6l*EIg%coEB(^O^DaS,7Sd^i)<343A[imhf$;r)R'dEs/'/CSQ*!rJcLc>.U>EEuC5rQC7f[(CELZE,X36kQ98dm1E%!#3$@aK#'
%`VO+;$h?bu_.c3dIOmmb"W^;G6abLFekp80`B9S+#&?B109""%5t;U+R%4e!NQ5LJ6BF&GMo>ug7h`emS.9(Ha's6ROLJ707L(uC
%(rkfN+E(&!FqT-9*CG<K[H1N]Q=Dh6cg#at!E>]+gBDhqd>HnpV:0aX\uF4`:ZnT]bM>*7>D(B`F^$tY]@nh>^3f].%_tdJQi6r]
%Nb]BHRp,g1QZ(Dqbn@]Ydfh@K=4\0`E)547!d7Z&"cI_'iu^2ZVb2L*mcC@!%M[KPT[(k%][S.[!(OaO_!M-\s2BcF:4NrgqU#F"
%H+U:u]rIg9$gZBk.XJ_2IPeNlhCPa2Q`R.1_TL7t9?BMs*L&U''m<o^<2!d'_Lf6(.n:8gi/PU22$s`B.'-OGYi(MXb0^>GGakpH
%D8Ln4#s04sBgS.6p*O2pKlS&&-lYb!RtMgB"K>7OZ;H:f7@4NGXFsK)qU#FbG_<6'%DmjD!uof6ljt13!6<ba9^+k)Vt'?PlL^b*
%%gt%&jIj#.77Icmk$T>n3Tt,X(p#S3_KeKCflJll'>S"8_=i"+3AK`2!Z7-MJugP+bYAPO[U?@"/a-jL(orjPX=79<:(";8?ElR@
%k\(#7Vc/2[He@$7lVVb_r$f%.@*'@>krc],a,:meKY[B>ZG<Yc>1l_2[9=)>\+EkIl.jd)\bi7ACOGuMFpgq1Y'pb<n#hC<;#dDQ
%j5uh70(Fk3HN(mMDq/sSo=RND"[mT:gD*P(;r>P)\?#-$d(QFM&!"G(28HL;*MNW+ngZueLXDq=E0Es]Mo=:2IsC&[GX%q:>6.4^
%*7h6-<V4RFh0N9omi9o>%X6=tL,J:`'tnNfnZH'P2ltM]>3B2/c3omq<30k;n?-3]BE]6cB3;F1@DR;F($ukS]Ot@"XT3ut$nL$d
%/9o4>r>aZKm!)ndL_>G9$M?0k:c?1PpBs%e$7>qN$Y?(@H+,IHG8q!T0%>(q^gXpn](HCLhAC'2YHUCTXT6Dp;G;@%fr7:j.S^`4
%h6HHY7MH3!An4:Qm1U7e&VYBY^lY*6A?EW?4NsQ8?l2WOnoeKi8OC$(?qa<-Z4::t3CV"MKZ39lTq`?1/5?b^ra;uk6-)*7`U3l&
%UD7/V:(Qnb@V=/n8!/l0.C7l=aa8Zn,X1PReHJ2ri-S)u^JJR>7GUpV4\sm5Bs":S;lMXeHqUU'hOBBS&@oEQ/bo=7at9Oe>O%2P
%mjkod05dc!!%Hg$jI5%QK::!_Iok#495mh[,lr0bfk'omWU:;/s&0*:Z;tJUaaUA0fT6N_Lc;P,5`C]YJa44P2@Fd-n7qjpr^?_K
%#T173=LTVdd@5r7lZErUM-)ugh*l6*euX4!oG1nI\(FRk;)oQ]Glt>318PNsCEOD*JQOon!X<Qb<ig^OnFg;0g4oiM+'+D^JAI_1
%'l+j+]Qr0",YB04%h',Fj<57)JW)^UN'-1'_i@T'[B=fa-;FY8*O<[n_]+C(UEe^d[UJ"GL(3S`2QUcJ+Z_XcNjHKfOG&eGL.kL8
%2WUF7=I;cR6c&Rf7N0^@@5O?D)EKn\L?t-JlN4Mm@3-Ei6[-CDg"[br$lp>h@s#;D2%,>ikX*uS/1.8&*?>/jEO(\6$B*HV6JClY
%2CAn"Ne"Ar<QI4YSaF05,fc:E;JQr3]M4bfi<qNUD#LF8oY"7T?`C>/Ui%Zg*2;l#Z^0%MVpKJU?'X!>oIZo*Sc>QjCDjiJMCmT^
%?.G73s-@\@h8+I'rPb+A<cH=L]LBdC13cU:'g$A-bpDb":XK?-HWS`>[f*,PJ#-2]Clek"PpcG$)^Vg<E(X5+J_V/E#C-19@bZt#
%N2RhX!Md+7lde6N>5POAmB*+l%r4\E]BIMWR^L@shE7kZIC5"uF>hhDem[`q`ZDG:@DQ0'Q(p'AnA\nU)M\K7**0.\=Ra==j_,&>
%]PUcU[UI#,L7OB7bb>!Z/?kh\TjkYXCDpe0^n@=XQB%YJSM"I_7:QdPb:jl[(^Xa_oqO8"n:kB-)MS^i!nOJ^fG9IA1#P#QM^^g1
%gP'L,[gP!Sjt)`MZnLdk(Xco(1n;])3Z8*TjD6"*s0_$"*fU1fF08?rZm+N;*K:)00W'r>$&d3!6ImJ77V<&KN<,e5#ohG@/:*L6
%HT.WB[>.%Ur>T/Oq1\(sr:MHu)?[RtV?joNEeJ6Q?g-S$#6642ql0Y2e8(mNh:$2FVg!8f!lK5i>OK5+h\q`nWSmo:];agoNUNa1
%9,R]3T&]89R]]'bDsI08?bT[t28/SsI2Cu&9oW4._+gI:O5QV\$T.UThENt&:Se'7>%s6MJ@UoIo#&]@&AiHF.fFor!EFCDnCes<
%B#;q;0R=hGDLKHtpCZ`F7kAs.Z$*LfMr$n(=nf#]?,VWpf^^Y(,p.e%lQK;h?<kJoZ6!JkH\dr^5@Esj@RWA7"n*R7XFjXE%V"P`
%%iDBt=L%j6_>B"Y%q5sArP25?it#_]%sdn'H[f-#jUW@6`St1Fc<Xrk%IY<LUQ1OhZ%nA=JAXI(FmC#*]H(+`c='p6NrFRhCb_eD
%+n$AY7G]uI6lN[6hU'!`]7pd^)Fj%l]V2)b@#3)HZ:85K3p+g30Jqr$q1[9X6UuXA0V'q/rPG<'$QIYM/6]fmZ24VmmhRg_>?J7M
%@J4;"84jC[^p5r:(@hj^f`:A1FS#gn;O\n5"m$*E9YSlpM`8F(_;A<.pn_"A[dTeoM`5TVZfSQ=;n(lNS(_][l<F*:&@oCkXp+[i
%l+!8LmqOlN^9?^'PjkQIJ+;WiF^87'2efms#k.#ij:cEG]O\kHlFaV.GI@Fd(O2qj=:qZe$W'Y0Gb,uY`gG&eEab=fGl7'R)=Z3F
%rFci]]pW!3An'/WM03S\(;6,<45/R\D^EuILR,C^/)G!`>D\WOl^g$J4"iE?OZ!g[g.8:bD$#@!&M)F%/9i,=@Vs&8[h1,\S&!rV
%`/6Da$f4:QS?9WIjW-Ml?;='[a[ehV6Hic.;*c?;*TP)L?:lBH#%GIhLtT#mE*sBSUJ9\9p0le2LCN\YeuaAQ(6,(`i$%L-(%UKq
%>NF&H7R)]\hE#I[BW]1,[LQem1*I0fUJ5,%:*$WX@!arsd3^PH-Ouut0iI#X38+K>D]1O8Bisl%@DeOg7;j)&N])I9>D<T&)&Bns
%R(\t#PK(K_0YTMB+j9:&&*S`2BG7nP2G"/d.UgDqnqBhFh1<$L%XP,+$Lk[,flF[8X4sp1hpQDQor`aZf_VJ"$Wc\mNbe=%Rp%G"
%qn%07]C0OH<\:t^lX,&8Ao3n$c("?2gk!'U0560Q3\S%KRp%IQh7J"5i"/"N&?JaWKg6$MF4gI'3^Y/c1.P`bi:4]8LVT>noqP`!
%[*E,d4,ZPr/Cpo/=S0mJm:_%e]rtQ2DHbmuX;jC4N*:>3hXdmZkClAVJnQtQ.C&+#()X-N=Kr'>_0_'1,,5knh#`4Q'J%a3/9j[i
%o1=m?Zl^0o_C.jp-q2ugbXR-!6(nu56NsG%MJPt+:,#"sFqYhG9roGm!f-L_lde^FG_`N+]u7?i*8L\:flKiS6c2!B\S,.oZ-a*!
%T_B&Qf6JICTmaj]W(a-Xj6.6qJe<j@2;"LYH#sE&`G%_[1QI\h1lcI)_)mG^lQ?tUK@mC<@_k-^NMB]co_r::qM.N.+(jsg1o545
%"3)+15igOnZR+7fki`elV)h%)&K#r;HA=Y_UUpS7I/.D>qs?=lnZ.`.r9?5UroJ(ukI^a7Z9S?AT=k'-^\R$$^\[X'oBq\>k+@+u
%cX6YKdoX<`LVN]I2uiN:J+4oTr\n0TIsgQ>s4@;KkHFNX5KA9QkhjY6WH_hj'JapV3p8$[VL?g#4uY'HgjRX@B^GVnPn9SIY+6.#
%i&s^V0#^Oh+WeTsCS<TsDq^+&^3m!#cm7+FCkeSrmog1>/_mZO&mDn_3<]2*cZ[[+pcY%*mBpW$UVAt9aWLQL++Efg^NtYshsif-
%j\P)r/5Pd(s(^@sar7\L</!1Kp1K$krr)]BfDif&/q6LMT@`JheXrY(`g?_JYK!2W]7'<i:X>AgnFM/0p]jTk^]&)fm"9r"NSeo4
%gCE(DN(?G_bI*?3E8Ka$/-jF\MYcZsJII/ZcoS8@lj+bHctj2$X'\(P8ql*:/k42ULCl*)FHl^?i$M8H3=WBHq%T6h<,4[n[!tLo
%^1/Tf[=8f.VYt::*[+,OR+?1H3-?"kJSGiPe[!_/\0^A_JAs71Ng/D>da`.Ko4P8)#WfGD`#Y[ha!AO<)1S1HOMK`62RgW[UaS5l
%]*p)F4%`HnXObj8+;&k*T!sn/cmmtr6@?.cCLM$4BpQqr*J)I_I%tsY`P\-P0[\aVr?bQJ7"(G&N3Jf?oj3K\(?"-tO$=?+NWU$4
%q)J3eR>>H<-;^Hk>,6PaTpmm2UILVThk\TKq4=2'n#-?3F\$>"*_'Z@e2dZZ#8\Bt*K)$>#fsPaT`jF&QonX[G+b7dMq8[GK3T(^
%?'c:SQH\1L=FTmEj:H(lPTGb'(OXoFk\c2/HhCG]03gSoCVp"XU%jp.HQ(R='C]J&SgX-kUgo>KG/gYJLf!.CKSpu=R6+YjLE^Dr
%/;/E7!r&cYgM=p^ZpSRXaj#eJ44Dq#e*;t`UW<3fqs(KDRt(*6Dls*7=`:DCoiZ48!ca0:XoifiDQO%uS_REWlKR).%@>.-*iZ^a
%nsp`k4LX2@s*sl,I*#_LeC%hZ#dqUl7mbg^#QQ;8\JY:N0?5Y8Dl*b-B!@i99_%5q,W==N^D:N!!_gjS*q<Pb;-HLWWbA[E=17n)
%(=Z'FSYBR<@Iu:XZ%;fP!FLWiE#^9dcPf\P'8g9SbaGJ]PWq_3RTd4D,sm3ZQpj_3cCe`bQQDTLhEO1H54r5kg<15MA"u:/a=\P;
%7+_X7KD6LrX:LKc(ec;%pJi^c8.1nVOnLYi_K_B2?=JMEn>@PT&qt4$k-6%k>X``lEe&.H?MMBp3b)-eKJKldUQHI.7hU4S8]IQn
%`1gFm1tfK?Ve(#Z^eAN(01B,YZ_4u&#+``:YC@$B)]QIB^B`Xuiq>)6-A@Mf]RA2s%bEnFF?TV^aq??!"Dg@XJk.BoO\Y=02rB_Y
%a&-7l=RF_?YMR>i?e6'$q56>P#8%;uKn9q$9B/E$W-Cskr&)fOE3)>(07[Y7N;@QRn5&B9&C>:bdt;:C8/!]K.<,Nr0g$ZFCQs<0
%OV7F3]B/+IY5h4GU[SNA*$Rc;"Z>8)mj^/JakKs;5\mf.^qqMZ\Vob_IG!IS/sehF*T'u(.eo"=!Q%0$"'@]Ulb<!8$@l8"?'ENc
%<3]>fed00B!:.*hEgUN'LGnrur-3itds*P1=D!oWfWlEkWWr799-sVR*U6i=?U$h`fhoNcpB0!mJ,Zd8++O%X?iT8X?fL)2kpjIs
%XV9Sq=9:*?9q`i/>r$C=HAGo,TT$'J/c>,^m/gma<Pa!flK0:a;7*c]7Ta;?'^MU61<6$\N+`;O)Y%OnX)lj3Db#Eu6Y<c<]Vrp:
%&a(P`5A?O<OG'-R]%f:Lb,ea0i'>:o!P1O.Z,`Z[0*!d&r3d\se1ppNDi^sti:$Nsf;H2Eooks7#a,-W?PUpdiR"4tAVcM.#;N%i
%?(=P"'.X^C$%P>Q`6*m\;;E7%!d$=>%kWKL3WM,X&0]FtQXrl3Cg\,;oF2NmX5p0/33bosi']2-=\i!SR'LkaaA*@F/-,F(?8\R>
%emu(#-]gYkbFtTb@e1/f>dO8(]&,H9b<N$^^3'XiD<$CMQ!,5Zb-#C9TI.&ubj'm+\B[.'2hG2u4:)%r_5gDm!Lr[NZ(+h\5'P8m
%&KDrB-YdLnS`<s$[++0XgQo6^;[K98A!YIdS-Z+2)QH49:n9Eh9Pr$`m.!1.%L"iGWT-!O<EErmPj<RCdiWcr^KWdKfQY$WNZ[8K
%M&Q>H7nK"4LTq2*(>%E!%j;[Rb%PQQ6f+LKjC+<1ZSnMAV2Y[p[FCkVq$F(sf8n?P&f^i'+M?LPnR9[fQ9B`K/1(f3he=2diSq[^
%XjrqoF_7O"N1c-CP[oUo1Yd[`N;E,sL4Z]e,A;7>r@Ln]6WOC04E93rm,YC(BpiI%Jo#[^Vh9nWMLmfEHE0Zme85<F-@=LQ%5U@g
%418=l&VRa3>n38CQ0oLb>_aVOEVOsA_;P6%DbHS+764=8ZGl^X7__a5Xn+,@UX,D#QDe1"R&$0.eI^[/i,Fl+J$;>rC3\U_j'E;[
%K(l!d:"J+t`6Wmo)7KqJ2X/rVR]HUJP;R?H\4!.B6(?ktl.`&%F]:A->S,R@N$MqAA7Ec<M"bKaQH/)RjO(TR*rS.FIN3ZUV),8i
%W()]/@CmXXYt]Y'KQ-cf7#+9N2<hDs$--P'>;cs_/kPIOXW"<PBM&]Z2l3<IPbSR9,;gp+KXqFKhkIZENb@A16:YeOWCs]J/iM@o
%Tk"p._cT.D6[O7WJi9#XIaB;l(^0RZdfDBB]AuC;IJI_/P7N?`#2-+>8d9:2qG3s'!#Lj=.aSPQ=^iIJ,1f)edZ.#bn:BZaCa'lI
%q[("kM<cDDL'e;fEM6L]?T0i:<@UdfR5<-mQiEkB7ZiqC_BU50JU8QjR0AY\a[m(/XL%G#$4h=$.S*I_Tu0+WFKG(@Rp,H)O(egT
%Z0Hm1'H$^_[gGYg:`^jV,2Tr5Ut.'f$c+._-ibbI_!((PU;1kmAXbJ(itC11hjl)6W(u8FT5D:.Ph=s!Z`pQQ9DVPV'5RlGh$.#S
%.`F(NXm/SaKm/7_*1RS_[gBZK'c_WJ7eA6ffMRPuX44tYmFCGeq%)0Hm:I1RH"[p8OrlLj7&<jsY#`ZgcD%49D[tb0]au0eKYl@#
%S>u)-bL-3+).&gm8se%lYYj)q6mDEsb(frt,01,6Of94D-'P5pD:*M:_A;LYk&'\^YD"rGVXa.$YGG'P,%oj*]i=jmnSK@<@\&1Y
%XnBUt&C/uY>8LXp[R2t7Vin+TUYpMGs8"lA:VZ_p83!QgA!m'_a:c__F<!&]!q^uS4Q@1sO0l\$GbiC;glM)[SO19N_ISMQRNu$4
%H4a')EfgsE`)od]b#)KY<2lpQ5N2tnTIQ?XQ@M]W&nMSO&Z&Fu5:jl?+"sunI>FH<FNNTW3(6b0+_E;s94*7\Tr?"d"Rr6E-'1MU
%2YKNI4sOse:iC+P"PG0jg_`fnWo48a!DmFpa(5PGBW_^_#uh-l6t]EAV6p1up^0G$Sa^;(5=R8#GKqJ-`K.lRmLl%c'bYtk4rdff
%=:Kuh"gZ`Vep/0QH:egNnsI=Jg2-Dc&:Agu42sqm7FRI@FdBq('(%oISP`:JSph8^.PB4_b#PH0SmQ+rs79mNgFAdm(.0^mV!(H*
%-730JrN<6CTe81AK^GqifYP5''Vr6Y%I#pf`"u%q`o_i7=q.=oC`T6C#%gMNrn0'+[(I3s)=&A+l[t3624g-Hp1hc+8imR>Q&atL
%KVb3)Yg,$23`TM^;<'9$-s8ksl5r&%,fX40mbX2TlFS009D[c6]0lWQkUoGH*hC4t<"n`<?9?`s/Hskt*6F;8-CU,f%2dAnUi9M'
%J2pTe@F3^LZlsG5I9?n@!<q"1qaGVP<&h0.*-kS3Xk(:XN+oM"]+`&nQ;JjhM_L^)Yn/hWO;_jnd3.KPOXB@-XVEMp]1JJk'9fO<
%];3iKr2^8U;EZeS<9XW:Z(O#(Ub&U9deP-7I*JtaLIk0mG<:Pq&L50(ZtQX44@",2C6&D]W8nQb=M]B%49,WY&7%ueQKf0H^"%Bp
%f6KLGX\Un/iYp.PbOFP?*_V:UB#UaV-2(ZeVm8J<Er9><.AB87A_dD"@^XPCZj,WJXW2*Frh[cMII$j5!7($Ij0D$3T=]$^N,0$%
%,aN!d;1RbD86P&N5h`"^hg31_RK9)kfB*E6`-<(;MQ";j`ru"D%SW"^'-"rsbWc8FD@Kb0i>lDId7P0[g[TuRX3Sg[LE'9'R2RJV
%gVs$S28Lpenbkc@GR>5dm`-9:[IZ5n\pf64?S7!ANb2+;ZAq:#c.(^3nSnld>eAlsL268Qo^WqbII"53C&#GkReRujSWLY*1]J_W
%WF+h<J3_\A,?.Be3MJ2^$:=cGff%=\LnUh[8JqsV-;TY`((a-)'He=)DCli7VlnVp_CPf!MA<r_fAVsC\4CW:Eg?GSK*Zu)#1"k4
%9gB*]0\l!i0IYQ[98BDLNrNBqc3ul^np(ZZ]spgG_55^]OGC@Tb(nm'l9\ukKHEa77CWK,Oer7RI_tN:33$F*-!#5mI(l42fV)*E
%^>RmnD9:(%=MLB+OqOKlUE%\rOe2#f@7*:'@941n#<C`cDEXfTRj41Rjfk+MO8oHJ#+7?Y;tGrgQ&II68fU9XS+5]m0?!F\9ae!X
%dEZ[#\jZ=L5e\k[!i8!(LVCFRn&bFaa_!9??U8sT%-b&R8a+Ich(&3+T-+;k7E,M%b9p)A0>?E&G_H^H+Dr-uUok_AbA%43b%2#>
%b>.5rGtV]/,/?6!$&I\3IU=:5-#9rGVEiR<'[it2O@L#t@?j)'Y4>"L.->lu-OR#tV&pbT6t(nMfoI7T$jhYpSn2YS!?%b$2$GB/
%,j($k*kX/=fgo+XS6X+rpU&"tG@>H2H(mjNH_t`DIMujPW!XMkgB0JH&t`KZ_nZ!k;ksjC"p-(B8@)Q-H5>uUorQKd0s!"r8CE*E
%rX@^mYmP^X#p&VD65*%G('TNR]i_NC`aIa6'JKo>G2]tNNYGn\mpA9:mqL+aqoS@Iqd;lr_QO+U<%AXo/fV:q:D0UfghpZGT1nS@
%iZ!@AFT:j+jcB$,Qt;dfJHGs]j6K'5!G@PNIsJN_E5%PcR-DM6mgE96!mVol$[1L*W1^5JVT\<B?HVns5J;<"%hE)n.IcH6p@TRj
%^Ns%QJSa9qRGIc)`V3YfY*'nW?SbO#&Wok6Ce1;ZQ4OqKjZ2<t#$s3F3S;"RFTU*aXth-=!6moA&L:DDX<Q!Co=jYAMe@<[<(,E$
%j?9BtA]IaPR#p5r^6J#ahY4aG[4:s5oA5h>4fT5c^)iT#bDo`rHXFqh6@!n7lYrp]4__bg,=6QDp51h6PG'$*Oa.D;lLdi,(NaIm
%X[p?q[Da<6b,j$[+6HPW+HUXNE)N:*!!V1iQZcMC9b._@NuI/,-*qqOZA=tDnJs<q&[n\_%(A%tDc2IoR91thYp[L;2jRT^moY4N
%MLbE3ZQ35HTV>P\gkE';6u9;aS19.G&0R^R#>t`8WLtA=5;"FCpa#9EH"'$%a=CYVR#J/?0CBhVJ2i$'ZUk"*e'/8dH=4(uHYQ"$
%c3!rA7N5H@UkFZ_'`cR5J8rF`>ci2HX]^`2jWQbXU<.j:CRh@nVgr/h]usr#3F;VuL.hVrRe"PC.!H"jSb@_)5=63Mr"bL:_#C$+
%&7-?UIg?lQPp)Xur/N)H4`SCY)\,iua3P;f4JE>-KZIGm+KeYTA:p$5B)..<i-D!r4=LX&a>V)_@7->XB]]D.NNpSO9/m_34[g?#
%7?\^MEtj!8%)@\q9h=nd\Q"e>=uHX)`*cGZN)0Tr;MJ;?&LII<,T.&'7@7Ug[B1AJA$5@S!`\Zm%gmuYItMs%s%uT=YYnV6`,?g!
%dTfpr-+FYFXN?A'a'"3t.sSq=[u5b@"L!M=%g&Q2-#ct:EF>@@`Yj#+BV5?1d0q7C*S*o?(G&Q[<4JbR+s=J5FiOV?KftZD>Z=kC
%8%o2j).Z98&:hMQAINRo-T@.-b4QmJFU9!o,662D`&LCQdHM:Z#64h(MM9G[Vh[.O,go^'fg(;4"in]&fm98.H!YL8GU_*g0/>Gm
%('VRN+dc6iD*-1rG_0fd=!\Ud).sHee=+Tt8F%I5O?>I$.[pVsHN73$iI_=\)!WjZ[g`d]*41:R'h.SKTuf_s?N<ehn0nLE7XNQ_
%n<(>>7/d%X"=U)F(.p?g'55iBe:m?,)6X'C.hGQD="FqN5]Et>(e18mD%dZnNA>%7@Vc:5RL)sU)J9=*Q#7$d0G&8+6&A0,#-gUD
%Z\`_43s@gu/jnDlT!5Fo)C"MR2dt\B@S"@:``%($(b3_<aEoc_1\UDm1a\@!,PK>FFYk@`[EQFTJK\NZQX>>tnf0oNA2P'tWCaNt
%A6&NZM6*#T3\<GA2I(:A94S=T^<m?X<;uk>MFZ%DOsL)X4#*;c*AQ2uFdRfm94:TM&k3ZTEOA&jLbVm<2]B;g+jO$R;@^?D9D.!b
%)ma[%U/T++Gj"e\Z6VFWk\j5%McLN]Kp'ot[NaTZVP3-'%bQTC7knnnh4-uBkR)1C8LV$W(\cO:%&5p?oc7/p`3&-d%/c&VDfXb4
%63`KZ$4F]=I4<oW,#59#gLRO_fU1!3?cr#s5.u3uX67Q1F%F:jSg.,[Ck6-&%u8@;q$5b\@nKf?RNX'3fT"kLZK&M%d!aE'i)t=(
%Eeg!MXtk@hMLp_NBABCD\\;`F(Z]*s2gnU/]gk)90bgatCL2#i=oRZ-P@I-U5W:nFOuR+3Nq+@HT(3X<DD?T^jB0/cGW<m%:q^GQ
%JnUdeb>C<"[#;]CTKfo$F-n-8=aaS%b`U/Ii6*,n1BR1tEW"@$AkF5rm11:+]=m>tY"]o!AO+kF^AVY7ZFnG*S0R?,kRiK>1F-``
%R+lbD@4GUGn=:_u0Bpc'A6hX<[!L&[ACeUWgh-sUQ]CpgPe]i$"+?<!$+gK-6Hf,(HVCi3VZMV5E2*1+e.Qnuq2._[],M1c?/!bg
%k(&TeA<+$-9%7kCgLK/%hPVk5@GtA8I-E%b_=MiIR@WTM?G'tXF'$uHgh@%:1JrW?94teo@lr2%Utj#0UW2j>&@]4"OCU8X:nJZk
%2HU@YE2oThK(Uq'qTpI0Wt3>/ndhETerb793k&`B*QN31f).u)/*:&+(@\%_UWt_BPr,8R]7t9")I.EgnVW-"\pKF1M5Xg$qU_I%
%EGc#N6VjMkRE2LDLPq-,&6XF0?O!HTDVN:QHD?[KHJ&nWPVD9DZQZ;*p$HBZ19,ZWk%MdP[4[#Ug(DTQ(j.Z:HV;Z;fY[#XD^B]]
%h!XkZ'RuSRcD<PVe@)A`W-R/<O*Q!*&G2qc3*gE:S%QQ1\Z'F#DkENAVL*#OCAIWTVpc[.>T%O.h2hoA7JG_M,.H<dq6$L<o<K_$
%+nN=N8-V]m*fftQmH/[M9q-8oe+Mjd)mN[rDf-R\\[_6jV)jg3@-E#[_Z:SJFMB88^Gti"Nu^n7n;ChXUC5TUk:_ue?p6QBaqomq
%iNsp7<gaaVq<BZC)bq>?E7Ej%F2V/bf,ScJeC_2W%S77nI_4U&^@#M.ig;QSpY?^b<FmfWnAZUk,\S7e30f^LZ+At#E'YLd/o%Q;
%(?`X[Ns&IB\NOt(L)=HDae>Iic>iBrTqd;ZATQ!)j\r@19?o\;$e6o.]!pJ'@ns'i)gutnGd*$hXh3^p1EJlkGP10Q?(H$^q$#Mt
%Gir:U\De+bkc.#M6F`TVj7ZQk_]@XD^D:^B*'al\B_YJM\E*P\f>?pR5JR)J".N,]Bc\WB@LQYC><@QVp]kgHgjr0g&I53998[0s
%LBF$)HKPe)Q5gC9$Vt+Eq4kroat)H8^i#i+YTOO$oB#2Oih_6%N]XI<aEeBOJR&m;K]<PY68gNpWrnj&@_piN73[sU3d4<mfH)(b
%hupLVos0G$=Znn"`!Y>rlG;VU(</Mi%+8*gLBj<rU138c#FjBilu6>g@eQK:%VuVY`8YlH1YCqSU6l#j8HMQ-*S=<Mb'j]:J`ZX(
%H8r-VW8+Nc/0:G:"nuEpMA</Y*\<%s[7O.)2A,Q7%M(IKZc0hPH*EsOLRbLgCml.80FnqdR@m&gnR.K:A$t"=K*<9fM!WTC?,@@L
%4ZliJ-H>?+K2#b#b^/qiZ$rspgjoVbQH`g^JP@Q8&DP`d9d"#dH8r-5O3E12P%2Pf6??O5es(\HYTOgE=K`3N!kVR0LuQ3&#sgW,
%JHaGFb]7i6_/2qq*"FN-3Alc5K2(hP1!lg'97>%_n6fB*+WfV"X_=U;M\XTb4Y?g@L<Y\4K?Y"mXE=,CF4@_6Ha"BTs&'@<G"M74
%hY$AGJHm([E+"6MA*[]M?sRfu`YKW0W[lJ4iShRiTfTF)[\DWD33Z&m7-2C=Ksi^:k8l1]/^8H`YaOS&EqNh6D5HmBKnTi&)?CTq
%2GH>fT0=g5XdNZl+-s<&e3b#?FO0(-`58t&I^ok-3;PVIf[OJb\TkAshqa2:b?oZunRA2S/Cf/pZ.M9Ul%^(e,T\]V0,B^1bLMN)
%.Pmsi?L6Ogb_nV1>:3]i?7`g_/tY//GUQoIk/?9L)0'XD('qpMg>TtZ(l6d+S_2Ggn;R7K*7J.&+*NWj#\mc&LJ:,SF)E'8F2g"q
%qljdJpAOVl!DJ<W?@>qSBlE$N@^5(J_SMdF.'A6l%jr.9^4q(rYrO:,`gta%oq6RkZ)Eb8b3%H8h$RgjX@k2CRL@Asbsom!-T3?[
%e#*k;#Fk@`b_[Y>[9bts7n;q+/[j4H?h-G-FYL6tl6UlK-#:A*DiI$""&na_(,lm[XenKOgk1m#Mhl+)&XqIfQ^cC!"."K.FVqq?
%bEjOW`Zf01Ui__hPCmO?&[r+)QL]n9\.)!]2,8W0hB!85i#Ji9[sdM(ZQ'536`S'U3<L&0*+@["Rg!dH6u!rE&-+^`9cMrIA6AJm
%\f_hD5RD^)r>Te$Qrp$fL6GWi;&",1jDM?(A)W;nkl==<l>I?r"_&%"qFe1RRcJ%"#KU&Ub,&[2W/I3;^2>&2a-$XCmGfDdA^p,d
%o5Z.5m83C&PnSggSCoGOZIXUj2>fhm+c/mP0%E9c/>5g/P#T7qJMqSak@gW0XunT&/_M\*fD._n"Z5jfZRNC$P?4)\N$.+'<0dT3
%%T-3'/JoG$C+1^:3t-dlC$<L66/Lns@tAG3Y&\Qp+X3bC+qupJ;:a:A%_qjUaEV_l:a1/!)7pOHjYPDpIk6`u'aGu&M;oEWpgnFt
%pF8oe,V\FR-'50BCO67A?NK`O8@`@6Qn4sI=Vh-&-8-RV)r;47Hs[3b1NW64ab$iL/$H5n"@V<dl,lBX.i!]-L\Ke]n/3IL;;dE'
%,ig.LR#KKc\Qk#?73=8%omgS5Wp^_(Ffe'rQ:^g6!p,GDV.CO=e.[l[0;:<5Eum6\`>PKN&$P@@`SY"Fjl\jKl/$!'5JON)m!-1q
%n]YMZ<BM@H>f=n*?n4MeFrYd:9FaL#a!#IbN^?`\a&u<Vlo;.L3t?4fgMr?GPJ`DZ,^*F30Iib:n+!XBi-hXH#AV3E39=n5j'fta
%=_tU\Fg9t3QaGd)WZ;>n9^Y>4a_f(F2`nb7@`JKP&N^I7NAJ!FZ/[1Z]8P?^^D+X/`/_=*Fr[nh`/aGBm<6-"Zf<X;*QJ=\^.tac
%%_?,i9dIK4e0jYY^9X4KLPU,dG-g4O*d/OD(9umOW?#VG9R4RMG.[saiu%0#`uu6\%f*QnH(#c:Cq:Xb]Xf(m"Hh>V/d9mIMJ1&@
%?u1Y)*QYeZ[N1-.lo9o2eDnU!Nq]Vu4AW<D7,l%C;j;D^+*JXJ0sTc?$0,q^b`7>-\F"O4B#fI\TcGf.lo9lNdZ-,J&@`JJduH4B
%+^7fF3t?`raHkH.3$Uc<0-];3`K'C[=kBS8<[`.(%CP4-*HmsTF]Ai3Nq^t][B":ZNIX,%OY6I'G5SjlMB.bZ6jGff,\"e;g30!/
%,/fM:bT^AYQ=ZG976>sUo![R[n[@K(p?m:oplA^4*TO,s>'XS=7)\6)K+g7g,fodts63a[m;II#n+%a^mXBETZ[_+enXmSrf7O=t
%jS`G6s7#G@XAAk5rS,*$MrEKAI.s9596g1AJ$f4FY5tkVE@gmD6c&(5_<V3>B,h._*sQ$n"n!H853EdP3JW.^7tCIAJBr68?T\:k
%?2r5ir*R)7YFY[=EVWs&r3+rTcZ/YCa4:208,p#eru"T2B=R`?*W28lrU8(CB0C\(K[F%6jN@eXdmrs+pu6p0B4M7/Vqjh2B!.Q:
%!6G#g-B'8[UP_'"Bm&*hdF;:BB[aXWf<,l%B^8N4hem$KCW`ZUBI.<.B`8'I3?lVr7-bF5$JdN\%=H\9LEcEl(h?35;OZ[':m]!j
%40dj`(IO](&qhE'XJ6J4:CQ'<6,Sn5l&KI<4`Hi_;t",0_E_'+p7s+bgPDM_VF0uQWf*,Vk'8+B:QS-[;$.9T4fH^'Kr2j-.6t;Z
%.EfGU_u^G\a<"=R$NmMU\))upqP_pHHb!J(idGR^@mQ"j!/=Wp)PU1V&V;@O7)%VgqO2qY."PWjVN"Jd/CSnOpmAr-]SKb5;S!<d
%RbJn;<ZCnfVGhYW9PIKG)6-J[<Z=W5MQE5mbsnQZ%KYD&A4A=5F!#I_eYVgp>hc3[!DtBpC=n+]P&1o-Y!!^R]R&!)/u0im7PO[<
%rML4Jp^K$Y["6J_;-U)AMVY85gPN6J2?oVl@ML5P67'<)+H"Alj^*MQ0?YZ,p-LheC55qarO?_VUJ;C_CWP3Jgs$sFX%4RPTPo#r
%H6JI$X@^:f(E6+r)C>-d7I$;BrA\+9b_k@NdRh$-FXE-0p:j.2E9L^U6p&8pSrjeAa_Zo?7oQNW![p\*DGj0\nn@I0>n!&:@YFEB
%%h.q4iC3)DdXbDem6#i:$csHl(CRbX6;Le3M9s40/nm&He.@nCaPFuC4"GJ-ko+F^!3,Kt*+,KjWY<K4;5QQ6+4=[t5cGplW$\0<
%Y#c?Le&\C=0kdJZVF[?!BO@-(s&l1!Je$YF]FO9[p.74K8XrW,=\2j23@5.-J9A"AOr81$-t,OI'S<Qq0m_ORK0@Em6:1S%`Eh,_
%_(0Z#&S4S=JqFtGYd_OT$q.VD<!.).#6p-oW+YHj_qO?*bX4e;=_ah:[9jb*Y^-j6FF$7=[$,lC)DAN2Q&2gcmg7&`*7.GU&;I=7
%C9\TPd,DB-$]l"u:MDX5%[JJaS$h7aCjGCpA[Pp'U<iTKX-HdX>h2>BLDZo'W^kfQ<Ve=-A52H.>6Ep6BP4*#A.V0QR&FBon;X`]
%N@%rnolj$9XZlm]Y2<>c87kG?o\\oN/1E>R(q.GC)(\'d7hQA:;H,.ZXK"##,>DH5,"6'a@sJfFd+pWBou';3\#jd8bB`'^8nEt^
%T_5qlY*"&>,QXL7)TZ$$ea$UIYZ@UX")TA=4OSgH*+Te`2TurWj[+4N7DFkrF_NY^(LF\9,TU-GFNuou$#`t&=&!kZ5`s,dKS4+h
%AlDB\N`7=:MflF5DC$g82dA]/..ACS69M@q9O`><_5q/u$,6+I-!=VK/^PJ8Ue%:nQR6Zq'WK\Se6%'qQ;?-'eC$IuOa<7H?HdeN
%ai[<(Ucu8Pg`DTl'7iQR:_"Zs&bTS$#mAV%3Ma,0qO1:,BDBl&NhXsr?7`=b6f&%@G%i91O07NGH=376eqfZ>=k$5J,7Iroa"L#5
%)PRe]a8kD>UD2'#@M)W4;6%T14Z<1kBH/kbGsdk-6-mf9l8ZCc.>**``+0YaCSd+OMpCq[>*DRt7$kGPFYBcXCR:`mV3oQiZUQg:
%ldo,nU6\SFUf_->TK'db@2G3&6V!Y!/6H;p'TOn10X[,g:)j!?ZWi_=f,"!ZR9M/l(Gjd`Je:@%dgh_6P&)X99,:Rp!jYg9D+3n]
%1=]a5;FJj,ZGCNlUU2mrB@.H?X.\m:aBVo1>4cHRZ0abOXYtu.Mo?Oa8S\%H1lI;F?X*HpRJH1_Pp;btJ+(0=dVr_2Pgd08"Q2Yi
%WaE'X-+.l7<9S)Z;o1U&m>T(sBHr]$`!j^petj[>blls:8r4IVqcP.p(BPPo]#MEX1U+6.5gmVrLt#$DQ<u[*A0XDuM(IBj]31;G
%>>Q"QgF-#jG:#qgV*`FuH'n=:YfJ7;U*c:"g!U"ij24O=j[O9p%KZG;L`Ka3NYOl*aef1o5.H`F3,Uqtad?mqV(UkD.?26@CE<$:
%@o.fFOLS6$Vik_R0p3lkM)<MJb]r4mGGA&)h9oV'YlKt'On^$&Eat!*M0Xe8S?f[ZMINTS;JLZ`*[R7sb*E-e<>.;,#'VLBN9!#l
%C35ONanh]O0<)A5M#d6&A5*P*(BYA),dT`+^rh;TJCC)#O]k?&"6t$mCLDTs"dg$_];a%,-idAn8-X67_1dl^e6"mgC#WgS^qqNG
%0ZQU]+QQS`j[/YTBU[)4fF!u`d@`$cia\FJN,jqJW4"R?5Gg&a5nFB;3YC>6+=D_*mXaIrFn"F1"#d_r3jZAb0Eo@i-)go\a_&8e
%rMma]I@(%n`A[$A[)+afB3hWP$H%@*Xl=&QRj#m"ZFe`^2al*L\HTcHIjQF^!8>M3Gh7u(c)+\2!2a8+9eEaJ7G7::#T</?:;P.h
%Ypoa#3`iCP9'KOSg4uF3[<B6(T%BdWMb"<=Z3K?0+]bY6B9>r[]"Z*ZJdJB03cQj77:Q@][DiT^Ue`0^Du^'rfFmiqUg8seL>Z!n
%\,n.]_)fJQZ>9X'^,Qt0R3Y=J/Jp<BMmOTU'fuR!msBpg0-e'g[A@Hc@92s8G+"VSJM9`341fcm&`L^E#-plpIdt75ABN,)*(CRR
%OjJ6SY>kr)Mq%[=MPA1$kKN/m9hc&M1eCNq(q8(p/jS[=:V?!:c$IoZ8:sJAIg2:NVM6n#I%?);_BotK<@\rbB]&A@_T;G1Yt:)Z
%Ugl(G4tGNf_r*/47&g";%8"BMA1FK[69CE:/Z^pdpjP>6#V_rE3Z"O5ZOSDJ,9A&c>@gGl01:"ToBJf&P'J'Xl5?#7m:[f6=dJAc
%N7&K9YRWpo"&d*&=nX?e,+b<eL@:H:)[cP4h+ZH.fE5(4V*'m`JZ9@FTN6GJRc,LB.aL&)Gn`p#U(22]_;-anpd/]PrT7SVdjEC'
%9LuK_LK^l:I,^9oTZB%=A-Ku(e]khBZn'$,f&4tZZ:S3^>?30LjZp2$<]3UGa;s$69nb)[^7t.ffk0hoN85]:fn'JqG!+/g3&)C1
%,#Vh^)BuSZKPlNYBXS(@'7"QhR@A"/_\Z;4[*4F&QRQ0-[$%BK5t>?j\A!8EUd'WF-CMoX_ZGBDR["9a;<']L"0brblQD%8c&skd
%>?O*Wl8K,Lc1ZjM5t1a`cA!mSSa;]eR-]o>CE_Yu:=)CMKe-i3L2#h$LhuQL'U$rZ5,Fom7F1ip(biF`b@='=KlHQ7+4a&MjNXV,
%m8'<<\>`_'mU_JT;i+Q%=maRdJb[rpAt9-@F&M)E++'lAV5l*2lSN-1XQOItMH9Z540,>^c#$*2-%o)<Ig7/`@PE+q7?j:0^EB4A
%7QNpBJ_hjLIAKOG+A,Qj23gbU4eq@5JRV@oPHu<d3K_OnaM"/:Jn1`6C*nVSN:p"MY,PQ/$9Tc:$JSG*7nH_k8MKN>5od0DEKh_-
%4ZF2LX?H4&gS[e0fuGO=X3U8Opbn?G'UMX\^dP2M6'Q:p#e!*%RpE9@5SQ(ratpRJWk]pD"#][:9Ui@i6'B&g$WP?pPUIl5*rE=u
%QI21^I0\cICeO<?$f-M^qM]#D@Cc0?1[3.^YV)AR_E`R+k%/_KrWe^KBe*%UAJ@%0`Q4-<<3iXcJLqKYg#a,(n6`0De1t$@)h:RK
%[W$K@(]m5a.B9]fE8\R*odRUR&N2]55`uR1@U50@Qn5R)$+VY@kbadrmI19'a$ldapr:/pa+a;#3DXij*"i<!=GnJ_#RYAB4%]'Q
%G"E!J[5OG'ag?0KZC^(KS&ir"i^W;Ci@CDH)G696I@%,Z>&PLr=W;/'@o/%.;*dXSH45T8f:O7+\8lbfimQ2bVe$s/Q^c+)0\?Xb
%U/(o]a"JMb'eto.HK5kabY2cNc-o?)P\Y+!WX,(#JMdcE>TF/V<PrGn_\r]6Xc<ip`O1FXg7VH.7["I#'HFD>"L9M?BKBj0UYp[Q
%YlUni.b6!h=<dpKFp"d?"06SIWt#B8[LH9^_kF*TTW5o'Wm1%2_kF)I*`sWlWqqG*JZ@OVWni6+I03KG@9Z__Y@<J*VV2H+g)R!D
%2G=i`_&D_,*2M9sUtQfag)Qn\Ll>f&%&-oGU=p'N=rj=uidit-JEkbe<>lUk)Js`!8?5C]g+L>_)*##`3-@2?'gfeVD.kDqMDa,'
%<(`&h@0C@F*0rVoQ<G8o3]8N(rQ,LajIfHX%;W<oWV?P4)As[*3ZrP`+LO3PF`'Goqb5.b:P5E#LSIVbQoZ40p&f*k?rXnF3uE)Y
%(puFBF`&l_QD$Q@Va++76W'c?98>l3kD#_JAPaN7^<hD/dt"C7JZ,ms=<iTp:5,Ci;CI8j@Ap*F@Am8$@u[)HQ5do-J`/j8-HmeY
%>#[F9FDM90+5B$i@TBT)d8K5N0gHEkC.9mB&@o\+(a,8+8HboM!CEMK0gNi85c>9h(ng(0+:'hm'GU^<;6D5I"pgr2fkJJ,0uP5]
%)E%d*;T/Wi!s=bs!sI[Q,^aVl"t1r*BQUj&/Q3)\,e;8I;S`>VoH\-bp<t@qV\o][6m!_?W#-Yl&3cldF+OE:NM,P3fJ,Vkr$Vat
%(^;B,"peCC1]YJpR>?1@%0Nsjm"PO-5u(m>=u-SK*67.t"mek2ED[-@1^jqA3"c>3!rl763fX5m<&$XH@t7s<C^Y=n&;AN/[&WL#
%eL*P]m8=?hg__.l0eqS60gOq1UDTZ20gK;0"t1o)#U74f-,fkLi>A5p0gK;0"t4<s&:Rn>5^?jin-t6Ub(]qSNWI:S!GYmp5Vui&
%!CB:%fn#KS?K;Y+&H4<7*_^$)-#+M*"1566C9,K#\gdo_GJsPJj;9"_.IA#^:^g0$%$9+Bg:='t+;_#t+;gd3_P%ehg08$:?o<cA
%U0VpN:j*7D&e#=5EnQ;"(n`HP)Zt0h*<YqE\BI4@K2Z6dEBOY<UB+,:U/Uhc(df:<T0AWnA8XJ8$tSrdHJB&S8;gUsJH/!shOZu_
%B_ITA@>=hKWXti5+[E"$'.e@e&0OT/8I5Da`@ZcD"bcqRABAP<!&:u,)2>[F5`c<ULf/j*AV0sp3^I"\G6h"V#gd5h!J9,^#`rR_
%<CdB,U.u=hk?0Z70P?b!F9k\u#`r<rB@1!F6@d]52X*fg+@,;D.hJ@]&>3DB+?CN1HkM,5R>C^j$j*dhC^'oT6QeXr)?`UVhf=)g
%2;I5i!W`W4!CH0\)QdEZ+:PG>J05R4&>TL2U>_4K>hBT1l-a*?6@^JA53#S#Q9g&<L&dM,&>6NV5c$OF-uK;%UsY2R!WdmD+[AmJ
%5kmg&!6#BJ.bu75Bg[DiX[7QdL&g1*'`sU.!YcUUPS=2KRR2O40an+O2Hs*U:*;gWgGh5*&_Y'Fjqj/W`<?=M01=(I/B?Bm&0UK5
%A;cju6\'+m03Rlo$3<a+!M[[]Z=d-j!4h=nmHr_U/k_3TZ$-6H&+r7S6\'g%BC89iAd$bZ0u@>N:r=sm:5P'LW5X<59(9T>Xqd:^
%ID401?_<BiOm"tL[BI+s,NH(=L#Fm7(juma$3?lW&0RoF2,S^N!#:7h'nlW2U"V)"-P2pn.L-"hV"m9+hWc^pP*L]4bdN/Z&fL#h
%-"G4!7]S]JiEGda8IdVSC%QKY5a7^@&d/b6C@``?!/]^aWU'm58/2/i%KZn]CR=-X*!$2A,_IND,Q_t901>k,,R>OX4[T3,6NG@G
%&4"K;4=_P)MBRKUSA<"SL*;**`<`KFgUUfT!_?4^;h[U>+lXb%FEjhfltM1S1=6npN@P(O%n)B(XZ8ZI&O10agd(ot6NFCUr$>d$
%70(a-BO#k@!)eY+4[fAH@GMJ[@k%OnF@-%b'<VV6jp7WU#TutC#XSaZ8Kr]=1'A0.fFU<0$3H#]c-JY[#Qb:hc4E7*MXnFp!CZm!
%o7.)h8ug,E70'S3L$[=R+Fr0b"Ah,b+@m4JPS=.OdhMnJ'`g^b)75+uC;UWKq&k3,BJ[ul&O:1m!iRLK#_Su[TV;^bd1lZb^#96i
%0baWkW??`$bnX6$K_F=[egSqA\0->"0X/,=!iROL#ZFA.5j]\E=Klp^'L36q=V3on?`E8#,(Np/E"+"A_LYVt5g7.H!<ff%";#^^
%,Cm'EJ?gALOAAka:Jh6k&ESNE\k*nCoN$+FNeCuh7R#SS?HCdcZ,Kn>NnjMFmn\D"NpKHUhK>V?dF/*r6)jpXU];NnP3PC8!/]E.
%M#i-GQi_e9!!"kY!+?$k!2pb8#Z:['2$3hUaUnO&$ii\4BE4]?!$J^"0E=pl&C1[`TPOTN'";@F?Gcb.E+B(OeEgH(*X;[&!s"0I
%.QgN.5kJ(`m&:0h16F%XM5pDl#Vinj-NKgm%04=i0a7Vm"ooQ7!C6Eq!<CLK\^Vl=!0E&Io""jPc@O4?5S+5%W#5SkDR]^tRK7pM
%5:$:84D4cr!d9_,+L$?0e8cQ0&>T@-R`b^s:b:'*FT;tqh(gD[5SOt1nm0e4!.ZIp!)OUE!(mIr"<oY0)q+ff[G_+YU];Nnltc\&
%[G_+YF9"RC2uk?I!"b0m()D)o:`BlEaoVQP[oNM0AHMoi#6;.6!#jYo5YV8EguObN42LUJUZIt9oqVV=lp,aC&SJO%!/P2l<?r%S
%Jlf)TTP=J"li<]U!2/HST]Q4s=:tr@ZGVD!J=6OiTJmSce,fUu)ZV98!!nul`V!aF!!Q4\!2,h2!C1RGQRg1Y@aQNWWs5tC*D,bZ
%?p1"GP4n[gQ/j!UEjm<`-.!7DFTbMs";%D_jtoF*6'PAt#m(AF7fYD6!!+e5#bYo<+K-q`!*)Ad5q3/5C'Yq?H>#Z7VIC&;W#>_N
%DiFu&<#rt7%g".>!iQD,W(J^WFbUV3eEk[>!Wo;=!f/=_#bYo<+G^0Q;[ib<U+_Zl<!8:)LcD/6Fc$06L&cfilj08a#bWme!JJ3&
%":u$(0(t,GJ5!nHf*h\%%W$k"Jk-G<eIY"*ODEFE)?L1!<$Hk6a(M7;JcK7=<?5U?!4?5@TK*Ma#^SoN5l>k=@1GX);7]_T[H/JO
%M$/]P(NfilHG3FP?]"hMB@Q!?6NFN3#U%>f,(Lds2CfA)'Y.Xf#U"5Y'a,'j1kl"IZ&/NR#6DcWXBhZS!5bZ`![nofW#5Z8"p@bD
%"Ai)$&9k[bg.?fXphK%?d[[fjJF#PZ[M/aA%0=ru!E:$>"Q*Gr5h-E2aUpeg&4"bX5W'[7RNm@\_!VK$WX'^q:IP96J,i3%!(qtG
%C(BT%L&d+*K)frV]E//uN<1n9=\C5R:\G";"a_o]:h[_NrK(eWq-g:D!)e7r:4s[OI;Z3<!31bRJlE:HeIXtW#m.%D!f5criAsXE
%5`e#.W#,RA3m81$`=P:r$3I.C!f3QrKnP$XUA?YK:b`(aG"6W5MkbMd5QE*#!*)Ad2+%?e(aKB[C?LTu&4"bW5h&Fp!#7p&d<-b>
%V\fKV6sh3nW!FM1O<$s<,?=qD1B\7o@RgD56NH)\97g3%!.ke,^n,-D+;=#!;ZtH-YSmQK,!c3/6NDs=XpC\0#U!`5aL<uH!E9d7
%"CbOD@ZH'@6FTQQ!&9>'#U&>sjr[A25h'tDJ'k8G9E6L=lqBil6NBto#bYc8+A=FY!&[1FE@)S*W#5YmF.3H.AdG'?$j"id!Q8r.
%haJ,BJC$7WW#5Ym9%@AVbn334&O:1O!XP3#5lanT!7cT"C5)_gL&btK!3-Cm@Dg?Z82K:\!3u^K,UNG30a(<o"Ah)a+I6":%1<FC
%#]HLETPD96iWu1q&4"JP5^m*^"Ai)$&<s(th@Mq?h$F,g]GX26@)/@E#Tsoag$B!;-p7j/2p0=oA=K-dgNubbhqlWZqYX1sim3#C
%_mQ;_K9e@BNZ#omP*$2J,9'6M2DgD0-oou-$tM`IabFCM)bNj`1]uE-EjDBQA4+J\L8L+C,psY#JSZ_pg!C.<6cmH)jrk\DQ]Va%
%@K7Mq)]D1([%(rG"L=`_A4+8UL6e#4%He:CZCqlOL8L.Dq17#:L5(g"9d^kuJS]!\g!DFYTqQ!a_aoH8P7<L:2DgA/kT&br6c7!"
%L6E(+6T3GbChO[=:iiq9Bk0TUabFCM)er,+1]uE-F0_JWaG-.I%8A&dC/-ZDNGPORg!Dil6d<`-Afr%-:,Xp2fhcaqTkS%)c,k^;
%OUX/q)k)=oW&`PX4Cgh(abFCM)er,+1lZ=M3SDb7ZCt,8!#3M/7We]mOU[<4!$L;5)U/:JJS]!n#66b7;/lStOU]S#!2)S81n+Mr
%KPY<S#65WscmfM*$=lN)3WR53C^'kpZD#eg!-H;:#e<kT3[5S9:*MNSCab)Lg!EH<!'lTkbOso.cjLMXm3^s@3??8`U]\c,p+YtR
%*Idn'oHaA&2'2Cck0rK:"%l;m1lVnl3>p1#18*]=5VnK&,pre`LC>Rk):1KV5fq,uVNCm*-Nff,#*bVdBEg5bjCCM3O9$XT".FuR
%W*W4'1lDBcS.''J):3CZTFo7qQBM=Y,6M+E"uMk1a2rj$+9S'-#36"a-Nb8V"uMkZBEU)`l"!&saFK#/!=e)a),:Am!ZB@(18&]]
%P5u+;!uao=1]eOk2_q%7A3eD]J>SG02(&KpJIJJ;):/e&5g@B#Afq1j7Kt]/%&c0(cnmMNk%$_5O9%3d".FcLW&YaB$tMWJaag7N
%!Au5,RRRM2S.''818*c?5VnK&2(&KpJIJJ;):12qT]TcM9?D]RE?J(#!uf.05XGZ3WW@[0jC^:O!X1?P0c^P\Ud<[b5Xkr7MZ\M3
%):5Gp">Va*\Jtlc*'Yr8&1EV@Xl;Sg5Hm0[aN/m4F!/gQ"2[)u+OF"ATO]T<e&['",`i$qi;j!C.P=YaD<i!m->T_sqaIU?'\]o;
%SiEqkle)g#PAn/&-&PHu0`r^uE_<!=PX*>>JYl9G-)Um7JJ'@k-.!'b5fkI+AtT9!:'ib:&h#adcnn@fjHMq$:]_r@"IalS-oiU#
%4Hr)V7_Pn[=n+aP#rIkZBK7Bc#a@Tt."R+M!\L;Q)TMI1PX+8*!_oQqZGWP<!Y(t/RSF/G%OKJD8t]UW5f5%%L,&W8VZ[oh&nj6N
%coKH%JVI&(%As=IJJ+nC-."><T]VJ(;^m9d;Zb3/$.PIXBEh)%k*/+e:]`MP"I_dde=7.b)C84$8t[%MJXTL=bs2TbS.]K>8tb=2
%5gq-4RSs8^UBG=,#rD`1:if7%)(:');Zb3/$.PIXBGr0nF%W*:PX$HT*p?E%NU1m4UBDLSnNb+d1TKJd![Z21NX'UmT^6nGV$*7+
%nN_X<BNE.U)(!Y"NX%>:T9UB,'I\N5G!(j.=<%i^PX)91*p?E%!J..nTOj?QadIUT;$$nuTEGVM5RI'`GIalXN'a9W(=s0!Bdj^.
%^Ag(3WRe89=l]JU_iuI`jnBrfVq7;e)(7L$cno@-jNKm<R":DV"3nUiPaiV)#%jOhbWms<"!qRaR_fJtS/GuY1Ji+(TQuoU)"/kR
%G\jl4qUp`63m9k^Eb:u4$lA!K5f8t?Q88W&_[NoB)/'jCcuN`k@>$koR=Rh8#+EgGF:ND)TOH&0e!YbV?j7Op$oEn\BK.fp:s,Eh
%bWt2B!tAlIo#$t8BG`PPE+YaTR":\^!tA`EC<d5EN>\ZT1XHQS5g>^JAmbgXc3uN31Ji.)TP;V8c'X'Z0`s:C#+C)\W&ZZ\%*Uu]
%R=SsX#&;El1lWBO3A]#=AtWb[5Vk(r2.m,^JJkCH1XHQS5g>^JVD/01B*MPZ$oF.-Jc[aTaGpW`AtY8,(Sm9[UGsmi0E[=&\0*"-
%Eb:tUbWsXFJQ?._Ra)>KN#?:=`s!@>cUs3*$Htac4"eSb/<1*9AtW-D(Nc$qfZ9a*n$D#*SFC/01JeVdAtYXci.Bga0%ZB%f0U34
%fbf[f%/OY"D0#O,d#<SgMmkoU=!I<C+*=@AfOl<48kopSN?BVe6-qH?TO\0k1Cs[8-O?/r+:($Pn3MgPLsg!3&Vpr1;4=BKeg2NZ
%#9AC=M1!s521,s`D8c`#JfoFf_ZqL*#<>)s0S5t^"@47D"AL6L)Fb8pSKMS_n]u</TFhH]V@`s%j.%6*(dZMjJtN\]JqapA%3l,s
%:(T7PpW!Sl7N_sT:(ZIkFsdP67M+(?+D:n0T]QAC_[(j_'*M#S#\m*G1]p$?F+U'1#_JKY"O01Ce=7Xp)F72@JtT(G6-T^fAfq@o
%:(T5a5u;WSTG\#eRM,fu,7&$R&2]@hW&[/j$j8l@$%cb3#\m*G1]p$?F+U'a"@:9=JsHuOFXIGuJKSVc6-qB=T]$#>bBSMk'*PF&
%&2]n"kT&dh6-BOcV@`s55S,cC+D;WYcual4V9D0Q$%g_O#[0t7A;;`a#[0\/[%&7P*J,DCnsU>4.mD%"J#3e\"]6BJ\k*Drk`,"N
%ANAr=$rUt)QoN3i7bD`0_,mJ9CeUV=rF*:#>\^NY&Xpe(m"ZrZUh0cC,p_d$9L-Hb0'<P0LF7nU.SApo"@7k^9'GaIM:@t6&LBi-
%U4eaY849=g%4/s>a(88lL(^5&(hnX,XY/cC)OI.NS0qte:XF3TTFlF#VXjp"isD1"'/Y[IB0&i8#WtE%H%O=mc4`$n-YPJ8cj2a"
%_g$cfnH9<a#oZS=j#fUPn-!ms$1\21o)oN_$0oeL1]gHLF.T%54@.5;Jqidu2<,"3JL@BV:XBM46-X\,B&Eu1c4`$o-`B%$cnq>e
%jubpcn,tW/$(?DmW&[Z#$p6i#H%Mp`"?#?KR`6#jS0qtSStP4.5r8!52<P:7JL@BV:XCqiT]S@&bBSWMnH>u0'@`R#BGjUmE1W_6
%oKU6=Jl^e9)U9"<%Wn;8ANW8rH%OW+$(B-Q[#?AG3`"*XqOd"75qDF-:$2iR"./T^/`R.@c4dPp:Ctp!e]=2cA6>E%B.?^(?">@W
%-p9[Y:DB0Fbb"#[nV\]^RJnFJS+35mgho'AoZ&&V0d"g+<(EBq5BK182'k\q&4LID&hG:8YH,a[6BE*fkg0KI]/NZ"$5T@8P=A.\
%,U*6s.:!KRFdNpYY`M7=VNOQMB2;qp!XSr:e][3/L=$/VV[FD4(Gq[8BEYo>l#]5/k^o\Z"V"rBRSFZ0U+_[I1pE&`k]B,.k^nQ<
%"cYb`1n613-sb2=\tEI_5i([V7\C.S:)A!^FLn,RF@"aIJjuC@C/,R%N%V%h?-k::T]U>^1XH:_V[JrE/uUd9cocD9c09hWd02D*
%$^sO$e=8.)#.gJmF?q_0"]_<*RXm)i3aL)h\tJ>16.>%LWm_-r6Pi^m/nbI#T^$Vb1XH;*V[Jq_(Y"s-BGk)PGIjF^k^pCn"YHJW
%l:r/&N!3lS?-iq#6,Vr=c@J_,[#?VN3*jl<F@"C?JsOdf9rAA&`W@uf/nbF"T]pPak<PpQ>"0=8KJ$r_!#BUdTVZ`re.miA;S&ML
%3cmZ3WI]bp-nj2<+745smreH5e)^i2>X%Usq7Oc0#<H*Rmr/$7]B/@l/O.\:nfrQ7?ghb*H;D_FFL6GPcgl??b7F6NI,<!9Got4j
%FKp5I_t&'XbE);!r(-S)O7]T&\T?j;qGr'<CZY/ZPtsJBroNuVr[,".s6F%j_]Sm@mm#dH:H[`GrtAE!I\sm[]7'HtNV8lU3T]=O
%[[EQ_G5n!-J%;E1T5>MAT7-S'n*CZU&'aA'T>/o@qfM`"="eJ&hg<8u55rAsl.pi*<-9`Ih_og+bl.![pt9!`)kK:bs1e=R%fA!2
%9bVYG[:($/mRY$ek&dXs+e*D)9pj[r85bHi@`c)'dfSFI3j;lq\GW#J@et,jWN=Bl,A<V2SL'HQ>6tie;5@^6<WMZbmp2W(%(bhS
%1`MQ.fr%-12C5Q?#88O*bY86"&:h!*Vnm=d!=0t:N((D`03YW?CU/YC*L/luh2Dms>_@AG?6aYCDjlk^]HE!"PXTaGlH3b^X<gcq
%?.?hJqiGLuHMa7M!G&aX26q:0m^:d@<YlE<gE:2eQhCLn;o$!4/C0=3O=Ck_"uLGr.h8A:EOh#UkD%@u*Wg&,F%C3V4RR"-M\go6
%QB#r8csW\BP+,gQdnq_g'2jI*;Mp879<\d-'FV6;h>7=5($h-rm8goInc#d0,,DM-ls#`['j<VjS+/a(=foq:+otIlGRs;$,70-p
%kHTa-KEL.j=rnD%9S>i,_5!&f998>B%2dL-^R!g&[c'!;qhZunZ,,&E,"1a_n332Tjqi`Qj2/tEW'@ms<^uFe$5FEr$Ibj3Mn3=D
%drBi:3]YPmDBPF-)f_=.4I`$#5)uRRQ<)+;=88MY@4uTPpkk"b@]gNsG0VGPZ$d^n$-E\LbJ4R*JV]iY:b[>g/sU5@)?uP."!)jk
%)puu3Wq]%Z<r#hI4]9F6]1##\s39I!lH>MYrp\hFn8H(ZYn*BPTp`Dp@eBAp9]2S^('Z9TQY&c%luK=3)@TK^dS>>?..T!D5V?Hn
%K2;Pa*BXLH$4Yu=oVo*3\7o(hK/*uQ_bj+]o-2G2V$6.Kk"eKZX@s4#CZ]TtS;gUH(9UbIR//,!/>Yog4-3TE\aRH%Iecp&kq@MW
%-bIlHSo6-oq!mLj@NT%CDXEG)Ga33h"=d_<,PJZJ0GM?lMOg_;*:1"nnI_O_\qcmjCP^Ph@hq=Sipo^A\SEQrX%ACjX%HC:$>Yd9
%DWS;A5J-)q:"O+/FX.79d#Lgf_:'Djmk7"@ZW0]MDQm>`$P/;?!6a$V/u],$Gh^POqinj+jkmfPHTqLSDVBqp[u,,VZaE+gc_moO
%iZd,VJ\gEK8+CoB(^'E_PokoGn/'aXY,c<7HX0#M&.I(Y*e6Un3S=$WTl.,^mr>a5n\%M,d82ToTL*14Ls6k$[E)j\*t<I:pn&DO
%$qMC?#8g>l`qo`iVS:c1S,hG*0DhXfd'#!\T7!bRX5c]'YNK//QI.G3eooTr:3RXhL!7JFY?&M28'S9!fHOu`$BZppT@rKr(E[U!
%E/Fu>^OY/?6,GZa\Oh:!PH*YtKJe28[t8iG3[HU@Gkr"$Z?kLQL;snb5<XEafhq6M0HsNV*.4tC48KKI4#P##?2A?i3C]hp[:^PZ
%H+f4<fmgP9GVDHS`hSW#0fbc82:Q;>"TS,dalLi\Q'+_Ao5>41e4cRSVK7ju>1*eaI2)$@h.7]71tb)V^#jaIAH,%,rl'?;kiF\r
%7eX`pZo>*nc,9]M<"O6fOA""`Ccg,ao/_k3hH(5Ps'jK2!#k)1$ZjG`::Qt`EsP81m6D%MJpomOJgk8"]8Z>>m8^>4hMmUOL#iq:
%8KA:_R2Dnn;*u@5nRg`,?&$p\CX,u;%?[P]cl/137u1nA8.XFBQj8fT/th46P<a6HQ/R!)fap#a+Zfp0Gu2',]S&&R8uGrKfca_"
%=u;'>5]S?N12PCrQCQ&c7Co?MY30&Z]9aB5C38b8peb`o`hNm-\D@JFXfs%Y/<\Bi+[r,2>NQbU(?\Cl#Pldl'O>Q&;RjNP9LJ#p
%8ZR21F!>omB@_.ga;FP]'R^g+^<!QQfJq`]&=@SRNL'KAQ$0s<L.%0ES1:P@kkCqJ_eHM27l]"EWH9;t;d#9UFdf1#WtVC+qYZt.
%=(D3pC/'Af>fn$3*tBphiinX19p`kC@]OoMdoKI\4fDJ](XSM[')N^qQVTd]!lG?mMES8tfWN,+>Z*c:!"deW.5&XWR1fX\Je[++
%"W!kiinO?f'c^dF84>R3Fq6ZRP/+$]eX5!ZA?Kcq>Akcml#,GDpr/%=-0bm,0Gu7.DKA*RD3N`":&8.Xd+1>:]NbJ#QZbre6e!k3
%0@4GXE?kioG$aQ!N+o$6`()AaGemEZFA-Dg`.8eDfgm9QHk/FQ<b'[$CFZX:m'\U9Z?%tf>'3aEqr+HO\bBQ/=8DJV`IGGeRNOC*
%3Bq?YW78pJl*##'h<C$5/D'Pg&C2ROcl5=r8C(ld*p7A<DkHR6S$<T'2u2`A@keb1j&\p)SR/$SfV33I^QgCo:t."!2b.g.>PK]i
%hB`Nh+Khn@fg3o._9[J-oUd2^p5Hpc0d6S<rfMP^1m37Y=ih]io=bUea(5PQBs#J,KKLEk@OW`c$0!V#K4d+41kl.>";TOq%I$uL
%.9JjBrjsF2Ng(+`<r,S/EUK5mk\?(A%;D`;Po;1MX(;a-">QNGA((2%pHKn\E42bdp''YjfUf'dmGJ5"/>!+h-&K7=ZYe562f_@6
%A3sFI06SFI,!9g=d19/qcR9Raqng*@,^k"fg6#tILE@L0H,T5RPV$[ZP"BA>EW0ZM"?#9;@D9X172.6_*5iXJjF:;]!Su$ielIF^
%NakF^eP`#uP<AZ8hfGBWpOW*W\ld"2]KX.SZO&I+J%U]QS'-8\bXh8?4eLRY:Qh.PqKApKgWkFF+=(nW2%1WA0\oXJSTTS;5.%-h
%,'H\&5>jP]qWa@NjiIAJ]I`T*4:3i3jYG1r)V($CAQV\P,a3t*lcb[[pBTd?bDURQXX1a-aI4Y!I20qaPr!EDiBoT`'TQSW7*B.\
%<J6,BO&q0]JT9C,Q'/76VH"_^d[X++2a`3L!#WdXQ($g6=-WuTc$Ii;U1f(X>;f6:"79/JKM5N).i&!3hC7q['k,^`$]F#p!84l^
%8XF&L!37#%R8XnQIdPt!5nT;Q![o[!/:O_qj+%.bhQ=KGb)FZsd$5Id8<)/2_h30k;-=EN&0A/NN$0M5;,`Ci0sDipdVL>\R$JS]
%-ZeS+o!u%`!h2hZ"t:L1R/piU*;#B:El`QEaV8-lh(_O$,T`c&b8Io]YEljH,hri2l/5h&puS$/I%Vb/QUUDKU08..OVZ'-k_k1^
%'Q[jk1/ljW<=-XG.8?ji!1m.e785NiaF2X60sNKc%X>#h4pSR-R1I+_O"fl1,/(YYYgZAKeX4;>BWs,:,@q0hV2Igmo^38u51P%C
%-a4qU-ujt>)'2C=$@uVAk&B6\hDT(D:s;Ri,V-ga?T&Zj.S*W&Gh6$k"]L;LY#Q#EcI2*KoNA55Ca94qI4^Rp._'#$HMfI+.dY*J
%-LVLdp*LqK7RM`rP'hG8a!Z=*Ti>=+4P4=Wfp\B!ffk>531;^LV^krIJ%2%r2'I'Ufq@/J/K@r.RDV;4f@:<oY196U;"^b+<:iWQ
%k&qU]MB#/jl(hulqC`][PmlVRZd6j[]0<Nr%tH?:7R!(L2[W.j'#c0kWehU[Z4ZY9M4e0@hp6+=0?bpqRU]&,<hk[i`F.U+j7IN;
%Iu`+;Z_6<a0RSg"VJT9Hp+T-4p@5l*:L3EIi0lA!5"Y]=S'Pn9'!G$K+qBj\0T(RXc77)PeS&-F.LQC!'^ESnJH-'-d]g'=C-ZN!
%:;p='^dTc])9=/gV.]2;0RI_&C+DJ&.c6\dDf*uWc]-VU2UXBklE/V0n$30]RV,ET\@:$1Qdq\2X".]MR'cQ>aY7^B'(E#!509-U
%WtG)L.K8g9qWkTu<825k@0I,_>+hqoGnt)>?MdJf".D.d*p/'ThLtJi^0h%d9.e:Z1ald/eR;;%0$L4W85bP"j2,m]rNPX]."rqj
%&V.*"E/A?LA+FrE9ih>LFtBI,Ta^(m#ckJ8egD<YNM8)cogfAM*(Wb-d=SXS[Im;q^SM$.g334T!uWX9Q;5f=^s]&1FOt8.Rn.r<
%Satr/^o<ZkM\dbn:GBj$/W30eqd*3:4q`\l5S>_s`aH9//oX5'\.[<B%n<PN(C@L!h*@LT(gntSBG)AI+qlkG*O_[iC;GDZ*]Ca;
%LIFSnXZcX#TA6%;Hs`h]"(r>HqZdRKprleK#->0u^6J2%?8T[rC=hq)'gRA",J#FlNVM',Eii2MH8&SPaInYaq:ZgPHE*[b.C$^l
%V*'+N\DmECOb,pG-DUkn%?IeIZRKoY$0MW;g6KrOg9N=W#@S9lrBrYMjZW>AQ)6aPhOR2$ZLDD(O=HDB%;XQ`C:CXCbJSn<;a`Il
%:M,W@0`I6K/BO1hlq%uFJ@4+Zl$Er.;Sm\sL3/$2LtaB.TZtXi,Ut6jh7[5Dq566Moe5d$r^?ABh*JKA&rleaDtsptAbal,PCG`)
%,`YPVgn4VTY_m=4]Tnae5<R$1`74.G$L5o=m^_-R@!:9P`%!i_6NAOVQ[G<OG%59=R<^VZgXdk[Wf^tkTRSr:@6m;O:pH5A*a,c%
%f'Re)dZ]aRiRYeZd4RCSRIXYhC"U&aR2\Qfg2cm]?9s2g,*b"7ql*!T;+-.lPP%I#`8.U$:56B6?L-X"d>JR%,t'=VgpdYR(ITNG
%@]!_Z#)JI)=Qg=A,o!>[:V_hZ_37aW#&?1,(lH4/[p,K0AW?'uq!\H[DLmLt,(/.mhgDMHW.4_d6(]P!Hc%H9-o3t4oVHq"Ii7gm
%XT%@qaY,VW*2,0*I2m/]4:M$[cAt=a&)T#I_KW_N3?rFnP%jN2@I`D#8!NqrT,=fF(]26G8"_U-?"6,/aG\Re29(dAU)F-'6aA>'
%Z5.6,R370t^2*fe&sOA=e?Hdj+r+i>["=ql#bi%j`j6nJcK]I6?lcjfpqj/<p;E0!VaO'IQQtC!0Bs[cfB1b13Bt35<5SI)P--"$
%8[fp!j6g!dUqB@GoSrDb1S'>Od23-5@m)LJ_5.E((10(t:_A\<ncLMM<)$kqL7_,d#HY.'dT<Q3D.-j#(:\jF!\uX5JKmJncI!KT
%%^h@I0'MofiSK)ILrSr)K^U6+_dA->X=VcohN4eXYRucA=i^%r_h5t=af.!Cl0%s""@6PQ`7,X5CPg&U]<K#C1&fZK%R9tFD%8KU
%d\gIN0E)Xbq"t*<d*GY_jk[(1TDnT`li5djpE-#JqXf8bqEP"`o][HH[f>p5s6Qq\RiEM)3'L_fI)O\4LoKnF6fV`6ir_cj7nel&
%(`4>L00WiMI)NC:eZeh!=n.h7.N%Wn]/(7&Da+g%7;t1Mq-c_hl*7@&OeQqm<GeN#_bF=]4D0LO:*`ZOC.fA@!rA*e[SiG+IUdsD
%.<n,(?oZlep'"7*714JK3K!MG?\""1N4JfG5bMfUrGk?[c#3:#?*!bH""&'*1jb3bUWD;YlRPR4ki<k$W@2Y'>k:6:Q]te5V$euK
%qpd;%;5+>^di&b+7@RY;JK^Ia5m"Sb*!$tOPc4YZe:lPYTWdP_('O!Nj;nCYHV*0!dQ\E.StTWHP=,ksQt!m@p4SP5g)\"s."Vs^
%CtR&D4C?ksGG[jB09ZNlQMUd$]KjhE?XmNt!N0W]d,10h#mB51^khF*=mEm@VK3U;gE`*r64m(%rn205s1UE@kJ?P#10NJ:U+]\5
%T'BAGb1ftMF2EA3LPA'8*e3s2--O;F]s9nl!+I,Es5>:UaH^4>_:U_YD3BllnXF([5]J(Zh7LMT8M,o3OF($qmg^q;Fgo%L$5GrW
%'3GmrH[6h(M:_]HNfa^YbtY7\rUDWK0c(Fpne+fon%-hm&73Q*S;PD$:qRf;Lbb!0Y":G%B&huLp>-iZ'jussI62.@"qS?dp:Nn$
%ep1oq2\:AEg!5Ys'bReQPop`p[@4/_eVG#J,7`44&X]Mo1SWr$..LdimgGe;']FC2rReFYcf_a;SQQQnMCLhcH@Iu+)[=^@nd\kZ
%*'>(p'u=(LhJH*cV_C8Nki+E_@sjX6@o1ZLQh$?r7J:Sn<%#N">/=0`]6o!sFu#"dMbGP.a,c2O*nMhVAU3jaegXcCoQaZ=Ube>6
%A>ScZ_LaZi(fcf($sAd)^tBp-NQFH(-.IW"+-tPo<1W5=Le'Q8]@C&f\<gP'*DmBa,i5tqb_%8J1.-9#*-b`C_ejIYm)jT;\GfAW
%.rV\)'\V5]`S@73d\:E\*"8*)Lom^K8#h/p`6NL>6YuUJ\IK+o#LW3hf*b_Xd3Af.Ro>K(Yn51G;T/)R[NARBn'X-Ait@l@<b);$
%Z2j$_%hp-A6OG3XJ0HY:p3%I2SUbMnYsF'3.E#N<%QpB<06cPI]J$e$/qTntq,$,rFV]4[`%;?";LL[?Y,&F^O%]9_VQC?bD'H#l
%IhUd.Lr>N55M'1Oht8V`"LtWLb`]GN`u!ta7Yaf@=bg]*_"NGu&,=^'5CATVjR6N>VCL+&8nn:B9o9!`%Ol,WP-1GcjaPtX8'9Od
%:_d/<HoHVX,G##/$m.ElQ4:iK7rgJC1-lYAc%7kZU?";kY*P;Gk]YQ_-)'KtLK./37=9mAU<$YAQckLL<8r_tC*MpC:u4W.1-$hc
%,+Nps3qo[L:cI6"C\IFG>F&7Z\3:TU?"*P=N@+4oZ9g#+*g)P1U'ET_5_ieD:[sHr["gefL'a^TD(Ste17Z:keJ>n&@!5p(O!8sE
%.>N@qTRU^kg6iTDY$aG\/6'*V6P9kt9_o)%HB?3IMOq\s+urroAV6/K:N=P"^tgBC%IdZG00rGIc)BOc0%037(\7I\YJs`9AF8#!
%c&&u/<n@t4PZA!p(HI=LZWNjtYXM_FR=4'=-$Lm&*f77^/5hfMcp)-FdI#Rch<!pd:rOukI%Vit&tge/K:gM=%cICU*i2mFS_=s6
%3g+nNYaM-&D0e=I+tn>U=Lj[=k'#?]PjR9J/meVQcp6b%E'&-']d]:?PYUY^':M+CA:[t`0"OZGI]?!Por[7tO3S:-+NhUglluZ7
%5a+]EbtG!Cmpjo!RB.A^,nH+i.6p5&*L\M]O/Qh:kO$9CE<:g"$GIVkkTXqpNo'maCuCNg+r:"HLTbcZo5F"to/REOMVPcW6M]XB
%*1U*>=3)#fC2;seG6Lh_Gr]tCA@JraX$[[lB8l:WILHgV]&Y5sU@W6j;GMi@9#42HZ?CVXmZS4h_?N*!r94*B37=DQ="7!ppaRT!
%phc:Z1mCpur6:S0;O8.QpVT?D2j_OC3cb!(*tXN<=;\A$C^GD%IXhQ#>qL.N$!uQdbOi8q#]SOlgA8pBE(8";E^b$\p\TP5K3[I9
%J=2L=)X2VWmV4A[fB&G];V95sc`L)gM1/]7^/7kXebn2I?!$uH^K_fN;:Mtp6^1?ibg*Vb0th;C/_Kt4%GbL0d%VH_U=+`AZTqk-
%=IPX`S%3>HT8'On`X2m/75u4&TOKdP]HRbIJjtYY7i.ll;A.F&V[*&GpWK,<&b"JZ)rD_Kh#e:B7XPZh1]UQg=V's/bgY+C%nuj7
%kH5;%'V06X9DLl@0tY@0da.V0ddMOLE['9la6E/*)>Sm?[Oerip=DXQ#_)Cs]hi*;!6"j0LFlU3IDuHVl)n&S)T\boZH1k-aP?G6
%%HQ3YFAfZROXprP3T',D`akLr+Hd_M:51^JH'Zp_<]hNDDjr>.m*CI[?tgb,+!4?AftG!sZH&<pMOUH'mip!mgni49hlaucnP*I1
%MC>mfnV,5GAW%\mL[bn;-A$8/"<lJm)]"MmJEpV@>9_-dZ=fh2%>c2LdH,(K+89?gi$4\Z2njd7F.e##^YG4nn\3h#`r:K:1Kb,,
%nMN#FVWWouqZ:?=Z4BV-'^)SEN,MYjjFO%)nj&KFedlp;S30U^8ffBe8b52c<faH5D>CE8;/YV:ncO"Ud_0=G+SG+4?`*1.oWV"@
%Z<T_F`hatsIKmcQP+P&<k0fckj_+/+PO.aMq3bb"Q0)eIC2'"ZRNXoejM:-X)7s.ASt?>`c,oN4p4*-j=FMSiIO9m;ICWg]PTb7,
%/FQIRQbQ0EIXd\>d!reKdfE<F4`:n.>nRPWBmp8#6KDd`:b=nq4^Z$MZ/fQ5=>0K<@egm\+>?K=L'gDNk@]09Z&U(oj!0W+OlU.[
%`.B/UcTF57^URY=9T=:('V\6L`ZGbBABE0e23u1I/3f=cI\p4r7Ku=?@%4danhWd86[g@WEm;p0:V.=acU?1&cU=bnBB%Gu5P&J%
%flGmjV9fb/WgrHkEO@"P1K^*V4o&O0Pu6Fd>HYs*bP@rH>Zd/dB8HSSV:dC_P<;!l4AW8R)GAC%bGS=c\eN?!*75&VR3r4d:X@\T
%!0kk&bdhT%4?_.E4juMVP;GG_&q*hVqjUF11X36Yg!VZH<'kmX8i8bQ/lsSe'1F93F/7X?1X4?(aQHQ'&XK"[T!FGco2MZQVItd_
%B>?(7;#M7[:o&>^`^b,N:!`U=,Ch'()&K"/gs\&T%eS(a=$*`4hR.Q%chPriPqM;=GmAZ"QC^Yk4]<mp,D4E/`Au[)4`a";Uh?E$
%dketL0#c6p;0:5B8")"mF'C/XSp=R)^.crSXpaPq(&FuEfh"#ej;G!]q;LZ3%I,*@KK4hSN!]*Pfbm],ac``oSO#e4ZSUjA8O1SC
%E';^bVGi@"?&Bq6Ni7a"bhE43)ps,rFu_6A8p2Q:(3F>\SZ.pGWL!PA>B"M%OhE=orCncpRHiInCtT]h[+qC>SV^7hcG[n?G31-_
%*q.f644>`BK63\qB:<CE_"1K@2dVf@6"Q6jB<l)]fOZ*nSe'>n-VNG$MH-J*)'=$"eM0.,6p5'nSfHBG46)\!GnKL<Alo7orV98L
%/_QOH/3B%H3tkp:do!G-1+qZeR't8F1LVJ3Fs`(l4-MhlOtAa/741/1V4*s3.n-a"O))ef.(W%ZZ1'VA7oHcb(uh7WGsu>.2a;,<
%5.2,5"AT'C.3rP2RP.C\JBLHH1I[K`La382!u?up8SXTJ4`_'q:+;cUad.!.U)oIRD\#6,7(Q=OeUUk#'%V#';WmcCFBA[7r89ZD
%(.Ir&\lt+nP;C`F1!,S7;<5ielH,H)adIB2:!Q/S8^8;ie`9ESj@gMYS8":Z!M*?$?$KOn#/0FN3Kl!S!sDEE@@4:fH()[+PNt`%
%1HsrW)bG)4LjDV;4?9WMElP;k4?4)Cg8cN4m-2Noj:#Ch95I1`1Z;U_e`7,DKuo`=AZI.jiZp_0R4-VH9_P8TZK+[nH#b5=2)u>R
%VTG5bCW@7U<>.H[(Gs_*C9;j9:0FA1C\#RX?_fKqOGKqo=bI[SYb%D*BjQsn!J.CcB8U54&3l82`%,A2RRZY3Cln!Wp8gp8XNQa5
%OI^Z<*5Wgl-CftpZ65,2ia(%*lqGgn9X3ph?\$n!MsO.uj.fSZ1W>M0kiO)BR4(,L)4(tJ>=Z=r99u-*U6D-.dULmt@bDWpm3Fbl
%/NX'AWb*e-dS(+12X=1Nl-eo,HYYE!dl]^U:7fB/P\Wgq1Ht(hnk.KpLt]tr4?9QiG/g^D/NXX6$;O17cM6GeV5`,c^-\-IP%J@D
%]4)t!G")[)G$E.H'[+cA;$u!E.+RZXnt\pam#6k>\%PEl3tk\QA7sc#*F#@_:INl.[lRfjp_jI`]W_[^Pqi[D++Mom*C)[@:kNR!
%afoek-TcCFH!5Bg=`u--Fp>bbTh@ZR#g^dq%Fm8^+PE1D8XEsZQQrLR47i/2KL'@`?*5UFqgMnV1M_.\>BV>tnq1ksD9YNC\t&Lb
%H<GD<>LEZY.?^6YU6D.Y8L6G30;mKk-p$$!QbmU&lqHs99XF(ZZ0Vl)6^MZ/_m;-nZSUjOljWAFP+Ak_Jr/bq&g()U-HXR.cm*'H
%8XC[%+Zo;V_!9Sj^RWQ.gO6ndg$TA1\n>ZEAnQc'BAMG];pqs-9sZWgQJ1iIl$UMH/sYeI\1HlRTC"pTfpS=/Z88u58Ts7`1@bV'
%Agb06X#C62[f_[f#+$S6bU5W&]rF2r="cA.Tgn39Zdn8]YL,pB"&juApk<1F>.hYsX(n`G"6QU1>u!CT4is,$a-GoNI<N"r]t?#R
%2L1:B4WfuB(&(EqcFBgUOIV/*:!RuP:0j0U\VWF/';^k^M-#o%9U)(.bc0F?QCQ'gS8":ZYpu;fW`CCp/BO<WadM3i3n&soI%XS8
%@S%1S;(a.dcM5GI<dYQK,p[,p*9^B`kAjn*'CX\h9#i"bc(HpSdkj'@]LjQa0;P&,BptPP1XlWt5*\8kF-B3JT9\<t#J1:)3HGj+
%-""<J<q<q,4haV!i[gnG!V8O&#3SkgfeN4:>0*Phf\ZVp%pQ3@J_,-KXr:WLTnqi%ZPCl00;;$=UJe3lJkO4L1fdMjKS*f8XRH:g
%X5mU0.@1?01sZZ=Jrak2WslPp2gH!p4WoY_,mf`i-#$U`B1UH=W?u>l32TGFdR;2KdR:&]C#[Z"8TR9M,\^"f9sQ%((X]U)8K'7V
%Bd4m;]SL0%&P_g?RV=W/5#emp/Qq(Cb4W]Sb5!+-C1DiD'[]$'d(f@dS55.!ICg<Cp]D!ZU)@!"1VAMj]J$(HUp2,41J;T[icGZ!
%1q-%/8XeVG1%s;g,#?YBUeK4lXsQ`/\#[T9D9HY@Bs"f:,U?E+9(CXI6[;c=X2c<rC1.k7J;(mV!U;,13PoU/1u1c<nn"XSeVY]`
%Sq^nF,^9in-<I8MK17Cj0]a"nKMn7O#?p(V\=?QT`7lUhV=DSn,9KX7A1aW<P'T`7mR$&NQ<2.,/#<QH:eGem9!0LGc:Veg,1"dZ
%BsU^+jeXf9=K]Y:Bj)%X)D@p)<_ARgP\++(M@UDZaXh5e,Kb<aKL*r)QrY@D7%ok-aasH%rG"MHDKkJK9&i]+]Td#A.F%?[RddJI
%MjCEK;OTC)D<Tt9%])!@WT7fK=30#A]8JdQ';SZ$F'gHAe\#$K^03$+M'pYNA[[W%,@t=.&r\U:&/m@`it#@s"@ClTL;U"mC8e(N
%@CD&^DA>&)ZAP)cPnRCoT!M"[Z`t.1@YGY$KpmlZ[54MNk1P=1F#JJ-/JPbO2H`J.59Ci7CX0pLC6#6IMOM/A3Lf+F2:X0kQIjF3
%:f2:t9$ZRB3Q]t07G$R*XeKEQ78:+GRcP8AXbE:)=4@YZW(C;m1Tb-*#)X^<T!RsERV='%k@719PR4'\;=ij6s4ldX4tggJD-g*"
%cSrM2AlqLHn;<\(\sSMDZa#CV1Ms7g-;J*PQ&d-OCk`bKf]Ti(4D/`!9$ZS-;OFe9ZZ^_up0QGI^!>KFD1Y9kC;DAD\*1Z&*JY\c
%pf^*g\3?uoNBc#k=EC:k$>[3ff&Y!]CMNOt9dk"\a`9=@$<+#O!sYj(A53G*.'.];@'eXJ?S-Qk-JUIm@?!Jl)]`\]`X6LAW.r0X
%RoFDebH#<V("V/.QFg:+=Au?+k&rW(h:tDi]*V@eXBAS+e#]ccH!sFJ+a;t#28]c:Or)\C/R@mT@S*!NDQL'S=t.\k'%?,WJg_>a
%4?:bPospMeM;)=*(Y76f%54e#<`h/jYU7"5UmAWt_O</i[BSdOM*6'(P=k7TGeo>eYIhkr2`IGkDJiO>gs+T]j,8'*e`jGI,;Y*Y
%YD\WBBj2N%GMW*fpg5+mfNMhqg^R[O]LJQKqO/YR>$oa\^*[2j?W2koE'gBo\NGN),r&Gg6&$c,O,bL8f/u'rH3VDBQ7pSBKY&S3
%YH`jmK)s6T=FJF+ePKUoP;7cs]POHKIEbLI)4VhWqO2@\X09'j4G+<C<aW2G^8>%]c1:_"<^R)3lYD7+f-IE#R9%,_j2BY,ces%r
%c*W@qEf+S4DWZbpWNUSjSCcBfeSJ"9mb5=f`ZK,DIEf"mRc3osiE\/M/V@R+2.=L.I8(9,qO3mQ1-!1pB'b^M;5g\/8L9"1>:IeS
%]NmV-<]^SjaiFlQi>$hfGS48_gZ#&Xr:n/GlPi[=nG7YRb&!(p>FA471)oY,P/o)Da9gr\AU,K?lXHqN"3XO41Ii/%Cn;YL4HX-?
%bEjSs_L7W5g%YZT$]??PXN]g_C+-Cp;Cf(V?9M5hbiU8C7*])\7*b1?P/t1j4HU;Q<bA\NbbeR3c13WZ<^J"NbA=bTfd&5WR9%;d
%A&WI#:ZQbgc*Y'LEb]?jHKL#Q.'n2BTU4@,ja:t$mb>Cu`ZK/ER8(.GS)Ip:iI*F,23Ch>bU1P>/$fPV:hFd4C*L^!BC)rfLcge5
%V4,J^Qd\@JRq:[Hp7mk3GJ_A_FH%@cC]"04j%"nD5=3io!KtHh.2kE9d.e3!`fH3;IY=0[,K,N_Tk/V:Pjnj?N.3iS`npobkJ.#H
%5Q'Jirr*Q@r5;P5ofmGiD[Z"%s)&pm4i,kGW2ArggRmk)Vn_&;k5J_*l1SaoV#G#!St>m0H>%d(\%FQsm*k@"?bO*8I&4URgW)O'
%._Y^<kcQ`!2ESh;gTDgls4X!=U[L44(2m.0&npL;WJ%IM=eL4]s!.nc4+n@:=O:gQVL`\Rm8aD@--ZN2Z:fJbQ$Tk*Bj^kOT1R/f
%9"(<]Q]f[[](?N!`]r)aS"?ZSo%60h;3d0DSU43WLQHXUKS_$DA4!Uu/->s]4EYRi.@Ze9*\SW`Uea*mH0EucO`oMKemj''4;Umu
%*p?f`jZ$sl,]TEUU=mf[7*&5$*P/ThWl>BV@odf$d"r@/RFK#$83lF=Cre'+ZHE>Gl!hDO^@-&4OVVWAE+'M8L;J&Q]s`]U0jf6D
%2I5(_^39<^!3/r(D1Ir&s680op(M7$%:'Lo$YP[A$LZ)Op-/T\'o:RX=ls:T]eXn80TsdZ40d*W/]tA>Cp`e$K9qOWRTA+b`[-^;
%hS';4oK,',h@m:ilt6FS;U$Zm,F[@&'ku;d&#W'Q.gVun&`uU':5NUfW@3$t\j1S6i;d.UI*)A-4P*.UfK9\XE.I[#ip:5j;jbp4
%,qCAl(%$eX&7aa$$/d:;TPfnY@mg-!i;HT<7R[aDUSU$VI:R?l-JFsY"+o2lRbf8L!BbSZ7RKpo#PNrY#O%?+$NhuDJ7b#!X>gKo
%>@a;u/=*!Jpg_]B#B*"3Mrq0NOY2R!G4`V!>l1Y<&QNTtp7",q5EUR2$q%ql.1L.8hOlWI6mh"fPF;M'1*$?K,q5QQ8^D3rs1XBM
%SOVH,PcU]:GF5gE&p!=[CnFYX3BeLr/W_\2-a?!B<mr$Q5"k<tInA7]-fBceG[n_.<7'TeR129DXaF+G<(d>b6##tLTo2k`?AJ/i
%S__O&bf5!Z(1!s-Ta*WD?I&iOHdS\<&.05LcTkIlAJhfZbeSFsrL1[k&:DdE.kfHRBinf<V[KBET(?^@,d`fo"Bs71&))6R3_[6c
%#l2ok7&m`%NRQ"P9WX2YO[nYl/0Ib_iW6J,Z<reK!XB2R))$T39JYJ:$YDt=0UQ@#A-U71/d1*Ifr+QG'EkC"TRZ%oU-BQB=5aC>
%!)L#[8tH2M"-XfCHmIe2&:2TRBC:=]//l!a<pt90r8J7rq<MB'2AY,H@'$6t=,';-$f`7Q[k.YN:!Tj28<h5<6/Odepb-DTnhQU1
%I)B<#p%,;.bMl?7BpIWhYRkCq6la89AQtDER5G]sE6Ja<[^ZXYb]c)qAN/<RbthHogOg^]FQ;QnU[[#ZTK"%''XCCF%Ql*KeeP*G
%d%^'rU:U78mZoKsn?XZPj,GHB@@ns#n"2'=d1&bB]cY0DDu;e7anA7`fm]?&Dkl2]Hu)?;j0`F0Q/MAclcH43-r]aA6rUjD=k`e3
%;Jbq9ET<sq0<#;RI390Y1#TXDG$%Cr$gdaI2`OD;OT=Ad.sDq+XJX\e!9e=m3!9S^P[R69lG(D%BC/YQZY1M1euUe,-$"ML<FH['
%8f9c'b=3pFgK.h-00cqm=q`Lhm&87FNC[9<Z<j:aI2MAdC]c<2*cqG62Zk;$Oo\joo<97EUfsoNq\/jk;qIa-!8En+DXMA3g>)->
%P1JkT%G;J18N%W3al^]D0A03P#o`l6/D4pnBWC4?^%crbK/BEXOF&m&!;&G3U*6$'GHt.eX0-`*%7#gb<l#P'YnT`N9*;K^92#\A
%g+IOQV6iBfTp^/[P/K[qCka/CdBnMD-.^<VB!HR`b6+[b6s5p)RA>D,fEP<_'q@g[]SV@Z,ubBl!*88^GrFAm0IEVH/)Ho<h01W`
%V&^.B3K.TFg,^25:.p_mU2WZ3V+?eJ<tt$ql8Qgsm0+skJ.!Te6]>#?LWa/^h0R(^_dQk9We72fK7MS)+3Y.mKaO$6oo!.FaMmY>
%(*?1#hc:23A_X/'D;ce</EsAE;=uC6/mk_7q-&VJ3[8"$*g]'H4_HEF7q=lkHB"AH'?-5uW>s-5S4sSm2.bZf?%3T)>^o[o=OQ<6
%&`$&DHIEf(R=>)c8]KU\->N>7e*rHQY'T'u<HIg)1OgcTOApS3R?3Q%W4/bC:5\(?:18RE,Aifq);EN>@>:L,_-Ae?A0#PnaYr08
%*XD.Y>8\Q)5m+?tJuD75%P&!,!7Gt,KYARMekUd/eRgB`^THp7IDh-]5k6=_)Kc5#o5#*XPmSBH1P`rVNta"LTV;R_2+CDRT/C3!
%7)/%MJj*rj2r.$S(NF#`66YkbVl'Df/m$`ofekN.fnBNHH5lBI2Kb&VSS?!aKTb^)KRo">CqBk=!bSUE?%kgP1"C+7H*[.9lNhHu
%ZC,Zj?pH1nI*Ls%,X3(a?EJ:]0)?r%ib#/-TA_sC1#pg:c]]Z>q<eu.3rcktpE?l^!sci9N(fkGgjG5X1Ruf)F'13<WJhT4)a\qT
%H?XlV?V[p1:J&W,XqppaN+[/l>WO/latrm,cc;Ca8-pE+M+9CXGj&`Il<Iabg1)rP,p?X59M9P&(?ZsqTG_?^@YRs$<K=\9/8!87
%UFaIA/RP"TLPG2-h*fPaqcr6#94uhS[4<*MffS3(FcI7=VO(>HS+55df[GNYQ5TQ;N]=X@+.n).!=Lh(EuiX)O<*eNK-B%UWFCK-
%K&3ic+qE(,(?nsO/rMbK)'1G$4ube=l>/1>.>,46pDU]D$k#6*(QH"34L_:?ir0f`W>js!3H?"&V.r)ma+p.#*C#-kLuC]Sn7A[=
%gj:fIo&sarUpd,oi/hF/V;ItnY4ua@S%*s+Y(TGGe`I-Y*\aIeCR7f<'4pZ<BqQBE=,DE*?U-<BV+m$pA\jVn[cip&VhYRNa5VLY
%eXU,KOJ5VfQf.-1;MesgS1uN"huk8R)+cWX(:9<4`e=FKNG`3iAB&s)P`%d.R3>[iYtNg-7=qOUiL5"]7:+Y9phJLh_a:^Mi(HUH
%1mZ=fY3\aF&RT\deoN]*r)j`<HB/t2If=1*V60>tAhJt-U/R4H\PbZJ6<[L7>o&!F^9Rlj1jhZgK^H09f:G5GVY2p>gSY^(bCI(-
%`N=pW17HZCILH\CiRB2+iD5[kZeBPN\ci0ZPhrnk1sDbT=?;?X?,VsoEBp?`X&6rCaUt<lF?1]c1#)L@dtDgm$[tVUIV-kD8L&#,
%1c$M\ja\+=c+kE.e`s5D4@@'ThB&#;6osR9pf>_**SmI&OJmXMU;;)a;6;#D:'od,P\^atE(]p)NC`FMKuU>-R<B@GcKKKq;25_3
%L47lh]ribE,m'C=kW#FArA"nVX3/QTU)%FWX+P>Y)+ei55MTlHQJNFq2P92tHm]:n<t3;giKT#'"`!SI:!=D^]#6&Fh+h$ecJk(A
%,n9`Hf7tu,G-B=Wp?2c-:Z7N@9sQo;=t`2'TF0KkQ`2=Y8+?*jrO#)"m06"G`$mE0V]%:H;\Jc#g>kQ7B(8GVhpl\>;tB)"`6VN'
%.1)V,MbcZ>Xk0F7&uH!QCBd3kVsrP^9";N^ntC"6W2ML>iP`#qlc`lT#d7sc;.k8R$i@#aP/SmG5-CQA`?ts"XX%mY^6@U<78"8c
%,co^IM,SFqG@!$Vq'<*HEYkW!k_`W`.1&TM1^-7Z_4Z57n\Q^].Om;*^S&a-cbM"**-E>#)*0(H)rZe*-i#s):_LFV-TRW]?FtYP
%f>ti*JhQM;S$"lDP+^]@,@8pE1>N1sJq6i5FpgPRnH$q<P,e:&>Vs1lJ-0<RRoNm4ru9pSbj_n0,<)ZmFtd0aA":FqTMP.7ci333
%nW;0H3OV,u'_FuP-QkS[;bLC]Ym*!)r@W9'N!d6\6"?l=6=YJdH?4RimNt[g?4EH'>W0)Vka826I,(Msj=u9C"aDt4-?rfEcbNb7
%^3O@iZ0FP/_SO"ib5kk2?jS0>rd6)N::k;:,74)s2_9YO&l:Kq5`(inAsTEmauYGKCY6j6%QdpYA+sR\!GpQI5__3bQfM8s*&K)$
%n"\!qajC-1fPP]B4'`IoGr+IMmW;$\WK3H=Qc*/2p(F!#>lo'fUk^n[XZIBT+5i>&:P@"j<L:L,(3VS@VX-9#(s/gdT6L;?c4M+J
%Vja6B$,X](EGl1sn9'cG`Kcjo@f)AaB6Yut7-M]X:%:e0P2Acj%o:=k5HZ.O$fC).SWraiAXe3[m>beU9AY:gMNQnW:nLuT='V1m
%kP2NrY1P)h#\0EE-@UsrF!eNW]KSLDJiqqH`1Hgf4:)c5pUqY8J;us4O!frXOb@UI]MF23P-q52(Etd!'0`2t]=16N--dnhG"VC%
%JrpU%Sn^R7/DZmS!b]nT882>!(aoTKX5F+R\M1Uh0eB8\dA0?T,-P,daD2(/6=%u*dZBm8E]N:7Z;8CtZ^8`j6YI<HT);iM+@F_U
%'`6.Qq*%9EE+<bm-[LKu^uk0X(-?S-a'.UPF(/Q\_EQS.RH:-R=]MrLehFG@[@IRCQ8CNcO46I2E1d%J"+%LZfp+_gQf74@I0kfB
%6HJQi";3N+bZV_D*cT?iq5M&t,V#3JBh;ioLG(HQJS@Huj.)3OrLR[NG'b,P-Y`ucdDVtR=(,]H/DTt2/4>Dm#o9OpA?)2G6FrDU
%eAO_h[+V)n^(2Ar4<+g;'2$R2"j@n][?*1<_kF$fj9)UY2\s2`G,>/9b=<c4cu1`t:FKI_F=^TJ`d@<m4/;)rl1h-b[Jr@Kl7'D[
%AU*LdkO_=XqUB0?bArHR7S^tN=40Z7`[,hLQtL8>U@TpD:PdjC\n=d!7e$?@d2S[5]dXdofH*Il=l#aQ/H'osCR-=XqTj!KTHu2U
%CtdAo<o%;\F<A6A8SWtJB?;h(cC2P7r0U.]9;%!L@[X[ZV"0c*R=1[9o-ru#4eKlh6QY_jH-[;`QA4Q;I0j'Qd8q78KpJS-($V^A
%ZYVed)4.h17ZSJW"R8i"SnYlP'i2pmoj`8Of23p1lalG(9E_uU3sjr?*)BnoFJu+0?.FBOQ]j86X5oJgG/`i?n#5/?EniU*P=#$2
%ihY:F>PTgAC.ZPEp2^l@^@n1tKBH:S5okXZ7R/>X,p#<FB!;qbib0^GliSTWm/I'W3e"pH=h-b:TNLW)3+=Bt-O8;c50SS-\YjLf
%@aQJ_J22>>%d_C[XFj;i:[I\(Z+7dGA;J!MX+sRNi8>H]!tU89)N4o=j-Jd-jgb87co]WO4X_C.BFbfuXkn[JEqB'I";eThI8EJ^
%i')*+\',Aca\DR!"LT]Z.(Aj[9ZfMMK;K!I_a.S=LN0P$mY;bn=*.OSg<2XKK*cW!a.Qqi9f`P9GGbo\c(2!>=EErtF%!II)g<ED
%ipS>1`j'RP(`lMEH][+kOA4)GmV4dNci)5njbnTR_>LirH]WgH"pYF-q9,CK=@7/2T;[P.f#J6/r50Q//0VWUJC_fuG7'pBUpNSk
%,G&*!KFrHW!f@#PD3;j@j0nGfJ:!&*B#'+)]JH5$/LhZHjro*ji92(k%@D9r`<L:.#hfIs]L@#H<o.<$!E=!Rim0RQ]u6/-J!pB$
%[5c\;r`VFB"7H4uMgGUEYsl\7h"X:b%P6;.D$R`?0t@C,[b0F!J;*\.T0oJc,k+("4^o6^fG7WnB`)8G2$=csh%lmsaR9\e$kRE:
%Hj1_(`CCHs4N()!0\t`j#JG"@f`6'%i9f\5L:8:D!6p:,DueL*co?RF/\'"*0X/7pT`_%H,1Q_j+%"\T7_iKj>"#%"nPEkknak*$
%H3B56^St@\:_3*j0+\ZmoNs/<Z-D!b'Ul9,H'fgIC!<HSV<=!sG7j99"n=/\OJ*3a^0c_lEt.f7r4fuDN+Iq&8A[*.Pka9D.>[&&
%8)R0bY2moWJ%%(/kia[ZNNhjHAsg!-5T#buFsJ;K".;r>[uX'eq?X=tLGkrm/&<^r?clm2Isk2C6nD"r#$]hnc*)Dh+KF95<<`(a
%k=Ya/pNMgfrl&f)Hm\dh[su'jj*An3aPTp=KHjj-42TZ(=!$>]f5$H@frnI!aiQ3e+3DX^W'J3cn#JakOY9]XrVX,HW'f8d^U"OZ
%8%u#>8Ig-M)@>T@?B9cG?`lr:0YX_;#tM_1.VXC\fB\SR+'u*D_O>ea2X0D>A_$'an;g))o=R[%norV5iP=%qQ#QGt[7^>O%ob&f
%5[U]r&j?/aMC$Zfn#BM'^%lEn&uO:(F\A+Sn#Td2U$o'g_P+/60B(^<l^':BY?!@9gt->/j<MC>MFf_ZGL\G4CjiFK#n,kf=sdD1
%n#C!rWg\47CSL#UPta7-p"Ca_rGm&055><R:&F;//"A<[YLbaj>(9>5PAL:QeN)ULQReUppV0hrKTk:nm3Hn$=1sgaGqW2\iFBW-
%o7VD_C=O!CI:(eDNdP3qPK`n?CS,.VrUfA&<=%K\J,5UoH!Ue'norSMiP='GU%[N]?4XG>r]imd7dfB,.%L3U<>84-AmLWBoT%'B
%*;NKL'ZTV'l6mPJpXD^laS/\*iQ,)9UbJ!=YEHaRI^r2\-bli_$:hh2<_>"?@^QnFI^rbl-bluslDn+MC$h/+hbu[l,@@XHg1S0*
%6%sAeY+`_r]j=,RA,hQM.NJ6/8h-6#YLZT[0OCoZ_DcjT4V\HTB1:?7o];MkSGRV4(!_9=Y%jU,J]]I4rQa+H*;[tG.NJ;*I?f28
%="CBA_;AC*oi3m@=Dan/DqA4XJM1&/ak8>u>fk*k<aB.p?EUog@=PQQ9%<T^C9QK3!'d1R$KL_urKU(V(Fu``amZ:H_L_0W_SW!"
%f4"'1?a%Dbafj9)agpl>`f`i>:H]I_ioQ%KI+MG7Z:%E8X"*G+VG)M!h:BHp.^Wa.]iq0WHg$Af>-b3C>,NZ]lGZ@I<KOE7C>G0M
%O&ToN5O@"e[;b2"'jI'00@t$rf#:^k[c1KfHJOl,q-)kqc@*BL$YR4Z]bRs:fB]nt!rdKL(Y$:E2-aSp^0&@.7J4qeY4mWU,1cU8
%!8ja>&eEp>W\3fJ?E<CD8+:P1(WPn9g9-q>ppKCiRrS8sqCYX-Y?#mFZb0K%'b0hS<-^q(ru6)e3:u<)06%8(XnBPE]NjiXP@(Nf
%MZ2Wp.__WYqMgpsSZ].rI7YF;e[hsJiW&PmYA`Qf@LZEF7t/,Y9EL3Weq$E*ou0NW6j@#%"d@TsMq)2J)LSq6m)7;d;%XT(DI9RR
%P8Mc,<FMWu?`XWniQJE*L;eu42ep7k]jIiN_hWZN4q)MtjU/70eGacR=9t.@UIn3,q29B)ZFkX4V-(qtr-5?rqlhbu9BNp1@lX&P
%at]\'?`kE5jPHrfA!40FZ$m*/^Ka&??iWDt6P`UQ?`tXeYeUWhA/N(J/'1+ioc(;L0jFP*C,-e(C-@sb%pl@d'BHuf2.\Murq3:s
%R)/f;?("sg`QBs+r,QYB!!6K/0)MZCH!4j(6^<)%dL6Ap>\aO'd&Y]/![W0#hFuiOY?%/68E)RCcJIjVT2KeYe*Y\s1CVXRQ"L[?
%p5Re4#W)?IopHqg?`ZI*d-@YHBS8Xc=G$eXi9OBV&Z,8^3ja]kr'i!$J.c4j7?d30C,O]S8,Dn)['(sNa3(bNkl!$>BaUtlYrYV*
%I]Ye.:4BT;%3tUfNLC@SMcFN$EfI9QWSQLg?`d;F=M.n>-<'l^C:/STs*D@^"Q"X'@L\+,>dGcR%PLkb8Q!B`F_e7(ip2kF[rRG2
%euiF0?ERVPLOH"Jm9\'.@hifEU/2p2q\KkS7VS4.AjSp*Jk.QFZltV,;H4\0ig8ra0UaXp[cp&R0EeYp9ge#,]u!JFoe4h)W@@Jg
%X5$)d]hmmh6h$#kkR>S*rq]^rr.fe$<4?/mp!LPLU\+%Jm-06(U$7kJlTu9791e*PVrStS=d3OH!ZoH`+-G+V\c>oj(H>KJ)8a-f
%-WC'2MpP_-j5S+P59FciY&m'4%sS6N7-@2Ah"Q$ib^.'$q)S,)Io*GGcBsDZ@C=br?1O=Pj=fm%(j)lOKN>5YCF26"rmqs'2pp=o
%O'0_78?W^qp<q1j7\AmLae/J0DP(DNjI6WsS1e5`!#NiE\\>GkgNIU!>J"_u]i?Y6FR1X.D0i8$r8\*\gR]bD.$B>@Ne"QB\P"_!
%+c+dYR&pD@UStQ^>m45s)<91::R?OXgQ&FU*7.!Vdj.D89/J@%+s];&Q*_3:*IU-De_Kk:^566VjQgYm9g'&I+Ns.mkSPbWF1a.M
%`N@)aKOpWf;<)=O!^2FXqqe.h(_NkiL/15_N3f-l#PP,+1=,(Gp"i+Nh>A>^$Q#tg\U8p7ZAIYBg4=Heo0g(0D$jBhbu36V)QOPV
%/$(7((c,m5_hX+D/eJlro!?(l@gW<WDs?S]\Y^&sL$"gh-&qH'\Y^E]?i40SVoJ,<BWaAIm/[N)atp[6o2PqGLUVtZ#ZTW7,u._d
%]_cNR;8,^!3UVfX+770"qSIsc8*RfknIfPS<3XIW6NMP;A-9iWbn>-%h4E^$j?<n(EpDXpb`&QOl]n';.t!hD7RY1'q]-*_2Q=[[
%;keIE*\_[f@@egZB=e6s3g'[q^>5N#L_IW-'j`.>1^-d6YU`ttccVFsNE[A"Sh@]N#7D7rTHU?,9a'?K5C8J9VU6\nZLT\nMkR\A
%Lb%FCLd@bLl=YD'.A"DBdb*MO10tINO2E#-BQL?Q3CpbMM]n6_+bJm2I>Bs/Y@:-+*h\1%Ltr>!-,WPJ<@MC*PH-4OJ"SBt=8_'*
%g\1KZ#Q1<4<(r7dG44W#MiZEm>-pd[Z/>qe2i]7R=_W(`PBp0G\MB]0#(*^]n;>K'!Sgf:QgAQ:(E$bV)+PdK'F.5U0ocml],38-
%N!*LGeUPZ,9r1Y>`c=]%Zg2t'rE@:lbh?gq<]ta)<aqMhT?n]X`4"O?>+1opo4CP6ldaO4WHbh!f91n!?<pPMRQFV5,?BC"\%cXH
%8KF>g7]`)X,(*[5q_0JY2+9jh=-h%s^[)4f_+Ds09X\W"m-VOrQA+.P/Y*!$B@#3K,qWdf(NtYfa`E86%j+UeISZsB6B4>\B8Qe9
%0Y+A<l%(.WE<nX6"[s#foMt:]-LF_,<M4&;MnujC.MR+nQYd#JG_M2'VLGl8jVbU0)>T8TJZd&Z@>#No`u72i6.@cr%bT%?f?#6<
%&1F3;AYs9.JN=)nSun9=#a9*^Rli0S50p=lb4a)16Uj`V)M[K;QZ/9^<bgs@m3U:oEr4CIaDUnNRC<&Aj"5Q-C0+(^W:7&THDpT(
%@U=XEf@KSRC)sb8BhXOuUX'`5H:#Pa7[;8\Zuj&`NK.CL^UU"i7aK$HZYI<53n)$T>X>.&+PKK%gbh,&Cl,t6e`_)dW\pKI7ZX:=
%dA'Yu3\7A;7*2K!Vq60YHIqBOHpOAlcn!:?9V4i&dH=B,qAcus]6DcfYi,4=2=LA]#<q?ml+]tEV<N&IPCi]?qA^SEn*BgtIkiUc
%G(mY[jA%iL'flD)]jFX5,D&rI#UCmJhehLY+&r)cXP"j>@4FDbEI!P59$a`sY"+b;W+ft,.X`tFCL/rb%Q!ku2jJh[;5GA6WH;U#
%=&eETYgC1tWUtf?7CfC>-F1ZdV&rQ6kst"g*Q97D3E,11`=@qI*U1=f;s=+q(RN\"kXQ=eqN8?aYK.8[2kA5f_kTua1S^7`e*6bA
%Zt,h3dHO.8Fo%5h:>]ioXa/C[R$jJQ2k>u4,D^?kkrs3lduPd>oHSLL%^\cqO#e:a01O9J:<07QGFa1N;5_%U[;]IKd9K[]*DS-U
%Eh/4O3\:`D"8BI`#"skU4//\&hrrgul?&*0d&WaJV$eXGkQTfH@2`@<miQld,MN8QC+j-V<So80^3/NZ;>+XXR`q6gf->"V=$&`B
%V^erA'Z!MVb7WQbn48\t#;6:S#b?MSHkB7Bm&AX@Y-]t9\>F-=8IB?lN6VK!OBRlcL=OeK,Yegc_ADM>J#G/;/V%f*@'c1lB'^Je
%VW>,2nt*H[@C358+`*OHXKiA2]6.W34m?,^bG\4WV))Tcqru7\nm4"a50LKOUYtV,OGL^kEZc\sRl=3VH)N&YoR@1hJco5MAL`;h
%GGF`oq,h]lb@=0YF%AK@>C!V,h]u(@\T"_b)rrR3NemPTUtAjp1AjQ4;]0aWSH7u<h,`C$7NZfBQ#Dhad#YPlEQY>iY5&mU#iW5J
%6.8msXZaWk9A"fZ9S0pu!5rDqQ:KN37#6q/rZ^3Rnlm7'dLg=`HsX+PfP;GLr&'kYW8m5SR?uAKeH4Wgei`Ml9PIkdQ4V*m)DE\e
%))4Zn3eQ[\"@Rd*4N%`b2X6Ig92&7dY$TAD8TQ;N2(#QpmF8[g]#D\0R'K\^=Pmk#BTJU,K3N%I)IGasRB%k2I+YS=+[[$Z1nAhb
%D27&aDW>?`*9&oD@OBHR%LAfmq]=uW\rpV>_f,uErH6g\ZD=#9%q-3pp&I)VpD1U6Sui2m+q-aO>l>e!"j>Z#8e?DJOock]Z_^Z)
%b+FYS=_ZB3P$ue-M%0e(p<>b=]d2Ec\-B\RM4LBYnNp:p$ouToQ1o,h$rfS\RM6jZg_Al-"GeHD$P=%hGg7S2^o!kK2>JhIN?"]3
%>&-a%LI.[j@9"ikR1P3<P3bZZ!O&3?D(gERlU(t$OogcVA89T3a'*WA6ubpCl-rN;/uK4N(oDQ7f+ate-u3$kaUnG*hBl899Gm:n
%1+[l7Ff&_rae!_p<tu@i!bu!"5Z"A<CTO!RlFnM1P'H(%=,*^F&5WZRLm:rHbo=2H2H)%TJArVh-YhnkQ;hO<MM?uOU$8O4--M(,
%F_-K<rX4k7?:AtYYR&V'8)BiiOr^5te$.g7A)E[*]SYVPF/8cQA5mP8lUt1kp,)^uW6hNKa=SF7C>_a`29KKaO?a>Tb?lRWNFD1?
%4gA%!!DbktlBmtHV_Xo,Dka`T+6h@id'U+7M[p%TIhH(Pg;s+f(P.N+To@]E#s8A8/k1^F!Ke*VMl@ViC8;J/;4856Bq5<8:-DDp
%"?2Er\j^,@^G\b`o%Bs6H^oA[`I/FhCZe5Als]a&:=H*Al=:WM&C%P/>#-WEP>.1Fr\^P#JaFXc%TF=ch3NG`&n:@<MJeN(NDWoS
%)1j9*Ke<P4!jW[<UoM2@_AeL:;i(]OWcGDuEUX\=W:==e'^p@3((%?I0s)^76#1*`f.?iNI0p+oJt1hS6Go^u&K,k)fc)TtS6%Vr
%W1rPhrK]c'#,IC'h)hl2VCfAPN1:S/G"":Q:9:Ape=*Kd*(\gaca)eGk-IpQ1UDhQC=O&PlNh>GZ,fY\T[q*\A;c[7XHNa=Ooe!C
%_pB=u6^931a'j231&tQ0MIPfI8=M@fn\(D1bc*;tYkM(Ii\5T)VS0.<H.B.hG2Wd=7#%2t&>,#XELid9-Na.9n4&,pMQX]pPh\Xo
%.R^ZP7gTGUeeH!#Y*XYZQRE5@QK5SmKLb/C!-Db/4k95?[s9NsArNU;PF;Yn:fo#GL+):Ll@[t[%>*Bbd>-VC]C&pWs(SE<cV6YA
%0!QCrDV`,,-B6P_glP5%7AfVK_q3q"&sU(d1sR2h"^^q<-KSF1MTCONV'IR+CF4rp[8u\M-Fo[a+#&P(U29@?'7LB^'"!f9q8>fT
%FVFiF9/?Y(.-MpsPN#)g[WbXQhRs'YV;PpV>APl="umol4sZbbp`[W1\6D=-cZhZ"Z9R\rUL:c@)AlR\eP"&d8GM^G+^.m6B3)W4
%19R^VdOe;!6$3pTErm`j.pkWV>/Vna!YC9$+C?oWqbVW%-rmHX+u-Il:mb>[,h4o0Q[n)ggb.*!HN=_t?<D8A/4s!6*At?#UTQma
%ea#e-iKag5ZX0Nl:pWG\%URRoqIPST"FEdY-d#%CML^kc5RC\NdXWVsCjB<%XRqpY`&bNiWF0c`Tp>iF):P(L9/hlC#RoAJZ9KW[
%Qtp;4Jk"tP's`RB1k#hECWaW1)[N:E6A-KJI.'!-j7BaTqgX4nGSsjje]QGb6s=3e5tZrd-mEKXN3*6qU4KoE7U\q0WH5JM.->JQ
%'iEXmWi$RBKYCKWC6n*+6l')``U6VQ;h-/EHc.UD^U+or7Cn7/p2N;n;7q@c-olKoBgq9C3.SRNT:pTf`da+H>Go#G3D%Ho#E^J;
%dA2#e9;&;(U6)o/ThHBiJ.7E5!/_oA'+UD2gECM;3cB'P3AZoG-XDnFk,H-+gSRu\A$c#CWe6\)X[\;_W(>OsI_:+kE.i9O?/V49
%g*X(u1/&%Zi"S-)0#ucG]%pFVW`m$-Y5CP`.IjLL*KtJ_):'piC9$NULn[RS3i54OWLEJgr0oA3QW`q%*R7;#f:3]$ln"?X;4c=s
%guFEO!@*CdW][dWWNUV>E!VJF`ZiB:D.9tZ@Q?5"ZOASDn\@7'2&9*q\Ki"^eS)Z?iGq?BQEWj;e9r'i[5G_WeZ0\BKFF8>AqCH&
%A2u&I\;'0uW_',$Y[PGJE:4n%1hnnQWfYphM\gXKM5q5eN-KmKj:Vj:4tRAX4=+o\dCmMX9t%Ml"r0NVMgMe1`<(9!2<;&Md2eQq
%3JbDJHXh'.`E7rQ<dat$!X@8:VlK\_^RYsdR>JGt/1gA15DW-C6\UUM\KE/c;:$%-&E`?('ZI"D:&]\L.u-mq94/4XL$[qU,F#_q
%bQIW@adR_8(6WK36V9K3e?g@"(ma@4Pjc0;^6NH].#dd:J:lJG3&+!Dd'E=EgFO*X[%[fDg8`Z%R8uTC&5baH:beW.XQikDJ3(<6
%]2d3%N(64!"VAj'C2jO]#f*rcbbGrC%Z;/jf]W$S85Bdofc2-XBRalBf5Artb,em\%,VRkMrc6%3l/?MZ=>jQS1:NO&K4,)(%6>C
%f_7DrQe<muhoRhE;[g\gCqD2p8rY5f!>*d6gKg3_)5&F]qS`rodVI6n;m"pT9]F,AY.)G2B,)*YQ^mjaqJ2s'_9>@X:d"p":Rj&d
%:A(osOiF5`_1EgSq('[0_plq6gp3M-kliB2bZ*tM69%(6!%]\'A^1;o4ZulWf\rBaf+mG[A72WDo-Hl?!V_lgW;1h-`5=ibL.P%e
%ES7n$@GqKJbHPmg90u-`M&Phd4NG]VLk!e$JK[,3;Ig,_C`BA%'nOFP6M`A'D28KlfsAY5!eXFsrk([?:u.f*Yb2uokVM<aU]+.q
%qblKS(5GMkG/[gWP]L%aKJ7-(bQlN0pV^l3Pp33N_k^%_Di!ck"!Z<[M0,-7bW5t]1WJcb7hBTaUe=N89\[^/[NlHQpo<Q]C$=dS
%IQOc;&ATq87,bjG.Z]?ZG1cE/.j,<MbfB6Z;72t;FZZg3nAR#'"S&'RC>T%h4jRKYf6[<ss!"cU*k">FYRH;e77cSi5t[9L=qjsO
%aZr^&I*5u<Nm\+?.eifmMgnsuP<4mnQhIU^1q/#68WjY;]9rAJne)ukjN(/9-E9mSqR2-5RV[u*(EL46:;DR:V$?6)n(T]S,/O,W
%_(;DMRZngu$ELuII4:=Jg+u#=]]k6F,6+R=;J.K?AW$H%2[U[="@NQRCg'<*@6\V&dB`PTg^BFASu_4`bM\d?!n!@2+9<=\lD\P?
%)=stCfm-5S:/=c.VOpBSeI9]_-YXKL*b%&`U`uLTLuA8]O_Ne<$jlpKC6A.-S*DX"Cu&foihlCu9.4K.Oud@g99mPUPO(IPs"^If
%10QtG5tL^K9%D'N'iH71-UgZs0$sA._O1IJ,l@emEB$Esn82ZOFkuH5`E<4H'(S0M.i%:UPEe!ue?btXAMViu-9i?!1ee/`3jRJ<
%%**<K(0W^D&*K+SXKI*_j0.4:6^@^[CodV+d]:g[an1Cics?uST+?.V+06I]Y[$"b@\=)O0"u.']Js6+B?f+IWM\.+Snuk"$U^'#
%Jj[B+dBF#j/EW^Q^3<439QR27TXb3D*6j)YVD0W.5cZJ5;)CVH=NujBlfI)(5>6pKbY0PhK_hP7R-6ph!O3pK-aG!),`:0mV;A_X
%AG-F9MK;)77=mX+9'QqCZrmiMTF@@MN248M3pC?WQ<!NbA4!PP;HfT!XJ:%61pT+`g5;nF=IQ6p>HAQZC7+^Zg]D;+9O0fjbc\`f
%Er.P^e#`\+H:5-1<i:ZTkV<[-j>'H.@s"h\@$k8O82J6PjGa`-P@-3O[Bd[YGQMW?,QIOiIXG<]oV0#$qt?i,S->jM#$:XK6BP]"
%!Br[J>"_]Lnfp_?%d+*GTk\nhoV$S8&D)XQ6)!](900!S=H:Di*76,V2pc75,t1FZ0i`iWer*)\DE`D4]b%q1_(pY`!/.JEZ\kG"
%5^H*-n/9`1X<j/'_([n1D.kLFGG6Kn^Om6lTa82rL4Y7!i`fqQ"cCkeBG$ktF?fmn)T#K$SE'*/ahW?N&c:t4/jWCJITaS9;-Bjl
%QJe/@M@.B9aXq2,:+!@u*g8pr5f!g\MDQ'YCtL=+cc@CV+>;s1KK%,tE?J)^7#FnNTGhDN<!S7`N8QI-Z&"NcTd3?IT&FRd4[@O_
%>1T`0Uui(!,<*s(:!$0E#ufS'64Ormn>nU6Nf>sl'#`N>.?&)_S)_"@">Gu_r>J^mTSf)QQj@T*aDg6/#_&(<V*l3*_*/$'IY^+o
%--?hU@HAi,6<)./V4kD>4qaK)))`qQU'T42YX:>8/@AW6:^]<fYa"f-\c^,MlI\d0-<pa&&ca9j7b8TT-d+^p'$?>OP-\0H.#6`:
%+opgt*Jt32\X>>_==kYBlCT,ZXYgZL-j1;7@&X3MT^37Z*7'a.oG1+e6ZG3qd*31IGX1gdNB;g>R-8YeBH+F''A_'t-?Yt92ClUP
%(`4,-/Xep-/[$t2A0)<<4QI/]Jqre]cP%UK\@G3P</jFW&tQ+-qMd91*+41sh=B?OY/!s26)6(OejOnGK^Er1;BSYKGDSPH$QW?U
%-b&R`*r&HSU4C_7>5]$CAGnj.ioQ3a2@rB9+=k2]6;.H^l'aq+3)dZb!L:T2W8r"/^-jJ-gP6uo$0J2A+P6`,Fq[n.;n8?],oO'>
%LuO(J;N+)3=3Eo3j,bmHF(N[Wcn>O\=&X$80ObTm!G=qYLjE-AR7#7BQ0sVA9uB[t]`Hb&^qUT!AjA;XR]^WG!Q5_VkrQ&Z,DtgX
%8;j4/Ljq.DNl(Hcb%Wh"8+hFT6af&Ys(UsT+p@Y.*q2<h_W&"m@h&m&S*nA9,DmE+80.#`Xf7U2,-_ZTA_rJ6-hm)C5<?fiah#u.
%@#i0i1EI^/g%,o<m:>ir-,b:b`("q5L_Jm/(LZru.^^tR%d`hDi]_@X7IX/20'$LRm`LtD=?s:H:/q2+qcX4g.s/:(?O[`J8Np;i
%_k(OH]5P!lB>ShMN3\`l&_sFfb!^5F4]94)=f;GG2CjKQE)i!DeA2(*^a"rLVW<(X)hc&:X'KZZlT\uXJ"gR>lN34[#rE2lNS//O
%@"qL:;V6&LW]l#m18%rTN@:S2,YdZd<MHU+mgq0Ia@&Y@<rkNW.Gj>]hlNLG%AMO6<Tc5.X?]sE-Dp*_M1P)"8eQ%RY!%TX8a@S.
%n('?j35c<^S*9Nal5DNh`4h&X:DE)VP''BkOp4;fU>`9+N?Qm2$RispTl&`F#2dD0)urK(@SdJ./S`l@6oUj19)$?C7aFQUKU+b;
%.7U:8%Q9AI^Pu/WLnr#@cF%C5_?B-VMPB3]UeB\TXBLm<U4a<igTaGN!()p=9d^'?Dalf))5NB)cH8cMACsD8HZZ<VAopC'#k^WE
%n.Hg?/8dUK"_Y.3<'"Y/KTfuE!jW/8:QkKG_d105E^Z7=@#>qX86_)rKII-p>$`'\'d#>J[=\N]iMWpPl\95Po?aC%De0T5T-E*c
%*@REH,bOLLg8&uR!5-9m+'EY81DM@AHSC1<rtJSm#9<0F5Y-cV#P:mHeK1LtBntn%c4F(J[3B]g?W`LLN[mbXlc7@b&<4juGnt6i
%h'c?\B%'@?c++JYL6-J.TfEj"m,0i+#qeCs:im,@^]9U(+(DF1(5J"II(Ft$YZ8coE:b2j'm<f<rShRd\0;\B3U7bQK0p'u4f^FN
%V__g"YVor%+dKWOJe]0BQl(DF8Kj'UGM;0tZ&]4@[*ko/5a$AV;<.BngdLt,Wj!'#1M^F-K/3O.);"h>^R5u.M%Y8J.OK:Y"-cS^
%[h6_1Kn#EZ2[?Gg8H?6UV8BnUJlTbq9[Vn>LjB,sN[==Sqo:].0o"*8`M2GKe>3BE,>Z#&UH:$r]P;s-->';sn3KnBNMTCHTFl)d
%6S/M9Tc:o"%*80TJH*h8'MS"j+sV[MAmW/B$gA@H1HS?&j@c*Po5dkL(?Hk?/_n9#B;rbn*TWNtKjt0$/i@E&I?&)IWAcb2W1&bq
%JFIGS60j6J)5clX2IQOtX#hOMON*"XZO%pG"sj@I44G$gbTX(Kd;RZ*Lnr#$,8bE<[otSC3eB@iEY=Ch";@Uk;/tA551#pKM-h#Z
%O3kT$6s,K5_A<fW^Ylh:,LDh;JVPOcYo-AKOHcn:_Rf[SacP@FBf&PrEZ/b2.".=;"\+H?MFLGJaK]\p'?pkj]DBnM\uLXr92ZU(
%<(bFA^I'\KWaoP$UMM]<s/p+@<'DbfMDdiI@f#W=+mpX@<a2s(&['2YSD4Bqa\'!dLC9iOJeX&$Xq9Y1Z^\;=C-4E2c!&cd0LbbT
%bFu,A%D?\#csr9:a-tb@kXZ=W=SW2)1mmG>IP^E2E"!UC2G,1U1\BIjN.Pa,\-N][O$phkFq;#R7Y>bSO@R'>^cp^I[MqL$a]/1Z
%ci#Cgk7K84i69K&*s7S,A:k;##%,S(K,fc7UmknFXO1Su$6WuqM;dZ7rdk71;R&>@;M:DP&@%OS,(_$bE1OA1T3(!^($sbK"ErDU
%>XK_.nH]n+A=ugX%oaZu`GU$.;kk8J_[JJ)deX-8_Ccd6\Vr/-+>\H#.ctEY`#Bk^ouO-U)VHUf:hEnaW1aXYjf+8M&.\*(Y%`S2
%#$N9,bpj7f`m"Fj9s`<%5shr&Fq)&SF2Vit/3/51aY5QPC)uBin:?a:VMTgUgf27f0/<0BN;%8(__mVpd-?5C*E`!Z."g'V0/G!g
%Btn3:f2]b#[SDNNluJVqc8u*g.J`sVL(GgH8@VU#a9sd7J3,kJ$1RDn<=h0WEW`fqmj?cB-hbIMs)Zp9%$iBEd34WTrP8JU_mYs$
%E&_Zl;P+\DF!,_Q1W&HC#@6FjKAa!>4<<gFeYCR=2c(UmU$!Bc&%YI*BFuEoc.s,%8E6=^S&':kh@S%UFE+>@&X\qK']oZj._Y/&
%F6(W/oPtFt9WWM:W?<R.i+7RQ=6&9F;IXB1_L\'k^.KmbJ7^&l\AqmAqqd.=@Z/K3p#Ob&/;2`A7n('MB_GHMSROPm)LgouF3&+!
%`Za<n<glZ^j6N?7@:&m-9qFD7`mu0Y#R=QXWt(:;n+ifZ+bA&F;8CrjWBg&Q2a-Hq]qd!q*TrcjR8#Z&X=lA7lj2T6O46FNoLlf^
%h$R+9]PG;>B"#?Tn\C+Q;.&j65nr`+V"/btrBdCBY<\!<g)f)cG4Ef<iP<ub^k)bV]]YF2LO`Z.=1`m`2rF;S4-:A4&e*k&1GUcR
%OCUs,,/!?:d4"R/`s,c.IOWMA%,V8O<Zi4dNji"pdY!iqaB4(/#-4MC3AfJ9i&d;b=e>&3oTD#.3LC?3MJ,A4r$?,kEl/*enN^0_
%7@#Ks6[fRY*(*t<l!VG*K-sM@,*/]O8g^A(()i)9YS&N!0qP@)SC+(%f`1"R>*qmf65i9C2A-Ya1^bEu8u;-0Te-FhcjcpFG&arO
%.#-/Llm>*mb0?sBV!-@\Aoglt@^]/dT\(nlDf"0C2FClX-Na!_J\n'6CskRjP^e@U!hGut:rB+V0E,q_.ZCj[[NUF:Eo51MO:aT+
%9\!V)H@dnc]TqH^[^a;P>n@EubK2--VIt3>/qZBt+bBR@V:?`LT?N\@<t/'dhOA+Y'7-"93?^`]R)(P`/;Dk6&mj-u>4@!f39r>;
%>lt9d:s_$J+:(<DO]&A23('BbCU5MeZKLM=KOUea>[1n<>\[>55qsEL_F>+AM+<k&-1R-m,,q"<F]9[2OJN3D@t[D4l$tV$+!`^_
%"j4s\'ikh,Qqo,>1QU"X#4GTFk6OsHb>$BN%Q-Zj9GW=l;E64Ai!OE\,9`TUdonFB@I*"&-'(P`r;O)GVT#0S*hnWtf!q?G-fI'Y
%O']`n+\o;>"WJad4H6@kLd:4rr^?TuOm\2qP;m<DQN&M;:-]h_W1Q3uQ[pLnP(8X]0eTJa?*3IO@)k:W>q@IG<$]:U!^&=7A7@p%
%)ose>S3\t,NlFKRd(+[04!YP[%\I:W"d@9(`'L'LH%phbAW\>B3rOd^`Mm!bE<>o7.#]^199^oiK;HMInbC@XI#^T[jh'7]]_fKO
%s32>Wl@8-7rNH8!&&8,"s7cD?q;j9=i9,Ua]79bWs7hr<rBL>Sqg\Fp?iB$"rpJZns64b-r6Klf\)7/=n,M#=X&&cj0>IP=J,@-u
%r;P0[rni5#%nLZ&TCDHEs4@;E[m0bjru^[3n/_~>
%AI9_PrivateDataEnd
