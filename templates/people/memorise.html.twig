{% extends 'base.html.twig' %}

{% block title %}Hello peopleController!
{% endblock %}

{% block body %}
	<div class="container-fluid">
		<div class="container">
			<div class="row">
				<div class="col-12 col-lg-6 offset-lg-3 text-center">

					<p class="font-weight-bold">Time :</p>

					<div>
						<p class="time-display">
							<span class="minutes-display">{{ peopleMinutes }}</span>
							:
							<span class="secondes-display">{{ peopleSecondes }}</span>
						</p>
					</div>
					<div class="progress">
						<div class="progress-bar progress-bar-striped progress-bar-animated" role="progressbar" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100" style="width: 0%"></div>
					</div>
					<p class="font-weight-bold mt-5">Memorise this :</p>
					{# <p class="generated-nums">{{peoplesDisplay}}</p> #}
					{# <pre>
								{{ dump(peopleList) }}
							</pre> #}
					<div class="d-flex flex-wrap mb-3 justify-content-center">
						<script>
							var generatedPeople = [];
							var person = [];
						</script>
						{% set person = [] %}
						{% set personfirstName = '' %}
						{% for i in range(1, peopleQuantity) %}
							<div class="generated-person mb-4">
								<p>{{peopleList[i].firstName}}
									<span class="last-name">{{peopleList[i].lastName}}</span></p>
								<p>{{peopleList[i].address}}</p>
								<p>{{peopleList[i].town}},
									{{peopleList[i].postalCode}}</p>
								<p>{{peopleList[i].job}}</p>
								<p>{{peopleList[i].age}}
									ans</p>
							</div>

							{% set person = [] %}
							{% set personKey = i %}
							{% set personFirstName = peopleList[i].firstName %}
							{% set personLastName = peopleList[i].lastName %}
							{% set personAddress = peopleList[i].address %}
							{% set personTown = peopleList[i].town %}
							{% set personPostalCode = peopleList[i].postalCode %}
							{% set personJob = peopleList[i].job %}
							{% set personAge = peopleList[i].age %}
							<script>
								person.push("{{ personFirstName }}");
								person.push("{{ personLastName }}");
								person.push("{{ personAddress }}");
								person.push("{{ personTown }}");
								person.push("{{ personPostalCode }}");
								person.push("{{ personJob }}");
								person.push("{{ personAge }}");
								generatedPeople["{{ personKey }}"] = person;
								person = [];
							</script>
						{% endfor %}
					</div>
					<button id="ready-btn">
						Ready!
					</button>

				</div>
			</div>
		</div>
	</div>


	<script>
		console.log('generatedPeople : ', generatedPeople);
		var minutes = {{ peopleMinutes }};
		var secondes = {{ peopleSecondes }};
		const fullTimeInSecondes = (minutes * 60) + secondes;
		var timeout;

		function timer() {

		if (secondes === 0) {
		minutes = minutes - 1;
		secondes = 60;
		}
		secondes = secondes - 1;

		// stringy minutes for extra zero in front
		if (minutes < 10) {
		var stringyMins = "0" + minutes;
		} else {
		var stringyMins = minutes;
		}

		// stringy secondes for extra zero in front
		if (secondes < 10) {
		var stringySecs = "0" + secondes;
		} else {
		var stringySecs = secondes;
		}


		var minDisplay = document.querySelector(".minutes-display");
		minDisplay.innerText = stringyMins;

		var secDisplay = document.querySelector(".secondes-display");
		secDisplay.innerText = stringySecs;

		var currentFullTimeInSecondes = (minutes * 60) + secondes;
		var progressPercent = (currentFullTimeInSecondes * 100) / fullTimeInSecondes;
		// console.log(progressPercent);
		var progressBar = document.querySelector(".progress-bar");
		progressBar.style.width = progressPercent + "%";


		timeout = setTimeout(timer, 1000);
		if (minutes === 0 && secondes === 0) { // alert("Time over!");
		clearTimeout(timeout);
		ajaxCallAsynch("people", generatedPeople);
		}
		}


		// ajax
		function ajaxCallAsynch(section, generatedPeople) { // console.dir(myForm);
		console.log('section : ', section);
		console.log('generatedPeople : ', generatedPeople);

		console.log(section);

		if (section === undefined) {
		console.log("end ajax default ", section);
		return;
		} else {
		console.log("coucou ajax");
		}

		var formData = new FormData();
		var jsonString = JSON.stringify(generatedPeople);
		formData.append("data", jsonString);
		var myInit = {
		method: 'POST',
		body: formData
		};


		fetch (`/${section}/memorise/end`, myInit).then(function (response) {

		console.dir(response);
		return response.text();

		}).then(function (data) {
		console.log("data : ", data);
		if (data != "") {
		location.href = '/people/recall';
		console.log("redirect");
		console.log('generatedPeople : ', generatedPeople);

		}


		});


		}

		// END AJAX

		document.querySelector('#ready-btn').addEventListener('click', () => {
		ajaxCallAsynch("people", generatedPeople);
		});

		timer();
	</script>
{% endblock %}
